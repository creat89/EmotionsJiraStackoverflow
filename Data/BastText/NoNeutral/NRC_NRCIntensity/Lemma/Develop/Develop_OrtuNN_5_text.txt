__label__joy	cool , no worry .
__label__joy	thank you , guy !
__label__joy	i think this be pretty close to be ready .
__label__joy	nice try üôÇ i be mr i do nt believe in magic from the very beginning .
__label__joy	sound good claudio .
__label__joy	i really appreciate your comment and i really enjoy our discussion :)
__label__joy	upvote the patch look good to me .
__label__joy	version 0rc0 be fine .
__label__joy	patch apply with thanks !
__label__joy	thank you for the source code , but why do not you also attach a diff file you get by run ' svn diff ' ? it will help us figure out which part be change exactly . thanks in advance ! your idea sound very good , though . üòÉ
__label__joy	thanks ! i have not try it yet , but it look good to me .
__label__joy	cheer !
__label__joy	. look good to me .
__label__joy	look good . bq. i do not add version to stopfilter nor stopanalyzer ; i think it 's good to up-front require the " enablepositionincrements " to their ctors . i would add it to stopanalyzer , stopfilter be not so important ( because low - level ) . but that 's my opinion .
__label__joy	look good . . check this in.
__label__joy	@subbu : glad i be able to help .
__label__joy	. the patch look good .
__label__joy	cool - good information to have . thanks lance !
__label__joy	upvote , look good . i will commit once hcatalog- be in.
__label__joy	that 's a good point ; we should make sure that it do not decrease performance for #crd# of the database type , even if it increase it for oracle ( in which case , make it configurable in #hlink# would be a good idea too ) .
__label__joy	upvote patch look good . thanks a lot !
__label__joy	cool , thanks daniel , we be actually cool with either update it to e0ff0c0 or flip the write bit and we will push the delta ourselves - whatever 's the fast to get to writeable :) thanks , -- tim
__label__anger	forget the patch for the moment .
__label__anger	doh !
__label__anger	this be a pretty awful bug .
__label__anger	credit , of course , go to dick .
__label__anger	i do not want #crd# - offs like this to become lose and forget .
__label__anger	i be an idiot .
__label__anger	swear to god , i be not a total idiot .
__label__anger	i be an idiot .
__label__anger	which be silly -- bad package encapsulation ) .
__label__anger	holy complicated - as - shit - algorithm , batman ! the complexity of our implementation vs the complexity of what we be actually do be start to worry me here .
__label__anger	it may suck , but at least * i * wo not be the #crd# bring in a dumb dependency to a logging library .
__label__anger	i be a pretty strong on this .
__label__anger	but please do not say that my reasoning be bad - because it be not .
__label__anger	for those of us who do not care about ivy in fact lose something - a easy to build hbase .
__label__anger	[ ~ cmccabe ] : oh , hell no !
__label__anger	bloody hell ! ! !
__label__anger	what a stupid name i choose for that object ‚Ä¶ ) - :
__label__anger	all i be try to say be that it 's pretty easy to end up in propagation failure hell here or change something else that blow thing up for use case that be not foresee .
__label__anger	this just seem really evil .
__label__anger	my bad , this be already do .
__label__anger	this have be in resolve state for over #crd# year so now close ; if it turn out to not be fix please re-open .
__label__anger	i really mean to remove this functionality : what be the use for it anyway ? it do not hurt today ( except for a few byte eat ) but it may be confusing . so ; if there be no clear use and requirement for it ; i suggest to just remove it .
__label__anger	sound weird to me ‚Ä¶ could you package a ( totally ! )
__label__anger	{ quote } searcher . getatomicreader ( ) . getsorteddocvalues ( uniquekey ) ; { quote } this be a performance killer .
__label__anger	oopps , bad move !
__label__anger	my bad .
__label__anger	doh !
__label__sadness	sorry guy
__label__sadness	in current version the same error cause different message because there be many commiters .
__label__sadness	sorry about that .
__label__sadness	grumble , grumble ‚Ä¶
__label__sadness	i have no idea about fetch binary datum , sorry . be it flash ? look like my patch address all #crd# point , fail only for handle raw byte .
__label__sadness	* sorry *
__label__sadness	üôÇ sorry about that .
__label__sadness	sorry once again for the wrong report , stephane
__label__sadness	sorry , this new patch be the correct #crd# . still learn the rope üôÇ
__label__sadness	sorry i do not use your patch , but i think you will like the end result .
__label__sadness	ugh , sorry ‚òπÔ∏è thanks !
__label__sadness	maksim , it be my local misconfiguration , sorry for the trouble . apply at revision : , thanks !
__label__sadness	i hope someone can fix this ; but i know that at this time it 's not something i can tackle without generous hand - holding . if there be no taker soon ; i will go ahead and close the issue . this be part of an effort to close old issue that i have report . search tag : elyograg0springclean
__label__sadness	no unit test , sorry ( but there 's not much deltaquery coverage anyway ) .
__label__sadness	hi andreas , sorry for my late reply . i have not look in to the difference between use the responsebuilder#getfilters and use filter 's in a normal query . be there any functional difference between the #crd# way other than that #crd# of them utilize solr 's filtercache and the other do not ?
__label__sadness	sorry for be confusing .
__label__sadness	i be sorry if you think this be nit picking but the log error still refer to plugins . xml but it should not : { code } log.e ( tag , " error : config . xml be miss . add r / xml / plugins . xml to your project . " ) ; { code }
__label__sadness	oops - the hivemodule . xml snippet from the previous post should read : < implementation service - id = " #hlink# " > < create - instance class = " #hlink# , sizemax = downvote " model = " threaded " / > < / implementation > sorry for any potential confusion ‚Ä¶
__label__sadness	bummer ! -- the solution too this problem be that my jvm have too little memory ( 0mb ) for allocate all the byte buffer require for writing / reading serialize page .
__label__sadness	hello , sure you be right here , i do not make myself clear enough im sorry . as you ( and rfc0 ) say , when we be send the file we should transform to nvt - ascii but not when we be receive the file . in this #ord# case , i think that the expect behaviour be that the text message be write to a file with the default line separator for the platform . the sender convert the datum from an internal character representation to the standard - bit nvt - ascii representation ( see the telnet specification ) . the receiver will convert the datum from the standard form to his own internal form . actually , accord to the spec before a retr ascii operation be transform we should be convert the charset to ascii , for our machine could be use ebcdic to store file and client be suppose to expect that file be encode in nvt - ascii . so i do not know .. any way , this have little priority for me ( until someone use a non-ascii - compatible encoding complain ) so we could leave this for the future . any way i do not like ascii mode for it break the ' rest ' command . my implementation only support binary mode .
__label__sadness	sorry , miss this .
__label__sadness	i meet the same problem on eclipse recently but have not figure out how to get through .
__label__sadness	sorry to be late get back to this . be a very busy week -- just get some time this afternoon and evening . the attach configurablesimplehttpserver . patch provide facility to fully configure a simplehttpserver for production use . a new class httpfactory be introduce that be a ) configurable with the most commonly set parameter , like request core thread pool size , request socket timeout , origin server header , etc. , and b ) specializable to supply factory method to override all the default class instantiate by simplehttpserver . this be important to achieve thing like a bound request queue . the parameter be also all settable in #hlink# as part of the http transportin config . all axis0 test pass , plus i have update my application with a custom specialization of httpfactory that be heavily configure and it also work properly . i would like to look this over again tomorrow , and test the #hlink# feature ( not test yet ) , but want to post this #ord# version now to get comment on the approach . deepal , dim suggest you might be the right person to look this over ? also , oleg , i would appreciate any thought you have . the patch be against my local repository , but i expect it will apply against the svn head since simplehttpserver patch apply against ( with different offset for the hunk in #crd# file ) . if there be any issue , i will make sure it apply cleanly against svn head tomorrow . thanks , chuck
__label__sadness	sorry it take so long to drag this up . i think the issue i have be with the customer = > billinginfo and customer = > shippinginfo relationship . billinginfo and shippinginfo each inherit from address . iirc , a runtime relationship be be create for customer = > address , which be mess thing up . i will have to dig through the svn history to see what i do with mandatory relationship that i mention be problematic in the initial bug submission .
__label__sadness	my oops , then . i have not define it , i be assume that it would be handle like the other special characters‚Ä¶.sorry for the trouble .
__label__sadness	here be addendum to fix ( sorry about build breakage )
__label__sadness	completely miss issue ‚Ä¶
__label__sadness	sorry .
__label__sadness	sorry for the late review . have a few minor question / comment . . what happen if have instance of consumer with the same clientid in the same jvm ? do #crd# of them fail because it fail to register metrics ? ditto for producer . . consumertopicstats : what if a topic be name alltopics ? we use to handle this by add a - in topic specific stat . . zookeeperconsumerconnector : do we need to validate groupid ? . clientid : do the clientid length need to be different from topic length ? . abstractfetcherthread : when build a fetch request , do we need to pass in brokerinfo as part of the client id ? brokerinfo contain the source broker info and the fetch request be always make to the source broker .
__label__sadness	the problem i be talk about be mostly fix by [ hadoop- ] and [ hadoop- ] .
__label__sadness	sorry , this bug be * not * fix .
__label__sadness	sorry that i think i miss some discussion in the mailing list .
__label__sadness	carl - sorry i miss that though i do see it on the log 0x , the other be this #crd# . fix in this patch .
__label__sadness	sorry for the noise ‚Ä¶
__label__sadness	thanks andreas , patch apply to head of cvs only . please check and then close this bug report . you allude to other issue with the sitebuilder app . would you please add a new bug report with whatever hint that you can manage . then other can follow up . p.s. it must have be my mistake with the patch format . use gunzip do finally work . sorry to waste your time . -- david
__label__fear	if i see it correctly ; the current implementation create a resource provider for each symlink - i fear what happen if there be #crd# or #crd# of symlinks
__label__love __label__joy	that 's nice ! the patch look good emanuele üôÇ
__label__love __label__joy	thanks for the patch michael van geertruy üôÇ
__label__love __label__joy	thanks jon . . patch look good . minor nitpick i have be that it would be nice to give the test a more relevant name than testautomaticallymadename . something like testrelationaliasforbincond . but i be not go to insist .
__label__love __label__joy	great ! thanks a lot . i suppose it will be in the next nightly build ? vbr johan
__label__love __label__joy	this work fine . it probably could have be do in another valve ( like the policy conetxt valve ) , but this be a reasonable solution as well . thanks .
__label__love __label__joy	good suggestion claus and thanks alexander for the fast realization .
__label__love	i commit this . thanks , miki !
__label__love	re font size : sound reasonable . thanks .
__label__love	ahhh sweet , i be guess you have an ide that do this ? if the test pass commit , this kinda crap go out of date too fast !
__label__love	thanks brock !
__label__love	thanks malith for your contribution‚Ä¶.patch commit under rev.
__label__love	i just commit this , thanks ari .
__label__love	thanks uma for look at the jira . i think it should work fine with bpofferservice#registrationsucceeded ( .. ) synchronize . will post a patch soon after verify it .
__label__love	thanks for the patch .
__label__love	hi daisy , could you please dispatch this review to #crd# of your team ? mingfei do not respond on that and i would like to be certain we get all provided patch with us for . thanks in advance , svante
__label__love	good regard , richard
__label__love	upvote patch look good . please submit the patch for verification so it can be commit into the trunk and merge all the way back . thanks .
__label__love	jacopo , thank you for your work ! i will test it today and let you know what i find .
__label__love	thank you thejas for the patch and ivan for the review .
__label__love	@mahadev - i would love to help test a patch üôÇ i be currently use + zookeeper- + zookeeper- , apply in that order .
__label__love	thanks steve !
__label__love	hi chris , thanks for your detailed response . thanks ,
__label__love	commit to trunk . thanks , harish !
__label__love	thanks , rick !
__label__love	this patch really help .
__label__love	commit . thanks !
__label__love	thanks thomas !
__label__love	thanks , myrna .
__label__love	commit ! thanks namit !
__label__love	i just commit this . thanks , hairong !
__label__love	commit r0 , thanks flavio .
__label__love	patch apply . good work adrian !
__label__love	commit to , branch- - security , , and trunk . thanks , dave !
__label__love	commit , thanks jiayan !
__label__love	thanks for figure this #crd# out and provide the patch , jamie !
__label__love	review request for hive . change -- address ning 's comment . do the minimum change and the performance be acceptable . we can try to remove empty path check if in future we see the latency be not good . summary -- speedup addinputpaths this address bug hive- . #hlink# diff ( update ) -- trunk / ql / src / java / org / apache / hadoop / hive / ql / exec / execdriver . java trunk / ql / src / java / org / apache / hadoop / hive / ql / io / combinehiveinputformat . java diff : #hlink# testing -- yes . thanks , yongqiang
__label__love	i have commit the patch for trunk . thanks , tanping !
__label__love	thanks ivan for take a look . i will go through and work on this weekend .
__label__love	. my feeling be that " if ( file . lastmodified ( ) < now + access_time_resolution ) " be not necessary , since the lastmodified value will already be truncate to the system resolution , but i do not think it be harmful . . i choose to throw exception only if file . canwrite , because i be try to minimise the impact of the change . it 's not clear to me whether setlastmodified might work when ! file . canwrite . however , it certainly must work ( because of gc ) if file . canwrite . i would consider move the canwrite test outside of the setlastmodified call , similar to getrecordifstored , it just be not necessary to fix the immediate problem . . well , not swallow exactly , but catch and convert to failure return code ( downvote ) e.g. see blobindatastore . getsize . in any case , the javadoc for #hlink# document downvote as a possible " failure " return code , so it have to be test . i think if #hlink# throw an exception , that be already correctly handle . thanks for the quick response .
__label__love	i have try patch the current svn version of tapestry - core , but the patch do not work for me either , though no failure message , just silently do nothing when try to get a page ( ) . this be a homebrewed version of the " quickstart " app . directory structure be explode / #hlink# jboss be set to deploy the explode / directory . pack the jar in web - inf / lib work , but jboss / tomcat can not do reloading or hot deployment in this case , which be very annoying . it would be nice if i could get this to work üôÇ use jboss
__label__love	hi [ ~ justinedelson ] , thanks for apply the patch and fix the formatting .
__label__love	super , i will commit shortly -- thanks yonik !
__label__love	integrate to and trunk . thanks for the patch jimmy . thanks for the review , andy .
__label__love	thanks to jakob korherr for this patch
__label__love	commit to sqoop0 . thanks jarcec !
__label__love	. look good to me .
__label__love	thanks to both for these usability enhancement !
__label__love	hi vincent , thanks very much for take the time to look closely at my patch . ( in reply to comment # ) > ( in reply to comment # ) > > ( in reply to comment # ) > > > adrian , thanks for do this ! i have look at the patch and have a few comment > > > myself : > > > - i would suggest to rename " strict - configuration " to " validate - configuration " ( just > > > a personal preference ) . > > > > the configuration will still be validate regardless of the setting of this > > variable . its just how the error be handle that make the difference . if > > " strict - configuration " be true then fop will immediately throw an exception and > > processing will terminate . if " strict - configuration " be set to false then fop > > will log the error and attempt to continue parse the configuration ( if > > possible / meaningful ) . > > > > > - the name of the variable " strictfo " in fopfactory . configure ( configuration ) > > > seem wrong . there 's nothing " fo " specific there . furthermore , some " if > > > ( strictfo ) " should actually be " if ( strictconfig ) " , right ? > > > > i think you may have be look at an old patch . the variable > > " strictvalidation " be as before and the new variable be call > > " strictuserconfigvalidation " . > > no , jeremias be right actually . there be ' if ( strictfo ) ' statement to test if > an exception have to be throw . that should be ' if > ( validateuserconfigstrictly ( )) ' . i should have good look . darn it ‚Ä¶ i do not think jeremias be refer to the configure method . i miss this , thanks . > also , in the new code a hyphenationtreeresolver be no long create and > assign to the hyphresolver field . that should inevitably lead to > a nullpointerexception later , however the hyphenation junit test pass . strange . > be you sure of what you be do ? thanks for check this , i make a mistake refactoring here ‚òπÔ∏è . > #crd# other thing : when get the default - page - setting parameter it 's not > necessary to test if pageconfig be null ; it will never be . see the javadoc of > getchild . i have read the javadoc and have simplify / remove this unnecessary check now . > > > > > adrian , would you please install the checkstyle plug - in in your ide ? there be a > > > few nit about the java style in your patch . checkstyle will help you find them . > > something checkstyle do not seem to be catch : we usually do not put space > inside bracket : if ( test ) instead of if ( test ) . yes i have notice this recently and believe all the code i have add adhere to this now . > > > > > > get well quickly , adrian ! > > > > after a weekend in bed be feel much good today thanks . i have instal > > checksytle but not enable it ! ;-( i will recreate the patch this morning . > > hope you feel good now ! > > sorry , i will ask you to create yet another patch , but that should really be the > last #crd# ! its ok , i be learn all the bump for fop patch submission - hopefully should be smooth for you guy next time üôÇ . kind regard , adrian .
__label__love	take it over thanks , mayank
__label__love	i just commit this . thank you scott and priyo .
__label__love	commit . thanks ning
__label__love	[ ~ thiru_mg ] - thanks for the patch ! look forward to it land in
__label__love	knut anders , thanks for the review and the good advice . the attach patch , #hlink# , should address your comment .
__label__love	thanks sven !
__label__love	commit , thanks dave
__label__love	fix in svn revision . thanks , dim
__label__love	i just commit this to trunk , thanks owen
__label__love	thank you jing .
__label__love	apply the patch . thanks dennis !
__label__love	oh , well . many thanks , anyways oleg
__label__love	patch commit to trunk and branch . zhijie , thanks for the patch !
__label__love	thanks
__label__love	keith - this be do . thanks
__label__love	thanks !
__label__love	merge the batch file update to branch / ( revision ) . thanks again !
__label__surprise	it 's a feature which seem to be enable by default .
__label__surprise	be it by mistake ?
__label__love __label__sadness	my apology - i submit the wrong patch file . i have check the trunk and what you apply be correct so i wo not re submit . thanks for cover my sloppiness .
