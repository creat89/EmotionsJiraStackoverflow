__label__neutral	neutral_0	duplicate of WW-1598
__label__neutral	neutral_1	Here is a complete patch removing Composite* from the getImplementation() calls
__label__joy	joy_0	As suggested above; I moved the detector classes from o.a.t.detect to o.a.t.parser subpackages in revision 1159985. That should complete the last remaining open issue with this feature; so resolving as fixed.
__label__neutral	neutral_2	[branch_4x commit] Michael McCandless http://svn.apache.org/viewvc?view=revision&revision=1390137 SOLR-3879: don't ship servlet-api*.jar
__label__joy	joy_1	yay! it should be really really easy (not including the test; I think it's just deleting 6 characters)
__label__love	love_0	Thanks for the patch JÃŒ_rgen. Revision 1028760.
__label__neutral	neutral_3	Resolved in Version 1.2_QA_B1 . Therefore will be closing the issue
__label__neutral	neutral_4	Attention: - Please refer https://issues.apache.org/jira/browse/TRINIDAD-1145 for a possible fix
__label__neutral	neutral_5	Property editors may throw a PropertyException with a bundle key and this will then be localized in ActionSupport.
__label__neutral	neutral_6	Also fixed in main 0.9.7 branch
__label__neutral	neutral_7	It is just resolved in 2.0 and the changes for 1.x have been committed at the same moment. The dot: you'll find that the xml parser is not a general purpose xml parser complying to all details of xml. It doesn't have to. It just implements what is sufficient for Wicket. If only if there is a real need to implement an additional detail; than we'll do it. The dot; though in the spec; is nowhere used. So why bother and implement
__label__neutral	neutral_8	documentation needs updating
__label__anger	anger_0	I should have marked this resolved back in September.
__label__neutral	neutral_9	That is my understanding. Looking at the dtd; it only defines a type attribute (required) on the validator element; which doesn't make any sense for this file.
__label__neutral	neutral_10	committed
__label__neutral	neutral_11	commited a while back
__label__love	love_1	Patch applied. Thanks Florian.
__label__love __label__joy	love_joy_0	Ah; great; things are running now. Thanks guys.
__label__neutral	neutral_12	Closing old resolved issues
__label__neutral	neutral_13	build.xml cleanup... Committed revision 1368286. - trunk Committed revision 1368287. - 4x
__label__neutral	neutral_14	Integrated in Thrift #633 (See https://builds.apache.org/job/Thrift/633/) THRIFT-1879 Add support for GObject-Introspection (Revision a51186b7f2bd388d95485404017f05eb3b861074) Result = ABORTED roger : https://git-wip-us.apache.org/repos/asf?p=thrift.git&a=commit&h=a51186b7f2bd388d95485404017f05eb3b861074 Files : lib/c_glib/src/thrift/c_glib/transport/thrift_transport.h lib/c_glib/src/thrift/c_glib/server/thrift_simple_server.h lib/c_glib/src/thrift/c_glib/transport/thrift_buffered_transport.h lib/c_glib/src/thrift/c_glib/transport/thrift_framed_transport.h lib/c_glib/src/thrift/c_glib/protocol/thrift_protocol_factory.h lib/c_glib/src/thrift/c_glib/protocol/thrift_binary_protocol_factory.h lib/c_glib/src/thrift/c_glib/transport/thrift_server_socket.h lib/c_glib/src/thrift/c_glib/protocol/thrift_binary_protocol.h lib/c_glib/src/thrift/c_glib/server/thrift_server.h lib/c_glib/src/thrift/c_glib/transport/thrift_transport_factory.h lib/c_glib/src/thrift/c_glib/transport/thrift_server_transport.h lib/c_glib/src/thrift/c_glib/thrift_application_exception.h lib/c_glib/src/thrift/c_glib/transport/thrift_memory_buffer.h lib/c_glib/src/thrift/c_glib/transport/thrift_socket.h lib/c_glib/src/thrift/c_glib/protocol/thrift_protocol.h lib/c_glib/src/thrift/c_glib/thrift_struct.h
__label__neutral	neutral_15	in branch
__label__anger	anger_1	Bug Flavio more? Seriously; discuss with Flavio and come up with a patch & test that is deterministic. Another option would be to refactor to allow the code in question to be tested as a true unit test; rather than as a system test (we need to work on that in general in ZK). Mockito?
__label__neutral	neutral_16	This is on top of http://svn.apache.org/repos/asf/myfaces/trinidad/branches/2.0.0.1-branch
__label__neutral	neutral_17	Fixed with r1097472.
__label__fear	fear_0	I think with the latest code; this 'pop' message should only show up if an AVT is used with an incorrect value. If AVT's aren't used; the error should be caught statically and you should see the message: Illegal value: sideways used for ENUM attribute: order. Valid values are: ascending descending. Do we have a testcase where the invalid value is in an AVT?
__label__sadness	sadness_0	Oppss... sorry late reply.... Thx for handling this issue Claus. I prefered it to be the way it is now; document this behaviour as Claus already did. I think there might be both behaviour have its particular usage; if we want to have a param that is a string; it makes sense to use <param>...</param>; anything in between that's enclosed with %{} will be evaluated and its toString() called. On the other hand; if we want an object; we could used the value attribute. I guess what i'm trying to say is that both way of using param have their own usage. Of course this is just my 2 cents
__label__neutral	neutral_18	Integrated in ZooKeeper-trunk #1266 (See https://builds.apache.org/job/ZooKeeper-trunk/1266/) ZOOKEEPER-1104. CLONE - In QuorumTest; use the same 'for ( .. try { break } catch { } )' pattern in testFollowersStartAfterLeaders as in testSessionMove. (Eugene Koontz via mahadev) mahadev : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1157690 Files : /zookeeper/trunk/src/java/test/org/apache/zookeeper/test/QuorumTest.java /zookeeper/trunk/CHANGES.txt
__label__neutral	neutral_19	merged into piper commit d5b96f571c6c43c9e42dfdc78fd906b6b5254e67
__label__love	love_2	Patch is in. Thanks.
__label__neutral	neutral_20	patches applied
__label__love	love_3	Thanks for the patch; Michael. Applied with a few modifications.
__label__neutral	neutral_21	Closed issues related to Roller 5.0 release.
__label__surprise	surprise_0	woops; thought this was already fixed...
__label__neutral	neutral_22	Fixed in trunk (r555005).
__label__neutral	neutral_23	Confirmed with Dave that this can be closed.
__label__neutral	neutral_24	After the changes the error no longer appears in nightly build results. Closing as Fixed.
__label__neutral	neutral_25	Already resolved with WW-3414
__label__neutral	neutral_26	Applied patch from Jasvir. Also corrected case error in Enum type in Java
__label__surprise	surprise_1	I do have some interest in working on this; but it's not currently on my radar. Implementing SOLR-4241 would illustrate the issues that need fixing ... although if this is tackled first; writing SOLR-4241 would be much easier.
__label__neutral	neutral_27	reg_name has been accepted as valid URI syntax since Xerces 2.6.0. This may change in the future if XML Schema 1.0 moves up to the RFC 3986 syntax which excludes this production. Xerces CVS currently supports the XML Schema 1.0; 2nd edition which still references RFC 2396 for the anyURI type. The version of XML Schema 1.0 supported will be clearly marked in the documentation. The relevant RFCs for anyURI may be emphasized in a FAQ.
__label__neutral	neutral_28	Closing resolved/won't fix issues.
__label__neutral	neutral_29	[branch_4x commit] Mark Robert Miller http://svn.apache.org/viewvc?view=revision&revision=1427873 SOLR-4254: Harden the 'leader requests replica to recover' code path.
__label__neutral	neutral_30	As of r438174 ; the shopping-cart is parked in the sandbox (sandbox/struts2/apps/shopping-cart) waiting to see if someone's wants to maintain it; but it hasn't been removed from the repository yet.
__label__neutral	neutral_31	Integrated in Hadoop-Mapreduce-trunk #1386 (See https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1386/) YARN-209. Fix CapacityScheduler to trigger application-activation when the cluster capacity changes. Contributed by Zhijie Shen. (Revision 1461773) Result = SUCCESS vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1461773 Files : /hadoop/common/trunk/hadoop-yarn-project/CHANGES.txt /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestRM.java /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/TestLeafQueue.java
__label__neutral	neutral_32	Fixed in revision 406707.
__label__love	love_4	Thanks for the issue / steps to resolve. Pretty much did what you said verbatim. (as it worked out on the other regexp issue)
__label__neutral	neutral_33	rules/
__label__love	love_5	Patch applied. Thanks!
__label__neutral	neutral_34	patch applied.
__label__neutral	neutral_35	Variables specified in data config are also resolved with system properties so there is no reason anymore to configure DIH via solrconfig. Hence; the bug can be worked around by using dataconfig instead of configuring via solrconfig.
__label__joy	joy_2	Awesome. I actually did find two more non-code files - the readme docs in java/social-api/ and have added them as deletes to my client. Good to know it checks out with you though. Unless anybody objects I'll submit this relatively soon.
__label__love	love_6	Patch applied. Thanks
__label__neutral	neutral_36	The above commits were approved by Justin on the dev list; and have now been merged to the 0.18 branch.
__label__love	love_7	This works great for me; but it has demonstrated another issue when some Tapestry's script files try to use the clientId in order to create javascript identifiers for variables. I'll open a new issue describing this.
__label__neutral	neutral_37	Committed revision 682671. Added an excludes for **/target/ to the patch to make sure the DataImportHandler binaries do not get packaged. Thanks Jeremy!
__label__neutral	neutral_38	Does not occurs on Firefox or Curl. Probably a Chrome problem.
__label__neutral	neutral_39	This bug was modified as part of a bulk update using the criteria... Marked 'Resolved' and 'Fixed' Had no 'Fix Version' versions Was listed in the CHANGES.txt for 1.3 as of today 2008-03-15 The Fix Version for all 29 issues found was set to 1.3; email notification was suppressed to prevent excessive email. For a list of all the issues modified; search jira comments for this (hopefully) unique string: batch20070315hossman1
__label__neutral	neutral_40	I just put this in branch-0.8 too. In fact; it's probably worth putting everything in branch-0.8 at the moment unless it's a major or incompatible change.
__label__neutral	neutral_41	Closing resolved but not fixed (i.e.; duplicate; invalid; cannot reproduce; etc.) issues.
__label__neutral	neutral_42	Fixed in the trunk and branch
__label__neutral	neutral_43	Integrated in Struts2 #545 (See https://builds.apache.org/job/Struts2/545/) WW-3881 allows new html input types (Revision 1397712) Result = SUCCESS lukaszlenart : Files : /struts/struts2/trunk/core/src/site/resources/tags/ajax/autocompleter.html
__label__love	love_8	Thanks for that comment Richard! I was laboring under the (false) impression that I could not change the docs that went with our previous releases; but I see these are coming from a copy on our svn site; and we could actually change that one. Anybody object to my doing that? I could correct the link; and also indicate this release is 2 levels out of date.
__label__neutral	neutral_44	*** Bug 8704 has been marked as a duplicate of this bug. ***
__label__love	love_9	Verified; thanks.
__label__neutral	neutral_45	This bug was modified as part of a bulk update using the criteria... Marked ('Resolved' or 'Closed') and 'Fixed' Had no 'Fix Version' versions Was listed in the CHANGES.txt for 1.1 The Fix Version for all 38 issues found was set to 1.1; email notification was suppressed to prevent excessive email. For a list of all the issues modified; search jira comments for this (hopefully) unique string: 20080415hossman3
__label__neutral	neutral_46	Changed the site to include the incubator disclaimer and incubator logo.
__label__neutral	neutral_47	Actually I think I already applied similar changes when doing the POI 3.6 upgrade in TIKA-353. Resolving as fixed.
__label__neutral	neutral_48	Added 'onRowInserted' callback to TreeTable; call it from TableBridge when a row is inserted; so far just using it to resize sizer bars.' C:/workspace/xap/codebase/src/xap/bridges/dojo/TableBridge.js C:/workspace/xap/codebase/src/xap/widgets/dojo/TreeTable.js Sending workspace/xap/codebase/src/xap/bridges/dojo/TableBridge.js Sending workspace/xap/codebase/src/xap/widgets/dojo/TreeTable.js Transmitting file data ... Committed revision 534737.
__label__neutral	neutral_49	Hoss; any interest in bring this patch forward to trunk?
__label__love	love_10	Thanks to Simon Kitching.
__label__love	love_11	I verified the fix using the xml-xerces_20040107172932.tar.gz CVS snapshot. Thanks!
__label__neutral	neutral_50	Looks like STANBOL-258 describes the same Issue.
__label__neutral	neutral_51	Closing since Whirr was updated to jclouds 1.5.0 in WHIRR-659.
__label__neutral	neutral_52	Venu committed your patch. It's in Xerces 2.6.0. Please verify.
__label__neutral	neutral_53	Additional fixes in Rev. 737663 and fixing the jcrapp module in Rev. 737664 completes this issue.
__label__fear	fear_1	We'll look at the issue for 1.1
__label__neutral	neutral_54	This is by design; as it allows us to support Velocity results; but only if the Velocity jars are available. The message is logged at DEBUG since most users won't have it enabled for development and certainly not for production.
__label__neutral	neutral_55	Closing because this has been in RESOLVED state for over one year; if it turns out to not be fixed please reopen.
__label__anger	anger_2	This has been in RESOLVED state for over one year so now closing; if it turns out to not be fixed please re-open.
__label__neutral	neutral_56	Closed due to the release of Tiles 2.1.1
__label__fear	fear_2	This has been fixed for 1.1 by Upgading to POI 3.8 beta 5. Perhaps somebody with more power than me can mark this accordingly.
__label__neutral	neutral_57	Ok; since you have a workaround I will close this.
__label__neutral	neutral_58	Venu committed your patch for Xerces 2.6.0. Please verify.
__label__love __label__joy	love_joy_1	Looks fine to me now. Thanks!
__label__neutral	neutral_59	I think you want the XMLBEANS project; the xml to object mapping; rather than XBEAN; reusable server components
__label__joy	joy_3	Fixed thus: http://svn.apache.org/viewvc?rev=574613&view=rev
__label__neutral	neutral_60	Xalan-Java appears to be operating correctly.
__label__sadness	sadness_1	Fixed. Sorry for long waiting. I didn't find the time. Author: tterm Date: Mon Jul 21 01:53:35 2008 New Revision: 678365 URL: http://svn.apache.org/viewvc?rev=678365&view=rev Log: Preserving or configuring content-type of http-header Modified: servicemix/smx3/branches/servicemix-3.2/deployables/bindingcomponents/servicemix-http/src/main/java/org/apache/servicemix/http/HttpEndpoint.java servicemix/smx3/branches/servicemix-3.2/deployables/bindingcomponents/servicemix-http/src/main/java/org/apache/servicemix/http/processors/ProviderProcessor.java
__label__neutral	neutral_61	This change is now in trunk as part of r679774.
__label__fear	fear_3	If I see it correctly; the current implementation creates a resource provider for each symlink - I fear what happens if there are hundreds or thousands of symlinks
__label__love	love_12	thanks Malith for your contribution...patch committed under rev. 1326522
__label__joy	joy_4	looks good. Thanks!
__label__neutral	neutral_62	Closing all resolved/fixed issues of already released versions of Roller.
__label__love	love_13	Hi George; I just checked in a fix for the empty stack exception. Can you please verify? Thanks.
__label__neutral	neutral_63	Committed to the 3.2 branch via revision 634707 and to the trunk (3.3) via revision 634714.
__label__joy	joy_5	Cool. Thanks for considering my bug report!
__label__neutral	neutral_64	Fixed in nightly build 20010612. Will be fixed in Struts 1.0 final.
__label__neutral	neutral_65	add separate handling for webkit browser
__label__neutral	neutral_66	seems like all subtask as resolved
__label__neutral	neutral_67	Closing because this has been in RESOLVED state for over one year; if it turns out to not be fixed please reopen.
__label__neutral	neutral_68	This issue is maybe related to UIMA-1408.
__label__fear	fear_4	Hi Dave; I am not JIRA wise; I'll see if I can change the original; if not; I'll start a new thread. It worries me that the last binaries are two years old. It seems to say that nobody is using WS-RM; which I can understand. I will check with Axis2 1.5 before I update the JIRA. I won't check with 1.3; since I am using 1.4 features. Cheers; Patrice 21/09;
__label__neutral	neutral_69	Closed due to the release of Tiles 2.1.0.
__label__neutral	neutral_70	Reporter took back the issue.
__label__neutral	neutral_71	This was fixed by having all the items in the action chain having their properties copied over to the new action.
__label__neutral	neutral_72	Reporter asked for this to be closed.
__label__love	love_14	Ludger; thanks for the patch. I've just committed it. See SVN rev 1103164. Thiwanka; thanks for your help in investigating this issue.
__label__sadness	sadness_2	Fixed. Sorry folks; the 2 contributions ASM_8001_Java and ASM_12011 did not get committed from my local machine since the projects somehow were not part of my Eclipse workspace when I did the commits of these changes
__label__neutral	neutral_73	bulk close for 3.4
__label__love	love_15	Thanks Sven!
__label__neutral	neutral_74	Fixed and I've tested it.
__label__love	love_16	Fixed - thanks!
__label__neutral	neutral_75	Is there any documentation such as 'getting started with swarm' available? If there is; could you share links? Thanks.
__label__love	love_17	Robert; Your patch is in; please help verify; thanks. Rgds; PeiYong
__label__neutral	neutral_76	No reply; closing.
__label__neutral	neutral_77	I think this should be fixed/changed for uima-base too. Is there a reason it wasn't?
__label__neutral	neutral_78	Integrated in Apache Wicket 1.5.x #54 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/54/]) 
__label__neutral	neutral_79	Closing because this has been in RESOLVED state for over one year; if it turns out to not be fixed please reopen.
__label__sadness	sadness_3	I wasn't able to reproduce the problem with the attachments. I saw appropriate error messages; line numbers; etc. However; line number information was missing for the testcase idkeyerr10; so I've committed a patch which remedies this.
__label__neutral	neutral_80	Resolving this issue as the original problem has been fixed. Please open a new ticket if you feel session invalidation should also be addressed.
__label__neutral	neutral_81	Integrated in Thrift #533 (See https://builds.apache.org/job/Thrift/533/) Thrift-1701:node.js TBufferedTransport buffer corruption Patch: Marshall Roch fix buffer copy method calls (Revision 1389517) Result = SUCCESS
__label__neutral	neutral_82	Appled patch with some changes to compile with the new public rendering API.
__label__love __label__joy	love_joy_2	Odd that you can't get the attached to build as it builds fine for me with the current latest code; never mind because I've tried it for you and yes this has fixed the problems and it now works. Thanks Jim! (Side note; I agree 100% about moving all the non-Java container specific tests out of the java container project)
__label__sadness	sadness_4	Bummer! -- The solution too this problem was that my JVM had too little memory (64MB) for allocating all the byte buffers required for writing / reading serialized pages.
__label__love	love_18	To test this; I used an aggregate AE with a CAS multiplier that declared getCasInstancesRequired()=5. If this AE is instantiated and run in a loop with earlier code it eats up roughly 10MB per iteration. No such leak with the latest code. Thanks!
__label__love	love_19	Thanks for testing; Shinobu. Probably a misconfiguration. Chris; try asking on the user list if this problem persists.
__label__neutral	neutral_83	removing fixVersion=4.0 since there is no evidence that anyone is currently working on this issue. (this can certainly be revisited if volunteers step forward)
__label__neutral	neutral_84	Assign to 1.0 during tidy up prior to 1.1
__label__neutral	neutral_85	The fix currently transform the input source to a DOMSource. We could also handle differently a SAXSource.
__label__neutral	neutral_86	behvaiors:ajax calls is not always 1:1. some behaviors are purely clientside. also; this comes up often so we should offer the devs a choice to do this even if it can have unwanted sideeffects.
__label__neutral	neutral_87	Retest shows Running xalan on lre02 <?xml version='1.0' encoding='UTF-8'?> <out xmlns='www.lotus.com' xmlns:ped='http://tester.com' english='to leave'/> Running XSLTC with Xerces Parser on lre02 <?xml version='1.0' encoding='UTF-8' ?> <out xmlns:ped='http://tester.com' xmlns='www.lotus.com' english='to leave'/>
__label__surprise	surprise_2	Very curious as to where you saw that exception. Because digging through my log files; all I see are series of 'NoClassDefFound' exceptions. Same goes for the sample project I submitted. I get the following stack trace: java.lang.RuntimeException: java.lang.ClassNotFoundException: caught an exception while obtaining a class file for org.apache.tapestry.transformationtest.pages.Start at org.apache.tapestry.internal.services.ComponentInstantiatorSourceImpl.findClass(ComponentInstantiatorSourceImpl.java:240) at org.apache.tapestry.internal.services.ComponentInstantiatorSourceImpl.findInstantiator(ComponentInstantiatorSourceImpl.java:222) at $ComponentInstantiatorSource_1177c5597da.findInstantiator($ComponentInstantiatorSource_1177c5597da.java) at org.apache.tapestry.internal.services.PageElementFactoryImpl.newRootComponentElement(PageElementFactoryImpl.java:297) at $PageElementFactory_1177c5597e8.newRootComponentElement($PageElementFactory_1177c5597e8.java) at org.apache.tapestry.internal.services.PageLoaderProcessor.loadRootComponent(PageLoaderProcessor.java:387) at org.apache.tapestry.internal.services.PageLoaderProcessor.loadPage(PageLoaderProcessor.java:365) at org.apache.tapestry.internal.services.PageLoaderImpl.loadPage(PageLoaderImpl.java:60) at $PageLoader_1177c5597e5.loadPage($PageLoader_1177c5597e5.java) at org.apache.tapestry.internal.services.PagePoolCache.checkout(PagePoolCache.java:188) at org.apache.tapestry.internal.services.PagePoolImpl.checkout(PagePoolImpl.java:108) at $PagePool_1177c5597e4.checkout($PagePool_1177c5597e4.java) at org.apache.tapestry.internal.services.RequestPageCacheImpl.get(RequestPageCacheImpl.java:43) at $RequestPageCache_1177c5597e3.get($RequestPageCache_1177c5597e3.java) at $RequestPageCache_1177c5597d7.get($RequestPageCache_1177c5597d7.java) at org.apache.tapestry.internal.services.PageRenderRequestHandlerImpl.handle(PageRenderRequestHandlerImpl.java:55) at $PageRenderRequestHandler_1177c5597cc.handle($PageRenderRequestHandler_1177c5597cc.java) at org.apache.tapestry.internal.test.PageLinkInvoker.invoke(PageLinkInvoker.java:59) at org.apache.tapestry.test.PageTester.invoke(PageTester.java:167) at org.apache.tapestry.test.PageTester.renderPage(PageTester.java:129) at org.apache.tapestry.transformationtest.pages.TestStart.render_start(TestStart.java:12) Even turning on debugging output; I don't see the exception message you posted.
__label__love __label__joy	love_joy_3	Thanks for the sample app; I updated it for 5.0.15 and verified the problem; then tried the fix. Had to modify the mixins to return false from beforeRenderBody(); but then everything worked as expected (the Any component omitted its body).
__label__love	love_20	Very cool. Thank you.
__label__neutral	neutral_88	Committed to 0.18 branch r1366206
__label__sadness	sadness_5	I hope someone can fix this; but I know that at this time it's not something I can tackle without generous hand-holding. If there are no takers soon; I'll go ahead and close the issue. This is part of an effort to close old issues that I have reported. Search tag: elyograg2013springclean
__label__neutral	neutral_89	Issue fixed.
__label__love	love_21	Thanks. The problem is with deferred node expansion; when this is on the Node appears as null instead of a Text node with an empty String. I'll merge a fix shortly.
__label__neutral	neutral_90	Integrated in Thrift #230 (See https://builds.apache.org/job/Thrift/230/) THRIFT-1284. cpp: fix processor inheritance Don't make processors that have a proper parent class also inherit from TProcessor. Patch: Adam Simpkins bryanduxbury : http://svn.apache.org/viewvc/?view=rev&rev=1160933 Files : /thrift/trunk/compiler/cpp/src/generate/t_cpp_generator.cc
__label__neutral	neutral_91	reattaching with grant of license
__label__neutral	neutral_92	@Noble Paul I cooked something resembling a backport here SOLR-3079
__label__neutral	neutral_93	resolved -- changed DEFAULT_TTL to defaultTtl to reflect it not being a constant any more..
__label__neutral	neutral_94	Integrated in Thrift #407 (See https://builds.apache.org/job/Thrift/407/) THRIFT-1517 TTransport.ReadAll() should set exception type to EndOfFile Patch: Stefan Gmeiner (Revision 1291039) Result = SUCCESS roger : http://svn.apache.org/viewvc/?view=rev&rev=1291039 Files : /thrift/trunk/lib/csharp/src/Transport/TTransport.cs
__label__neutral	neutral_95	Rolled back the change to Resource and included a FIXME that notes we don't cover all cases. But that doesn't lead to very serious problems anymore as it least the exception isn't thrown up in ComponentResourceRequestTarget anymore.
__label__neutral	neutral_96	resolved
__label__love	love_22	Patch Applied. Good Work Adrian!
__label__neutral	neutral_97	The macro is also deprecated now; it is advised to use #showRSSAutodiscoveryLink()
__label__neutral	neutral_98	Build on Windows looks also okay but there are still other problem loading the model data for the entity hub.
__label__neutral	neutral_99	Issue is resolved. Closing per Bryant's approval to do so.
__label__neutral	neutral_100	Fixed in revision 1073288
__label__neutral	neutral_101	Code delivered to SVN.
__label__neutral	neutral_102	Fixed a prompt that asks user to enter either 's' or 'q'.
__label__surprise	surprise_3	Closing because this has been in RESOLVED state for over one year; if it turns out to not be fixed please reopen.
__label__neutral	neutral_103	Fixed.
__label__neutral	neutral_104	Closing as FIXED
__label__neutral	neutral_105	Jimmy this ready for review/commit? If so please 'submit'. Thanks.
__label__neutral	neutral_106	I have fixed that issue by checking for a null before the line 95 of HtmlInputTextRenderer: writer.writeAttribute(HTML.VALUE_ATTR; value; JSFAttr.VALUE_ATTR); 'value' is null here when using jetty+JSF-RI.
__label__neutral	neutral_107	Duplicate of TAPESTRY-1988.
__label__neutral	neutral_108	I've just made some observations on the tuscany-user mailing list which should appear in the mailing list archives shortly; under the thread that contains http://www.mail-archive.com/tuscany-user@ws.apache.org/msg02162.html
__label__sadness	sadness_6	Sorry for the link 'block'; can't undo it... I wanted to add a 'clone' link.
__label__neutral	neutral_109	Integrated in Apache Wicket 1.4.x #200 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/200/]) 
__label__neutral	neutral_110	Integrated in ZooKeeper-trunk #271 (See http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/271/)
__label__neutral	neutral_111	r563181 pom.xml
__label__neutral	neutral_112	The problem is not in the SAX parser. The problem occurs if you give the -server flag to the jvm (jdk 1.4/1.3) e.g. java -server <sax parser class> on a really big file. Will cause a stackOverflow. Greg Meagher
__label__neutral	neutral_113	Marking as Resolved in 4.2.0 I couldn't reproduce it even there. Will close once we create a regression test; or a full-blown test for the utility.
__label__neutral	neutral_114	patch in cvs. Could you please verify?
__label__neutral	neutral_115	Integrated in Apache Wicket 1.4.x #58 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.4.x/58/]) 
__label__love __label__joy	love_joy_4	After re-compiling the applcation and re-deploying everything worked properly; seems like during the first deployment something wrong happened and something got corrupted. Closing this issue as invalid. Thanks for your assistance.
__label__neutral	neutral_116	Close after release
__label__neutral	neutral_117	*** This bug has been marked as a duplicate of 6155 ***
__label__neutral	neutral_118	Integrated in Struts2 #551 (See https://builds.apache.org/job/Struts2/551/) WW-3914 solves problem with returning always system implementation of FileManager (Revision 1405930) Result = SUCCESS lukaszlenart : Files : /struts/struts2/trunk/xwork-core/src/main/java/com/opensymphony/xwork2/util/fs/DefaultFileManagerFactory.java /struts/struts2/trunk/xwork-core/src/test/java/com/opensymphony/xwork2/util/fs/DefaultFileManagerFactoryTest.java
__label__neutral	neutral_119	Fixed.
__label__neutral	neutral_120	Verified. I added the info to the RELEASE_NOTES file.
__label__neutral	neutral_121	Chain 1.2 is now available in the m2 repo. Updated patches to include logging 1.1.1 and scxml 0.8
__label__joy	joy_6	Great! I'm glad you found it helpful.
__label__neutral	neutral_122	Right now ET_CALL; ET_NET and ET_TASK are the same unless task_threads is set > 0 So; ET_DEFAULT_THREAD_TYPE could just be ET_TASK if you want and it would accomplish the same thing.
__label__neutral	neutral_123	*** Bug 9236 has been marked as a duplicate of this bug. ***
__label__neutral	neutral_124	Marking this issue as resolved. Reasons: - Not reproducible. - No feedback from reporter. - If there was a dependency issue; it has probably been fixed by the change in r773502.
__label__neutral	neutral_125	This has been committed in XWork and will be part of the XWork 2.1 release. See: http://jira.opensymphony.com/browse/XW-541
__label__neutral	neutral_126	Fixed with the referenced change.
__label__neutral	neutral_127	First I want to verify that Gretchen's fix >Additional Comments From Gretchen Chiaramonte 2003-09-22 20:04 ------- for this bug works for me as well using Xalan 2.6.0. Second; regarding: >Additional Comments From Igor Hersht 2003-08-12 22:59 ------- ... >If I recall correctly we had such discussion before. >We consider that as a wrong usage. >The correct method would be to create transformer and >to do multiple transformations like >transformer.transform(xmlSource;outputTarget); >transformer.transform(xmlSource;outputTarget); To help clarify what Gretchen has already implied; I believe that this doesn't complete the story. Xalan currently fails unneccessarily if 'xmlSource' is an XMLFilter chain headed by an XML source The XMLFilter chain should be reusable with only the source is refreshed. But at the end of the TransformerImpl.transformNode() call; the DTMManager is erased by the call to XPathContext.reset() as cited by Gretchen. This manager is what binds the XMLFilter to e.g. its stylesheet. Therefore; until this bug is repaired; the filter chain cannot be reused. That's a shame because I suspect that setting up the filter chain (eg reading the stylesheet from disk) is more work than constructing the transformer. In case it isn't obvious; a workaround re-creates the XMLFilter chain each time is it transformed. I did not find this bug report at first. Sorting out why I was getting a NullPointerException was a lot of work; partly because Xalan is built in to the JDK runtime but the 'endorsed' jar files are stored in common/endorsed under tomcat rather than JDK's endorsed (surprise ;-). In addition; Xalan has another bug in DTMManagerDefault.getDTM() (incorrectly returns the null this thread discusses) and one in TransformerImpl.run() (inappropriate throw calls). I will enter these as new bugs.
__label__neutral	neutral_128	Changed MULTI_TEXTVALUE_SEPARATOR into a property configurable by injection of constant named xwork.validatorfileparser.multi_textvalue_separator. This makes it possible to have empty String as 'separator' if it apllies to your particular platform; without breaking the backward compatibility and changing default behaviour.
__label__neutral	neutral_129	Bryan; I agree on the folder structure change. This surely will break existing code. For your other point; it isn't really necessary that's right but in my opinion it fits much better in the Rails 'convention over configuration' principle. FYI; we are using those changes successfully in all our thrift sub-projects (we are having 5 of them).
__label__neutral	neutral_130	Moving these all to a 'Doc 3.x' release version.
__label__neutral	neutral_131	Test log
__label__joy	joy_7	Reviewed and tested. Looks good so far; so I am closing this issue.
__label__love	love_23	Thanks to Hazem Saleh for provide us this enhancement fixed at revision 655653
__label__joy	joy_8	Fixed; closing
__label__neutral	neutral_132	Fixed in http://svn.apache.org/viewvc?view=revision&revision=1210845
__label__anger	anger_3	I really meant to remove this functionality: What is the use for it anyway ? It doesn't hurt today (except for a few bytes eaten) but it may be confusing. So; if there is no clear use and requirement for it; I suggest to just remove it.
__label__neutral	neutral_133	Thanks Marijan; will do!
__label__neutral	neutral_134	The call to launchDialog must supply a component for delivery of the returnListener event. This bug is invalid.
__label__neutral	neutral_135	Updated the binding components' parent pom.xml http://svn.apache.org/viewvc?view=rev&revision=557983
__label__fear	fear_5	Given the dependencies; I don't think this is going to be an option for the cannonical Struts 2 distribution; unless it is reworked to use iBATIS or Cayenne.
__label__love	love_24	thanks
__label__neutral	neutral_136	Integrated in tapestry-trunk-freestyle #515 (See [https://builds.apache.org/job/tapestry-trunk-freestyle/515/]) TAP5-1621 - Fixed test joshcanfield : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1167447 Files : * /tapestry/tapestry5/trunk/tapestry-ioc/src/test/java/org/apache/tapestry5/ioc/internal/services/TypeCoercerImplTest.java
__label__neutral	neutral_137	Patch over 1.2.12.3 branch.
__label__neutral	neutral_138	This issue is already comitted
__label__neutral	neutral_139	By the way; from my point of view 'Resolution: Fixed Fix Version/s:1.4.16' is much more suitable here than 'Resolution: Cannot Reproduce'
__label__neutral	neutral_140	Failure on profile 200 is expected and will be handled by SQOOP-731.
__label__neutral	neutral_141	The tests have been added; so closing. Travis; please keep an eye on the results of the tests in our nightly builds and post patches for any build issues. We also need to open a new issue for each test that fails at runtime as a result of thread safety bug(s) in the library; in addition to those for any other failures.
__label__neutral	neutral_142	Attached QuickStart. Access URL is https://localhost:8443/test/ajaxtest - click on the buttons several times - refresh page: the counters should now reflect the clicks - click on the buttons more times - refresh page: the counters do not reflect click after first refresh
__label__neutral	neutral_143	Now merged to the 0.20 release branch.
__label__neutral	neutral_144	Lazy session associated has been implemented in the TuscanyValve The spec people are still discussing Scope so I am going to close this and we can open a new issue when the spec clearly defines how scopes operate.
__label__neutral	neutral_145	Proposed patch.
__label__neutral	neutral_146	> Would it have an impact to remove this 'name' attribute from the generated 'form' tag ? YES! If you need XHTML strict compliance; just drop a new copy of form-common.ftl into template/simple; you can easily take out the section that generates the name=... It would probably cause us major problems; but you might be able to code around it for a single app. You can reopen as a feature request; but I think it is sufficient that you can change the templates yourself.
__label__neutral	neutral_147	[branch_4x commit] Shalin Shekhar Mangar http://svn.apache.org/viewvc?view=revision&revision=1444786 SOLR-4426: NRTCachingDirectoryFactory does not initialize maxCachedMB and maxMergeSizeMB if <directoryFactory> is not present in solrconfig.xml
__label__neutral	neutral_148	Committing to https://svn.apache.org/repos/asf/mina/sshd/trunk ... M sshd-core/src/main/java/org/apache/sshd/client/UserAuth.java M sshd-core/src/main/java/org/apache/sshd/client/auth/UserAuthAgent.java M sshd-core/src/main/java/org/apache/sshd/client/auth/UserAuthPassword.java M sshd-core/src/main/java/org/apache/sshd/client/auth/UserAuthPublicKey.java M sshd-core/src/main/java/org/apache/sshd/client/session/ClientSessionImpl.java M sshd-core/src/main/java/org/apache/sshd/common/Session.java M sshd-core/src/main/java/org/apache/sshd/common/session/AbstractSession.java M sshd-core/src/main/java/org/apache/sshd/server/FileSystemFactory.java M sshd-core/src/main/java/org/apache/sshd/server/FileSystemView.java M sshd-core/src/main/java/org/apache/sshd/server/channel/ChannelSession.java M sshd-core/src/main/java/org/apache/sshd/server/command/ScpCommand.java M sshd-core/src/main/java/org/apache/sshd/server/filesystem/NativeFileSystemFactory.java M sshd-core/src/main/java/org/apache/sshd/server/filesystem/NativeFileSystemView.java M sshd-core/src/main/java/org/apache/sshd/server/session/ServerSession.java Committed r1039541
__label__neutral	neutral_149	In r681863
__label__neutral	neutral_150	r499213. The API changed as described in previous comments; so that WSDLReader.readWSDL methods now return Description instead of DescriptionElement. This change included fixing some bugs in OMWSDLReader.parseSchemaImport that had not surfaced previously because the OM implementation and test cases were only ever using DescriptionElement; but not Description.
__label__neutral	neutral_151	Refactoring out common code into a parent processing class for ack request/close/terminate
__label__neutral	neutral_152	You are only flushing the writer; don't you need to close it too? writer.flush(); writer.close();
__label__neutral	neutral_153	3.0.0 has been released; closing issues.
__label__neutral	neutral_154	Much cleared exception now .... org.apache.hivemind.ApplicationRuntimeException Component BadInjectComponent/border is not assignable to type org.apache.tapestry.html.Body. location: Annotation @org.apache.tapestry.annotations.InjectComponent(value=border) of public abstract org.apache.tapestry.html.Body pages.BadInjectComponent.getBorder() Stack Trace: * org.apache.tapestry.TapestryUtils.getComponent(TapestryUtils.java:301) * $BadInjectComponent_0.finishLoad($BadInjectComponent_0.java) * org.apache.tapestry.pageload.PageLoader.constructComponent(PageLoader.java:470) * org.apache.tapestry.pageload.PageLoader.loadPage(PageLoader.java:639) * $IPageLoader_1066542252f.loadPage($IPageLoader_1066542252f.java) * $IPageLoader_10665422530.loadPage($IPageLoader_10665422530.java) * org.apache.tapestry.pageload.PageSource.getPage(PageSource.java:118)
__label__love	love_25	applied patch; slight indentation reformating. Thanks Tommaso!
__label__neutral	neutral_155	Please be informed that I am no longer accessible through this email address. Pls refrain from sending further messages. I will just personally contact you with my new email address. For any concerns / issues / inputs relating to your transactions with Exist; kindly forward email to hr@exist.com. Thank you HR Dept
__label__neutral	neutral_156	was introduced with THRIFT-1267
__label__neutral	neutral_157	The patch no longer applies. Abmar; can you take a look?
__label__neutral	neutral_158	Closing this one since it doesn't fit in with the current caja integration anymore.
__label__neutral	neutral_159	Still happens to me. Steps to duplicate: 1. Start IE5.5 on Win2k - open java console from the 'view' menu. 2. Download xalan-j_2_2_D11.tar.gz to server. 3. tar xzf xalan-j_2_2_D11.tar.gz (extract to location on a webserver - for me this was /home/httpd/html) 4. navigate to http://SERVER/xalan- j_2_2_D11/samples/AppletXMLtoHTML/appletXMLtoHTML.html
__label__neutral	neutral_160	Verified. I added the info to the RELEASE_NOTES file.
__label__neutral	neutral_161	This bug has been fixed in Xalan Java 2.5.2. Please verify.
__label__neutral	neutral_162	----------------------------------------------------------- This is an automatically generated e-mail. To reply; visit: https://reviews.apache.org/r/1023/ ----------------------------------------------------------- (Updated 2011-07-08 20:04:37.543693) Rev
__label__neutral	neutral_163	More done: -absolute-ordering faces-config/factory/view-declaration-language-factory faces-config/render-kit/renderer/client-behavior-renderer faces-config/application/partial-traversal
__label__neutral	neutral_164	resolved.
__label__neutral	neutral_165	See bug 5694 for the DOMException problem.
__label__neutral	neutral_166	Resolved with no further action; so closed.
__label__neutral	neutral_167	Assigning this to future until the dependent XWork enhancement is made.
__label__sadness	sadness_7	Unfortunatly; this minimal example is not very small ... When i try to simplify it to reduce size; it stops to crash because of different memory allocations sizes it goes through the other code branches. The problem can be reproduced only by transforming two files HAC_OPER_HIER.xml and HAC_OPER_LIST_FORM.xml with one XalanTransformer without recreating it (i modified attached xalanexe.cpp to reproduce it)
__label__neutral	neutral_168	+1 overall. Here are the results of testing the latest attachment http://issues.apache.org/jira/secure/attachment/12508207/ZOOKEEPER-1263.patch against trunk revision 1214571. +1 @author. The patch does not contain any @author tags. +1 tests included. The
__label__love __label__joy	love_joy_5	Ah; fantastic - that works very well. Thanks!
__label__neutral	neutral_169	closing.
__label__neutral	neutral_170	Committed in rev 983396
__label__neutral	neutral_171	Original reporter is not available. This report has now 'timed out'.
__label__neutral	neutral_172	This appears to be a duplicate of XALANJ-2301. That bug report contains a one-line patch (supplied inline in the text of the bug report).
__label__love	love_26	Thanks for the patch
__label__neutral	neutral_173	1.3.x is no longer maintained outside of security-related issues; please upgrade to 1.4.x
__label__neutral	neutral_174	please apply these two patches in the $SMX4.0/runtime/trunk & $SMX4.0/nmr/trunk respectively. As Guillaume's mentioned above: Define a deploymentListener in the filemonitor module. Define a JBI artifactDeployment Listener for dealing with JBI artifact; to transform it to OSGified bundle automatically. With these two little patch; users can put JBI artifact in the deploy folder directly to install & start it.
__label__neutral	neutral_175	The fix for SMXCOMP-759 also resolve this issue
__label__neutral	neutral_176	Changes merged to the 0.16 branch; updating the fix-for version accordingly.
__label__neutral	neutral_177	UIXListView also provides selection functionality through 'selectedRowKeys'
__label__love	love_27	Fixed; thanks for the patch. http://svn.apache.org/viewcvs.cgi?rev=354520&view=rev
__label__neutral	neutral_178	Linked the API docs from the main navigation which completes this task for now.
__label__fear	fear_6	Out of curiosity; could we save a FOLLOWING notification as our lastMessage then; even if we don't send it? That would give you the 'current' state more accurately than a stale LOOKING notification and it seems like it could solve this particular problem. We could; but that wouldn't give an accurate state as well. A peer might be in the LOOKING state (next FLE round) while the lastMessage gets sent. There will be race conditions. In my opinion; a better way of doing this is to send the current state instead of lastMessage. In which case; I agree with Flavio that sending the final notifications won't be necessary. This will also reduce the number of notifications exchanged.
__label__neutral	neutral_179	The above code is a part of a dataTable of course ...
__label__neutral	neutral_180	Looks like a user issue to me; two pages at the same time accessing probably the same session. There is not additional user feedbac on this issue. I am closing it now.
__label__neutral	neutral_181	Integrated in Thrift #426 (See https://builds.apache.org/job/Thrift/426/) THRIFT-1532/ THRIFT-1475 - fix record generation for erlang (Revision 1303663) Result = SUCCESS molinaro : http://svn.apache.org/viewvc/?view=rev&rev=1303663 Files : /thrift/trunk/compiler/cpp/src/generate/t_erl_generator.cc /thrift/trunk/lib/erl/Makefile.am /thrift/trunk/lib/erl/test/Thrift1475.thrift
__label__neutral	neutral_182	checked in
__label__sadness	sadness_8	Sorry; I've reread the IOC code; and you're right. This is indeed not an issue. My apologies..
__label__neutral	neutral_183	Makes sense to me.
__label__neutral	neutral_184	Closing all resolved issues due to a successful 1.0.0-incubating release
__label__neutral	neutral_185	Example RequestDocumentor output for the StatelessEngineTest
__label__neutral	neutral_186	Reopening issues to set version.
__label__love	love_28	The issue is very old. Can you please confirm it with the latest CVS source cut ? Thanks!
__label__neutral	neutral_187	Patch applied Eric.
__label__neutral	neutral_188	Dave has let me know that this has resoved the issue
__label__neutral	neutral_189	Bulk close for Solr 1.4
__label__neutral	neutral_190	Fix committed as part of SOLR-4134.
__label__joy	joy_9	This is now fixed!
__label__neutral	neutral_191	This was done long ago and is now in trunk and ready for release
__label__neutral	neutral_192	closing this issue.
__label__neutral	neutral_193	Integrated in Struts2-JDK6 #573 (See https://builds.apache.org/job/Struts2-JDK6/573/) WW-3928 Rollbacks changes introduced with WW-2749 to allow work with mod_jk and so on (Revision 1415770) Result = SUCCESS lukaszlenart : Files : /struts/struts2/trunk/plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsTilesRequestContext.java
__label__neutral	neutral_194	Integrated in Apache Wicket 1.4.x #436 (See [https://hudson.apache.org/hudson/job/Apache%20Wicket%201.4.x/436/]) WICKET-3413 FLAG_INHERITABLE_MODEL and default model change reset 'inherited model' flag if model changed and a new one is not IComponentInheritedModel
__label__neutral	neutral_195	I checked that this bug was fixed in version 2.5.2.
__label__neutral	neutral_196	This has been fixed in CVS. You can get the latest xwork.jar (which fixes the problem) from http://ivyrep.opensymphony.com
__label__neutral	neutral_197	Second shot at this one; in r760739.
__label__neutral	neutral_198	Closed issues related to Roller 5.0 release.
__label__neutral	neutral_199	Updated version of the patch. Removed the setter for the log storage provider in the stanza relay; and passed it either as constructor parameter of through provider registry as with other providers. If there is a need for a more generic stanza logger; these users could use the plain interface. The adapter I made is intended for filtering; so that only textual chat messages between users are let through; which I think is the most interesting detail to be logged. I updated the source file name and the comment to better indicate this.
__label__neutral	neutral_200	Close all resolved issues for Engine 1.5 release.
__label__neutral	neutral_201	Closing resolved issues
__label__neutral	neutral_202	I'll update the javadoc accordingly.
__label__love	love_29	Thank you!
__label__neutral	neutral_203	Closing this issue. Please re-open if you have a testcase.
__label__neutral	neutral_204	Edited these issues to set the fix version.
__label__neutral	neutral_205	See comments above; closing
__label__neutral	neutral_206	Tested this fix with two servlet containers (Jetty and Day Servlet Engine) as well as with Firefox 2 on Linux and Windows and Firefox 3 (Windows); IE6 (Windows) and Safari (Windows). Provided the data is submitted as a multipart/form-data POST request; the form data is correctly encoded and may be used for further perusal. Considering this issue fix.
__label__neutral	neutral_207	Just an idea: how about treating a jar as versioned resource? For example in my case that would work beautifully: my star rating component was in its own jar file; so everything would have the same version somewhere above; and all the relative URLs would resolve just fine. Since jar is pretty much invisible at runtime maybe we can have some version marker inside package; and then version in the URL can be at the level; so all other relative URLs inside package would work fine below that level. That might make sense for other cases: for example a skin for application where bunch of images and css and scripts can be packaged.
__label__love __label__joy	love_joy_6	Looks good; the other services had the type hinting too; so this was indeed an erroneous situation. Applied & Committed; thanks!
__label__fear	fear_7	Triage: Not for Xalan-J 2.2. We still need to evaluate this in light of Gary's point: exactly what location should we report for result tree events in this kind of situation? I'm not sure we intended to set the locator in this particular situation. Also; if we never set the locator; then we're still following the SAX spec - while this is somewhat useful; it's still an optional feature.
__label__neutral	neutral_208	This was probably fixed by WODEN-86 which introduced support for the curly brace syntax in the http location template. This JIRA can now be closed.
__label__anger	anger_4	You are mixing runtimes. You must link _all_ executables with the same run- time library. For release; it's Multithreaded DLL; for debug; it's Debug Multithreaded DLL. Otherwise; bad things will happen when memory allocated from one heap is freed in another. I rebuilt your code with the appropriate setting; and everything worked fine. See the project settings dialog box; C/C++ tab; and the 'Code generation' category.
__label__neutral	neutral_209	[[ Old comment; sent by email on Mon; 2 Oct 2006 23:39:22 +0200 ]] Rahul; I'll fax it in tomorrow (I'm in GMT+1; soon midnight). Hallvard
__label__neutral	neutral_210	All third party repos are removed for released artifacts. The only exception is the metaxa engine which will be excluded from the release.
__label__neutral	neutral_211	AFAIK; there is no plan to replace crimson with xerces in near future ( maybe for xerces2; but that's still far away). There are many reasons for that ( requirements related with code size and speed ). In any case; the dist from apache uses xerces as default.
__label__neutral	neutral_212	Integrated in Syncope-ROLE_PROVISIONING #4 (See [https://builds.apache.org/job/Syncope-ROLE_PROVISIONING/4/]) [SYNCOPE-173][SYNCOPE-219] (Additional) Moving some classes to new packages as preparation for role-related workflow classes (Revision 1408258) [SYNCOPE-173][SYNCOPE-219] Moving some classes to new packages as preparation for role-related workflow classes (Revision 1408249) Result = SUCCESS ilgrosso : Files : * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/init/ContentLoader.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/init/SpringContextInitializer.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/policy/AccountPolicyEnforcer.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/rest/controller/WorkflowController.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHanlder.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/resources/workflow.properties * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/resources/workflowContext.xml * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/test/resources/noopworkflow/workflow.properties * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/test/resources/noopworkflow/workflowContext.xml * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/test/resources/workflow.properties ilgrosso : Files : * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/init/ActivitiWorkflowLoader.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/init/SpringContextInitializer.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/policy/AccountPolicyEnforcer.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/rest/controller/UserController.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/rest/controller/WorkflowController.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/sync/SyncopeSyncResultHanlder.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/AbstractUserWorkflowAdapter.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/ActivitiUserWorkflowAdapter.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/NoOpUserWorkflowAdapter.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/UserWorkflowAdapter.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/activiti * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/role * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/AbstractUserWorkflowAdapter.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/NoOpUserWorkflowAdapter.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/UserWorkflowAdapter.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiUserWorkflowAdapter.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/ActivitiWorkflowLoader.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeEntitiesVariableType.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeGroupManager.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeGroupQueryImpl.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeSession.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeSessionFactory.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeUserManager.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/SyncopeUserQueryImpl.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/AbstractActivitiDelegate.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/AutoActivate.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/Create.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/Delete.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/GenerateToken.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/Reactivate.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/Suspend.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/java/org/apache/syncope/core/workflow/user/activiti/task/Update.java * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/resources/userWorkflow.bpmn20.xml * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/resources/workflow.properties * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/main/resources/workflowContext.xml * /incubator/syncope/branches/DEV_ROLE_PROVISIONING/core/src/test/resources/workflow.properties
__label__neutral	neutral_213	this will be tackled when we improve ajax; most likely in wicket.next or the version after that.
__label__neutral	neutral_214	See my comment in WICKET-3093.
__label__love	love_30	Thanks Alexey; Mark. I took the latest patch from Alexey; incorporated Marks suggestion and committed this to trunk.
__label__neutral	neutral_215	added fixVersion
__label__neutral	neutral_216	I'm backporting this to 3.4 and 3.3 branches. --Michi
__label__joy	joy_10	I haven't seen any bad behavior. I was using open ssh to test this. I used the escape character; ~; and the period character; .; with open ssh to disconnect; '~.'.
__label__neutral	neutral_217	committed to 4.x and 5.x
__label__neutral	neutral_218	I mailed jsr-206-comments@jcp.org and got the following response from Jeff Suttor: 'hi Daniel; consistency and least astonishment are valuable. :) would you be open to filing an RFE http://bugs.sun.com or an issue http://jaxp.dev.java.net to insure this is addressed? as this would be a public API change; it will have to be part of JAXP.next. thanks; -- Jeff' I filed https://jaxp.dev.java.net/issues/show_bug.cgi?id=9
__label__neutral	neutral_219	Assign to 1.0 during tidy up prior to 1.1
__label__love __label__sadness	love_sadness_0	Thanks Tom; sorry for the mess.
__label__neutral	neutral_220	A RangeValidator exists by now which looks very similar to yours.
__label__neutral	neutral_221	Updated in 1.2 branch. David; please download and try 1.2 beta when it is released in a week or so.
__label__love	love_31	Very nice; thank you! Your pom works perfectly... I didn't think of adding the version tag there and ended up exporting * and then later add !org.w3c.dom and !javax.xml to prevent errors...
__label__neutral	neutral_222	Ported the solution of WW-2551 to the Struts 2.0 branch.
__label__fear	fear_8	Closing this issue - if more needs to be done; maybe it would be better to open an new issue - this one has gotten rather large
__label__neutral	neutral_223	It's actually been in there (in jakarta.apache.org/tapestry/current and in CVS) for a while.
__label__neutral	neutral_224	I think you have enable ajax. f:loadBundle has only request scope. If you request the table sort the ajax response didn't know anything about the resource bundle. Please use tc:loadBundle it has session scope. But tc:loadBundle has a different semantic. Please consult the demo or other examples how to use it.
__label__neutral	neutral_225	Closing as fixed.
__label__neutral	neutral_226	home page fixed in svn.
__label__sadness	sadness_9	"Wrong patch, sorry."
__label__neutral	neutral_227	"Hi Talat - no, this patch is for the branch_2x branch only."
__label__love	love_32	"Integrated to 0.94 Thanks for the backport, Jeff. Thanks for the review, Lars."
__label__love	love_33	"LGTM, +1, (and I think I'm sufficiently convinced that it's OK for 0.7.1 as well). I think tjake was planning to commit this, so I'll leave it here for the time being, until he has a chance to look it over. Thanks Stephen."
__label__joy	joy_11	"I'm excited to see progress being made here, but I have to agree with Joan, the security of this concerns me, even with the new sandbox.js you're putting together."
__label__love	love_34	"Hi Vincent, Thanks very much for taking the time to look closely at my patch. (In reply to comment #26) > (In reply to comment #24) > > (In reply to comment #23) > > > Adrian, thanks for doing this! I've looked at the patch and have a few comments > > > myself: > > > - I'd suggest to rename ""strict-configuration"" to ""validate-configuration"" (just > > > a personal preference). > > > > The configuration will still be validated regardless of the setting of this > > variable. Its just how the error is handled that makes the difference. If > > ""strict-configuration"" is true then FOP will immediately throw an exception and > > processing will terminate. If ""strict-configuration"" is set to false then FOP > > will log the error and attempt to continue parsing the configuration (if > > possible/meaningful). > > > > > - the name of the variable ""strictFO"" in FopFactory.configure(Configuration) > > > seems wrong. There's nothing ""FO"" specific there. Furthermore, some ""if > > > (strictFO)"" should actually be ""if (strictConfig)"", right? > > > > I think you may have been looking at an older patch. The variable > > ""strictValidation"" is as before and the new variable is called > > ""strictUserConfigValidation"". > > No, Jeremias is right actually. There are 'if (strictFO)' statements to test if > an exception has to be thrown. That should be 'if > (validateUserConfigStrictly())'. I should have better looked. Darn it.. I didn't think Jeremias was refering to the configure method. I missed this, thanks. > Also, in the new code a HyphenationTreeResolver is no longer created and > assigned to the hyphResolver field. That should inevitably lead to > a NullPointerException later, however the hyphenation junit tests pass. Strange. > Are you sure of what you're doing? Thanks for checking this, I made a mistake refactoring here :-(. > One other thing: when getting the default-page-settings parameter it's not > necessary to test if pageConfig is null; it will never be. See the javadoc of > getChild. I've read the javadoc and have simplified/removed this unnecessary check now. > > > > > Adrian, would you please install the CheckStyle plug-in in your IDE? There are a > > > few nits about the Java style in your patch. Checkstyle will help you find them. > > Something checkstyle doesn't seem to be catching: we usually don't put spaces > inside brackets: if (test) instead of if ( test ). Yes I have noticed this recently and believe all the code I've added adheres to this now. > > > > > > Get well quickly, Adrian! > > > > After a weekend in bed am feeling much better today thanks. I had installed > > checksytle but not enabled it! ;-( I will recreate the patch this morning. > > Hope you feel better now! > > Sorry, I'll ask you to create yet another patch, but that should really be the > last one! Its ok, I am learning all the bumps for fop patch submissions - hopefully should be smoother for you guys next time :-). Kind regards, Adrian."
__label__neutral	neutral_228	patch attached.
__label__love	love_35	"I just committed this. Thanks, Sanjay!"
__label__neutral	neutral_229	I do have a very large # of rows (>150-200MM on many nodes)
__label__joy	joy_12	John it would be great!
__label__neutral	neutral_230	attached a fix
__label__love	love_36	"Hi Jurgen, yes that's probably a good idea but not something that can be easily and/or quickly implemented. I'd like to change this JIRA to from a Bug to an Improvement so that it can be looked at in a future release. Thanks for the suggestion....."
__label__joy	joy_13	"+1, the latest patch looks good to me."
__label__neutral	neutral_231	Closing all resolved tickets from 2010 or older
__label__love __label__joy	love_joy_7	Good suggestion Claus and thanks Alexander for the fast realization.
__label__love	love_37	Committed branch and trunk. Thanks for the patch Mikhail.
__label__neutral	neutral_232	"I don't see that he fixed anything for TS-2216, are you thinking of his commit for TS-1988 ? I was going to try that."
__label__neutral	neutral_233	Submitting to Hudson again. It didn't run the first time.
__label__neutral	neutral_234	"bq. I'm not sure I understand, are you saying that B would violate this, or just that the status quo does? I'm saying B would violate this, yes. B was ""bootstrap from the right token, but if that one isn't up, bootstrap from any other token preferring the closer ones"", right? I'm saying we can't just automatically choose another token if the user didn't specifically say it's ok."
__label__sadness	sadness_10	"Hi, Here is the missing file. I'm sorry for the delay. Regards, Eric"
__label__neutral	neutral_235	Committed revision 1068985
__label__love	love_38	I just committed this. Thanks Samuel !!
__label__neutral	neutral_236	"Patch to allow removing the token, and throw UE instead of an internal error when trying to insert and the number of endpoints is less than the RF."
__label__love __label__joy	love_joy_8	"Thanks for the new patch, Kristian! The changes look good to me. +1 to commit. A tiny nit in StatementPoolingTest; the code below could be expressed with an assertEquals now that there's only one condition: if (!simpleName.equals(expectedName)) { - if (!simpleName.equals(expectedName + ""40"")) { - fail(""Expected class name "" + expectedName + "" or "" + - expectedName + ""40, got "" + simpleName); - } + fail(""Expected class name "" + expectedName + "", got "" + + simpleName); }"
__label__sadness	sadness_11	Sorry for delay. This patch is including LRU cache. But changing static class into member is not done. What should I do?
__label__neutral	neutral_237	Plugman seems to not honour the npm proxy in fact. That's the problem.
__label__neutral	neutral_238	The mutateLevel problem looks like what I predicted -- Windows won't let you rename over an existing file.
__label__neutral	neutral_239	change default assembly behaviour in preflight
__label__neutral	neutral_240	There's good discussion on that project and LRU cache in general in HBASE-1460 if you missed it.
__label__sadness	sadness_12	"I am sorry if you think this is nit picking but the logged error still refers to plugins.xml but it should not: {code} LOG.e(TAG, ""ERROR: config.xml is missing. Add res/xml/plugins.xml to your project.""); {code}"
__label__love	love_39	I just committed this. Thank you Scott and Priyo.
__label__neutral	neutral_241	Attaching a patch that adds API for accessing the other info (which is not writtent to trace file).
__label__love	love_40	Thanks Vladimir - the patch was applied to BTI branch 2.0 at r602881. Please check that the patch was applied as you expected.
__label__love	love_41	Thanks. Moved
__label__joy	joy_14	+1 looks good to me.
__label__joy	joy_15	+1 looks good to me. Trying it out.
__label__neutral	neutral_242	Updating patch synch'ed with trunk.
__label__love	love_42	"Carl Lindberg, absolutely you are right. I was not far-sighted enough to think of that. Thank you about your point.^^ My one is not a good idea. I will try to fix it. (T.T). Thanks again."
__label__love	love_43	Committed. Thanks Hitesh!
__label__sadness	sadness_13	"Thanks for accepting this patch. I'm sorry I wasn't sensitive to the brace convention already in the file. I probably could have javadoc'd the inner class, too :) I didn't think about the lack of thread safety of the SimpleDateFormat class: good catch. So this counts as a bugfix by markt (format was being used in an unsynchronized way prior to this patch) as well as an enhancement by me :) If DBCP typically uses localized error messages, I'd be happy to provide another patch that localizes the exception's message."
__label__neutral	neutral_243	"I suggest a potspone to 3.0, as we will redesign the chain."
__label__neutral	neutral_244	+11 Group (including QA) agrees this is not something for 17.
__label__joy	joy_16	"Well, the fix looks good enough. Seems there is a lot of dead or half-broken code around st_print_frame() / exn_print_stack_trace(), but those deserve good refactoring all in all."
__label__sadness	sadness_14	"bq. 1) Sorry, didn't create a patch for the README since it was a small change, it is included in this patch with the comment revision."
__label__neutral	neutral_245	"I created a class that extends UpdateRequestProcessor, which logs calls to each method. In the console output, you'll see that only the processAdd methods are called when using the DIH in debug mode and the user checks verbose and commit. I've attached the SOLR configuration that can be used to replicate the issue. I'm assuming that once Lucene commits the files, the UpdateRequestProcessor.processCommit method should be called too. *UpdateRequestProcessorTest.class* package org.apache.solr.handler.dataimport; import java.io.IOException; import org.apache.solr.update.AddUpdateCommand; import org.apache.solr.update.CommitUpdateCommand; import org.apache.solr.update.DeleteUpdateCommand; import org.apache.solr.update.MergeIndexesCommand; import org.apache.solr.update.RollbackUpdateCommand; import org.apache.solr.update.processor.UpdateRequestProcessor; import org.slf4j.Logger; import org.slf4j.LoggerFactory; /** * Class used to show the interaction between the * DIH process and the UpdateRequestProcessor chain. * */ public class UpdateRequestProcessorTest extends UpdateRequestProcessor { protected static final Logger log = LoggerFactory.getLogger(UpdateRequestProcessorTest.class); public UpdateRequestProcessorTest(UpdateRequestProcessor next) { super(next); } public void finish() throws IOException { log.info(""finish called...""); super.finish(); } public void processAdd(AddUpdateCommand cmd) throws IOException { log.info(""processAdd called...""); super.processAdd(cmd); } public void processDelete(DeleteUpdateCommand cmd) throws IOException { log.info(""processDelete called...""); super.processDelete(cmd); } public void processMergeIndexes(MergeIndexesCommand cmd) throws IOException { log.info(""processMergeIndexes called...""); super.processMergeIndexes(cmd); } public void processRollback(RollbackUpdateCommand cmd) throws IOException { log.info(""processRollback called...""); super.processRollback(cmd); } public void processCommit(CommitUpdateCommand cmd) throws IOException { log.info(""processCommit called...""); super.processCommit(cmd); } } *UpdateRequestProcessorTestFactory.class* package org.apache.solr.handler.dataimport; import org.apache.solr.request.SolrQueryRequest; import org.apache.solr.request.SolrQueryResponse; import org.apache.solr.update.processor.UpdateRequestProcessor; import org.apache.solr.update.processor.UpdateRequestProcessorFactory; /** * Factory used to instantiate the UpdateRequestProcessorTest class * in the UpdateRequest processor chain. * */ public class UpdateRequestProcessorTestFactory extends UpdateRequestProcessorFactory { public UpdateRequestProcessor getInstance( SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next ){ return new UpdateRequestProcessorTest(next); } } *Console Output* Nov 24, 2011 8:50:39 PM org.apache.solr.core.SolrCore execute INFO: [] webapp=null path=null params={start=0&event=firstSearcher&q=solr+rocks&rows=10} hits=0 status=0 QTime=74 Nov 24, 2011 8:50:39 PM org.apache.solr.core.SolrCore execute INFO: [] webapp=null path=null params={event=firstSearcher&q=static+firstSearcher+warming+query+from+solrconfig.xml} hits=85 status=0 QTime=27 Nov 24, 2011 8:50:39 PM org.apache.solr.core.QuerySenderListener newSearcher INFO: QuerySenderListener done. Nov 24, 2011 8:50:39 PM org.apache.solr.handler.component.SpellCheckComponent$SpellCheckerListener newSearcher INFO: Loading spell index for spellchecker: default Nov 24, 2011 8:50:39 PM org.apache.solr.core.SolrCore registerSearcher INFO: [] Registered new searcher Searcher@6e4eeaaf main Nov 24, 2011 8:51:32 PM org.apache.solr.core.SolrCore execute INFO: [] webapp=/solr path=/select params={command=status&qt=/solr-2914-test-case} status=0 QTime=7 Nov 24, 2011 8:51:32 PM org.apache.solr.core.SolrCore execute INFO: [] webapp=/solr path=/select params={command=show-config&qt=/solr-2914-test-case} status=0 QTime=1 Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.DataImportHandler processConfiguration INFO: Processing configuration from solrconfig.xml: {config=./file-data-source-config.xml,update.processor=dih_test} Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.DataImporter loadDataConfig INFO: Data Configuration loaded successfully Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.DataImporter verifyWithSchema INFO: id is a required field in SolrSchema . But not found in DataConfig Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.DataImporter doFullImport INFO: Starting Full Import Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.SolrWriter readIndexerProperties INFO: Read solr-2914-test-case.properties Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.LogTransformer transformRow INFO: Processing C:\Projects\solr-test-cases\SOLR-2914\solr\sample-data\artcle1.txt Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.UpdateRequestProcessorTest processAdd INFO: processAdd called... Nov 24, 2011 8:51:41 PM org.apache.solr.core.SolrDeletionPolicy onInit INFO: SolrDeletionPolicy.onInit: commits:num=1 commit{dir=C:\Projects\apache-solr-1.4.1\example\solr\data\index,segFN=segments_g,version=1322170573144,generation=16,filenames=[_l.fnm, _m.frq, _m.prx, _l.frq, _n.tis, _m.tis, _l.tis, _n.frq, _n.tii, _m.tii, _l.tii, _m.fnm, _n.fnm, _l.nrm, _n.nrm, _l.prx, _n.prx, _n.fdt, _n.fdx, _m.nrm, segments_g, _m.fdt, _l.fdx, _m.fdx, _l.fdt] Nov 24, 2011 8:51:41 PM org.apache.solr.core.SolrDeletionPolicy updateCommits INFO: newest commit = 1322170573144 Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.LogTransformer transformRow INFO: Processing C:\Projects\solr-test-cases\SOLR-2914\solr\sample-data\article2.txt Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.UpdateRequestProcessorTest *processAdd* INFO: processAdd called... Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.LogTransformer transformRow INFO: Processing C:\Projects\solr-test-cases\SOLR-2914\solr\sample-data\article3.txt Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.UpdateRequestProcessorTest *processAdd* INFO: processAdd called... Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.LogTransformer transformRow INFO: Processing C:\Projects\solr-test-cases\SOLR-2914\solr\sample-data\article4.txt Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.UpdateRequestProcessorTest *processAdd* INFO: processAdd called... Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.LogTransformer transformRow INFO: Processing C:\Projects\solr-test-cases\SOLR-2914\solr\sample-data\article5.txt Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.UpdateRequestProcessorTest *processAdd* INFO: processAdd called... Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.DocBuilder finish INFO: Import completed successfully Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.SolrWriter readIndexerProperties INFO: Read solr-2914-test-case.properties Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.SolrWriter persist INFO: Wrote last indexed time to solr-2914-test-case.properties Nov 24, 2011 8:51:41 PM org.apache.solr.handler.dataimport.DocBuilder execute INFO: Time taken = 0:0:0.270 Nov 24, 2011 8:51:41 PM org.apache.solr.core.SolrCore execute INFO: [] webapp=/solr path=/select params={commit=on&start=0&dataConfig=<?xml+version%3D'1.0'?>%0d%0a+<dataConfig>%0d%0a++++<dataSource+type%3D""FileDataSource""+/>%0d%0a++++<document>%0d%0a++++++++<entity+name%3D""f""+processor %3D""FileListEntityProcessor""+baseDir%3D""C:/Projects/solr-test-cases/SOLR-2914/solr/sample-data""+fileName%3D"".*txt""+rootEntity%3D""false""+dataSource%3D""null"">%0d%0a%09%09++++<entity+processor%3D""PlainTextEntityProcessor""+name% 3D""x""+url%3D""${f.fileAbsolutePath}""+dataSource%3D""f""+transformer%3D""LogTransformer""+logTemplate%3D""++++++Processing+${f.fileAbsolutePath}""+logLevel%3D""info"">%0d%0a++++++++++++++++++<!--+copies+the+text+to+a+field+called+'tex t'+in+Solr-->%0d%0a++++++++++++++++<field+column%3D""plainText""+name%3D""text""/>%0d%0a++++++++++++</entity>%0d%0a++++++++</entity>%0d%0a++++</document>%0d%0a</dataConfig>&verbose=on&command=full-import&debug=on&qt=/solr-2914-t est-case&rows=10} status=0 QTime=291"
__label__neutral	neutral_246	Will be taken care of next releases
__label__love	love_44	"I have committed this. Thanks, Junping!"
__label__neutral	neutral_247	"@Marcelo I was thinking these changes: {code} - public static AuthResult allow(String reason, User user, Permission.Action action, byte[] table) { - return new AuthResult(true, reason, user, action, table, null, null); + public static AuthResu"
__label__neutral	neutral_248	Closing issues which have been released.
__label__love	love_45	thanks tom....let me see if I can come up with a test case for the LineReader reset. I did forget adding a test case for that. I probably file that as part of this patch.
__label__neutral	neutral_249	"I'm moving this to 0.6, as I really can't stand to release with this. If this becomes too long, we can move it again to 0.7."
__label__love	love_46	"Hi, Ted, Matteo Thanks for the review. The commands.rb has some existing logic that tries to 'rescue' some exceptions. It will get more and more difficult to keep it generic artificially as we evolve and add more ... The approach to expand (instead of shrink) this logic is not a bad or ugly one ... But your suggested solution is fine."
__label__neutral	neutral_250	Verified by Andrew.
__label__neutral	neutral_251	0.14.3 is built with Java 1.5.
__label__neutral	neutral_252	Two more IDs for initial access: greid and brock.
__label__love	love_47	"I just committed this. Thanks, Amareshwari!"
__label__neutral	neutral_253	Looks like your change did not fix the findbugs. But i think you need to suppress the findbugs warning : HRS_REQUEST_PARAMETER_TO_HTTP_HEADER. It is suppressed for jobdetails.jsp in MAPREDUCE-1185.
__label__sadness	sadness_15	"Sorry again, I tried with the same revision, same language, same theme and I use also FF4 and I still don't reproduce (see screenshot-1) It would be interesting ot have other persons tests"
__label__neutral	neutral_254	Submit to hudson.
__label__neutral	neutral_255	"HI Ronald, The fix I put in on the 30th caused pages to stop drawing in the RC1. I have reverted part of the fix for this bug to get 657 resolved. Could you please take a look at the comments for 657 and test out the head of the 1.1.1 branch to make sure that this version works for your case."
__label__neutral	neutral_256	"Jason, did you get a chanse to try this out? It seems to work fine for me and I plan to pop it in the trunk in a few days. I think I'll have to add a warning of some kind in runtime though as it could slow down the index a bit if the reader is way fragmented."
__label__love	love_48	bq. I just committed this to trunk and branch-0.23. Thanks Derek! Also branch-2.
__label__joy	joy_17	Looks fine to me. Oleg
__label__love	love_49	Committed to trunk. Thank you Lorand!
__label__neutral	neutral_257	"Can you please address the findbugs warning. (inconsistent synchronization) I did a quick look at your patch and I am a bit confused by the implementation of setSignaled. I realize that you did not really change the code at all, but is there a reason that the parameter is ignored? If you don't know I can look into it myself."
__label__neutral	neutral_258	"I did nothing special. My understanding was that simply trying to test under JDeveloper caused the problem. Your report says removing xmlparserv2 causes JDeveloper not to start. Is there something else I need to do to cause the problem? FYI - I created a Maven project with the code above as the only application. I then imported the application, which was a bit frustrating as it didn't seem to accomplish much. I then had to manually add the log4j 2 jars into the classpath along with target/classes and had to make a couple of other changes so that it knew how things were laid out in the project. I then ran the application from JDeveloper and it ran fine."
__label__love	love_50	Would you please try the patch? Thanks very much!
__label__love __label__joy	love_joy_9	Great! Thanks a lot. I suppose it will be in the next nightly build? VBR johan
__label__love	love_51	"Hi Tri, Those files looks good. I cursorily checked only.CommonUiLabels.xml.patch but from their sides I guess the others are good as well. But done from the OFBiz roo directory, it's the main OFBiz directory where you fine the LICENSE and APACHE2_HEADER files. Anyway not a big deal I will try to apply them as is and will let you know You don't have to remove the old files, as you can see they are now grayed, and it's good that you checked the grant license box. Thanks"
__label__neutral	neutral_259	Created an attachment (id=8670) javadoc patch to org.apache.xalan.lib and org.apache.xalan.lib.sql
__label__neutral	neutral_260	Closing as a duplicate of SLING-394
__label__neutral	neutral_261	Fixed typo in title
__label__love	love_52	Applied the patch. Thanks Dennis!
__label__sadness	sadness_16	"Same attachement with ASF grant this time (forgot to check the first time, sorry)"
__label__joy	joy_18	+1. Code looks good.
__label__joy	joy_19	"Looks good, patch applied -- Thanks Naoki!"
__label__love	love_53	"Thanks so much, Knut Anders!"
__label__neutral	neutral_262	Please find the attached screenshot for reference
__label__neutral	neutral_263	Created an attachment (id=6729) modified SQLTransformer (in full)
__label__neutral	neutral_264	"Can't remember how to put the state of this issue to ""In progress"", not a big deal anyway..."
__label__sadness	sadness_17	I didn't have time to work on this yet ...
__label__love	love_54	"Hi Gary, I think I have a rather nice and elegant patch for this; but if you don't mind waiting, I'd like to get some clearance from my current employer. Thanks."
__label__love	love_55	"Please apply this patch file. Cheers, Kaushalye"
__label__joy	joy_20	Release note looks good.
__label__love	love_56	Committed revision 741710. Thanks Patrick!
__label__love	love_57	"Thanks, that looks good now; much easier for the end-user."
__label__love	love_58	Keith - This is done. Thanks
__label__neutral	neutral_265	Did you clean everything out?
__label__neutral	neutral_266	"{quote} Adriano: Can you summarize all your changes in both issues into a changes.txt entry for both branches? {quote} Hi Uwe, yes, I can do it, I will need to review the entire code again (3x and trunk). I plan to do this during the weekend. But if you want, commit Vinicius's code and I commit the changes to changes.txt later ;)"
__label__sadness	sadness_18	"okay, I'm convinced. Sorry about the wait. As an apology I have coded up the URL-based version in v3. (Haven't actually tested it on non-local files though, but it compiles. :)"
__label__neutral	neutral_267	"It could have been created as a patch and that is far as its gotten. Assuming that we're talking we're just talking about creating a simple .snk to create strongly named assemblies when talking about signing assembly: I didn't see a .snk file in the Lucene.Net_2_9_4g branch when setting up the build scripts. I haven't looked in trunk yet. The Lucene.Net_4e branch should have a already have a snk. I could add the same snk file to trunk and the 2.9.4 branch when I go add the build scripts to the trunk this weekend, so that all the branches are building strong assemblies. Someone would still need to go back to the tag and create a 2.9.2 version using the snk whenever the next release does come out."
__label__neutral	neutral_268	"Hi, I was going to join in on reporting this problem. I had recently downloaded a build from 10/17/2005 in order to fix a problem I was experiencing with jscookmenu. It was not until today that I ran a test in IE and found inputcalendar didn't work. I had the same JavaScript error: dateFormatSymbols. The calendar worked fine in Firefox. Today I downloaded MyFaces 1.1.1RC3 and can confirm that this problem no longer seems to exist for me. Cheers, Kevin"
__label__neutral	neutral_269	Patch attached.
__label__neutral	neutral_270	Created an attachment (id=16986) Proposed addition to Javadocs.
__label__neutral	neutral_271	Reopened because of issues with RC5
__label__love	love_59	Thanks for the patch Janko. I put the changes into 1.3.x and 2.0.0.
__label__neutral	neutral_272	Closing all resolved tickets from 2010 or older
__label__love __label__joy	love_joy_10	"Thank You very much for Your positive review and for improving the patch! Also, a small correction to Your previous comment, it should be: ""unit tests included in her patch"", as You know I'm one of the girls in this year's GSoC program. It was a great experience to collaborate with You and I Thank You for everything!"
__label__sadness	sadness_19	Sorry for trouble. I didn't realize that port and context path is configured via pax web & cxf bundle configuration in Servicemix
__label__sadness	sadness_20	"Sorry, I was not able to create one diff-file, so I added for every build.xml an own diff."
__label__love	love_60	"Thanks for the reviews, guys!"
__label__love	love_61	I've just committed this. Thanks Aaron!
__label__love	love_62	"That's great. Thanks, Junping. Then, I will first commit HADOOP-8820.b1.002.patch. For the additional bug fixes, let's create a new JIRA since we also need to fix the code in trunk."
__label__neutral	neutral_273	Created an attachment (id=16279) Patch to add percentage-dimensions and jpep quality handling (against Trunk)
__label__love	love_63	committed! to branch hadoop-eclipse-merge. Thanks Srimanth.
__label__neutral	neutral_274	reopened for fixVersion
__label__love	love_64	I've committed this to trunk and branch 22. Thanks Nigel! Tested via ant tar and ant package instead of Hudson since most of the change was done via svn remove (the patch only applies to build.xml).
__label__neutral	neutral_275	"Truth is that, the sheer size of CFStore (over 2K line) annoys me. I think this prove CFStore has too much things in it and we messed up at encapsulation. So I tried to make DataTracker be about dealing with the memtables and sstables as much as possible. And being able to have View not leak from DataTracker sound like a proof that we do have some encapsulation there. I'm not claiming it's perfect, but I really don't think that CFStore is our most beautiful class in there and I do believe that DataTracker improves this a bit. But there is a good part of subjectivity in all this anyway. And if people really don't like the move of the bits of querying in there, fine, I'd move them back in CFStore and leak the View from DataTracker. I would however be more reluctant to remove DataTracker altogether and put the AtomicReference in CFStore. Because this would move all the CAS related logic in CFStore and seriously there is already too much stuff in CFStore. My humble opinion though."
__label__love	love_65	I now realize hadoop-1662 is required. So i will wait. Thanks.
__label__love	love_66	Committed to trunk. Thanks Prasad!
__label__love __label__sadness	love_sadness_1	"Thanks, Willem. Sorry, I was trying to get to the wiki but it's been a busy week."
__label__joy	joy_21	"bq. Here the patch for the groovy script. cool, looks good, thanks!"
__label__love	love_67	I just committed this. thanks steven!
__label__love	love_68	"Committed to branch. Thanks, Remus!"
__label__joy	joy_22	+1 Looks good.
__label__sadness	sadness_21	I misread the original description.
__label__neutral	neutral_276	"Fixed for comments, added new patch."
__label__love	love_69	commit the patch to trunk. thanks sameera.
__label__sadness	sadness_22	"Sorry Timothy, I forgot to include a couple of dlls, GTOU.dll and GTOUD.dll in the test tool that I uploaded last Friday. I have added them to CMS_Test_Tool.7z. They are under CMS_Test_Tool\dll. Please register one of these dlls (for example GTOUD.dll) to compile CMSMessageHandlerCOM. Thanks! Helen"
__label__love	love_70	Thanks Ken! patch applied to trunk: r480575
__label__love	love_71	After applying Mathias patch the sample documents works fine. Thanks Mathias.
__label__neutral	neutral_277	Attaching the doc updates for the Tuning Guide. Please review and comment if these updates are ready to be committed.
__label__love	love_72	"Hi Oliver, Thanks for catching this problem and for your suggested fix. We can go one step in simplifying the fix by removing the need for URI altogether if we use the getResourceAsStream() method of ClassLoader rather than getResource(). Modified version of your fix committed in revision 405036. Please could you check that this version of your fix works in your environment. Best regards, George"
__label__neutral	neutral_278	"AfterDeploymentValidation#addDeploymentProblem failed. since we have DELTASPIKE-262, we should just enable it again for v0.4."
__label__neutral	neutral_279	"Yes I'm building MINA myself from trunk. Just to be sure, when I checkout the code from <http://svn.apache.org/repos/asf/mina/trunk> I'll get always the latest code!? I'll see if I can some up with a little application (it may take a few days due to a lot of work I've to finish). -Roger"
__label__neutral	neutral_280	I believe this issue is resolved by the patch in FLUME-648.
__label__love	love_73	"Agreed, the current behavior is incorrect, I just didn't want you disappointed. :-) If you create your singleton jira patch before this one is applied, then just include them together and close this bug. I agree that commit rights would make this simpler and supplying patches is the primary way to gain commit rights, so you are on the right path regardless what happens with Pax Web. :-)"
__label__neutral	neutral_281	Thanks Sian. Patch applied in SECURITY modulke and third party notices file at repo revision r543463. Please check it was applied as you expected.
__label__neutral	neutral_282	Fixed in SCA Java 1.2 rc4.
__label__neutral	neutral_283	Need to add the reconciler as part of the keyspace attributes... just so I don't forget.
__label__neutral	neutral_284	Attaching a patch with the typo fixed. I'm going to try that along HBASE-6550 and HBASE-6165 now.
__label__love	love_74	"Thanks Tim, Patch was applied as expected!"
__label__neutral	neutral_285	branch_3x: Committed revision 1003739.
__label__neutral	neutral_286	2633_20080122.patch: rewrite TestFsck so that MiniDFSCluster is shutdown properly between each test.
__label__love	love_75	"Hi Anders, I agree with Knut, this issue can be marked as fixed, Thanks a lot for working on this improvement. -suresh"
__label__love	love_76	"Patch applied to FOP trunk, see r793095. Thanks for the fix!"
__label__love	love_77	"Ruth, patch applied at r526665, thanks a lot for this enhancement, please verify, thanks."
__label__neutral	neutral_287	Just some variations
__label__neutral	neutral_288	I committed a patch to trunk to make access to bundle state volatile. Please close this issue if you are satisfied.
__label__love	love_78	"Thanks to Todd and Colin for the suggestions, this is much cleaner. I'm still looking for pointers on where to go for my Checksum byte-wrangling (now in FSEditLogOp#getRawChecksum)."
__label__joy	joy_23	Much obliged! Thank you! :)
__label__love	love_79	"I just committed this. Thanks, Jitendra!"
__label__neutral	neutral_289	I believe this is fixed by HADOOP-9984; let's wait for that patch to land and then triage.
__label__neutral	neutral_290	"From step 3, do you think the double-splitting is a new phenomenon? It doesn't sound like something that should happen very often. Maybe that would explain why i didn't get this error in .94.0. Also, please note I went straight from .94.0 to .94.2, so I don't know if it was present in .94.1."
__label__neutral	neutral_291	"I'm looking through DateTools now and can't help but want to clean it up some. One thing I see that is odd is the use of a Calendar in timeToString(long,resolution). The first two lines look like this right now: {code} calInstance.setTimeInMillis(round(time, resolution)); Date date = calInstance.getTime(); {code} Instead, it can simply be: {code} Date date = new Date(round(time, resolution)); {code}. Secondly... I think a good deal of logic can be cleaned up in the other methods instead of a bunch of if-else statements that is a bad code smell. Most of the logic of 3 of those methods could be put into Resolution and be made tighter."
__label__neutral	neutral_292	That's indeed odd - I didn't knowingly reformat - must have been a mishap..
__label__love	love_80	"It is OK, thanks Stepan."
__label__neutral	neutral_293	I also rename the references in droids-spring. Commited revisions: r985451 r985452
__label__love	love_81	Committed to TRUNK. Thanks for the patch Doug.
__label__love	love_82	"I have committed this. Thanks, CW!"
__label__neutral	neutral_294	Attached patch should apply cleanly to the current trunk. Please review.
__label__love __label__joy	love_joy_11	+1. Looks god. Thanks for making it better.
__label__neutral	neutral_295	"I was actually trying to debug the issue and didn't see anything that looked like it would nuke the DataMap/DataNode under the DataDomain and was wondering if it was a visual issue, but didn't try saving the model to see if it had actually deleted it. Something about all that information disappearing was unsettling. This is definitely a post 1.2 thing, I think. Thanks!"
__label__neutral	neutral_296	"Finally, it should be noted that the 'noSession' filter only prevents new sessions from being created. It allows access to any existing session that might have been created in another part of the application by the application developer."
__label__love __label__joy	love_joy_12	"Hey, thanks for that, I gave it some testing and thought about it over the weekend and it looks perfect, thanks! - Aidan"
__label__sadness	sadness_23	"Phil, I must have missed this email. I am sorry. I will get this done, and the other changes to support the UpdatingMultipleLinearRegression class. I updated my source and noticed the changes were missing. I did my detective work and noticed this. Mea Culpa!! -Greg"
__label__love	love_83	"Committed, thanks for the review, Avery!"
__label__love	love_84	Thanks again to Claudio Tasso
__label__neutral	neutral_297	Ran the test with a 5.8-SNAPSHOT build an everything seems fine.
__label__love	love_85	Committed. Thanks Ning
__label__neutral	neutral_298	Attached patch
__label__joy	joy_24	Great (it turned out simpler than what I would have thought). Thanks Andy.
__label__love	love_86	I just committed this. Thanks Nicholas!
__label__neutral	neutral_299	Didn't modify any testcases because its just some minor typo fixes.
__label__neutral	neutral_300	Resolved in trunk. There were two places where the ack message was getting the Destination from the Message assigned to it instead of the Destination from the MessageDispatch command.
__label__sadness	sadness_24	"Hello Oliver, Sorry for the late response. I haven't had any time to look into this again, maybe it was a misuse on my side after all. Since I haven't been working on the project I encountered the behavior in for months, this issue might as well be closed."
__label__love	love_87	I just committed this. Thanks Giri!
__label__neutral	neutral_301	"[~anchela], which improvements do you have in mind?"
__label__neutral	neutral_302	What I'm committing... wraps a very long line else what Matteo suppied.
__label__neutral	neutral_303	"Yes, bytes + comparator would work fine for jaql. Preferably, it would be the same comparators that are already used by the sort code, which work on serialized bytes (but also on WritableComparables, so that might be a problem). If these comparators are inconsistent, then the sort in map/reduce will not work properly. I think it is ok to document the transitivity requirement, but I don't see how you can enforce it in any way. Different key types are fine, as long as the comparator knows how to handle them. If you can't reuse the same comparator interface, I can always implement my comparisons in another place, but I already have two of them (one in the WritableComparable, and one in the Comparator). I don't see how column families and the key comparator are related, except that they are both table-level metadata. Yes, I agree that a single comparator would be used for the entire table."
__label__neutral	neutral_304	"Oh, .. clearOutgoingQueues() and put() seems access to localQueueForNextIteration concurrently."
__label__joy	joy_25	"Looks good. bq. I didn't add Version to StopFilter nor StopAnalyzer; I think it's better to up-front require the ""enablePositionIncrements"" to their ctors. I would add it to StopAnalyzer, StopFilter is not so important (because low-level). But that's my opinion."
__label__neutral	neutral_305	Ported back to 3.x Committed revision 991537.
__label__love	love_88	Duplicate of CLK-121 which is already fixed Thanks Malcolm
__label__neutral	neutral_306	Created an attachment (id=8392) patch
__label__love	love_89	Committed! Thanks Liyin!
__label__neutral	neutral_307	First cut at a patch for bin/hadoop
__label__love	love_90	Committed. Thanks Hitesh!
__label__neutral	neutral_308	@Paul. Can we close this?
__label__neutral	neutral_309	this patch fixes the dir permissions
__label__love	love_91	Yeah the patch is great. Just that it should not have been categories as a bug :)
__label__love	love_92	"+1, Thanks!"
__label__love	love_93	"Hi Jacques, hi Ankit ... i think i found the reason why we can't call layer recursivly ... i made a patch but i can't sync my trunk today (i'm at our friends house and they have only internet via gps connection ... it's so slow :-D). I will provide the patch on monday morning. Have a good Weekend Sascha"
__label__neutral	neutral_310	Duplicate of XERCESC-1810
__label__neutral	neutral_311	Assigning to Sameeer since apparently he can't assign to himself.
__label__neutral	neutral_312	"I see what you mean; I didn't make the distinction between zero values and missing values. But I am actually using a PreferenceInferrer that fills in 0 for missing values. When I do that, the break still happens before the other dimensions are included in the calculations of sumX or sumY."
__label__love	love_94	"Sorry Jacques, I have not seen that it was a grouped bugs. In this case I have used to set in the grouped bugs the sum of the components used by detailed issues. I didn't like unknow components. Otherwise we can add a new fictitious component - GROUPED ISSUES - and assign this component to this type of issue. Thanks Marco"
__label__love __label__joy	love_joy_13	"Code looks good to me, patch's been committed, thanks! Awesome to now be able both the 0.8 and 0.9 messaging API through the same interface, this is going to save us a lot of headaches :)"
__label__neutral	neutral_313	Committed revision 700277.
__label__love	love_95	Committed to TRUNK. Thanks for the patch Doug.
__label__neutral	neutral_314	"The appassembler author has rejected a long outstanding bug in this area as ""Won't Fix"", http://jira.codehaus.org/browse/MAPPASM-54 They seem to think that because the script is not internally broken that they shouldn't need to worry about it."
__label__neutral	neutral_315	"Hi Jason! I was thinking one of those parameters was the time the NM should wait before sending the SIGTERM. Alas, I was wrong ContainerLaunch.java:337 sends the SIGTERM pretty much instantly. That is messing me up in MAPREDUCE-4135. I'm still thinking having a small time delay before sending even the SIGTERM should be good. If we can do it on the NM and not on the RM, I think we might be able to conserve RM resources."
__label__neutral	neutral_316	"[~mikelid] Please take a look at the patch when you get a chance. If it looks fine, you can go ahead and commit using ""git am <patch file>""."
__label__love	love_96	That fixes my testcase. Thank you!
__label__neutral	neutral_317	Nit-corrected patch. Committing.
__label__neutral	neutral_318	"Provide MMap and SimpleFS DirectoryFactory impls. Didn't include the DirectIOLinuxDirectory yet, since that still seems highly experimental."
__label__neutral	neutral_319	Patches for 1) applied to trunk and J6
__label__joy	joy_26	+1 patch looks good. Thanks a lot!
__label__neutral	neutral_320	"Yeah, can't cache KV. Can we have something for one server first?"
__label__love	love_97	"Thanks Richard, Patch was applied to LUNI module at repo revision 397522. Please check that the patch was applied as you expected. (I've got strange commit notification with message: [... 31 lines stripped ...] )"
__label__neutral	neutral_321	"Make patch against the latest trunk, and add the comment suggested by Bikas."
__label__love	love_98	Committed. Thanks Namit!
__label__neutral	neutral_322	zoo_multi and zoo_amulti crash for the same reason. Made some local fixes here.
__label__neutral	neutral_323	Reopening the issue to merge the changes into 10.3 codeline
__label__neutral	neutral_324	Fixed. Committed revision 745895.
__label__love	love_99	"Committed r1185532, thanks Flavio."
__label__neutral	neutral_325	Closing issue; Oozie 3.3.2 is released
__label__neutral	neutral_326	add keyword [PATCH] to description.
__label__neutral	neutral_327	"bq. guess we need to supply a tool to rename sstables files if anyone is on longer names? We probably don't need to do anything. I don't think anyone is really using names long enough for them to it the file system limit, the goal of limiting the names is just so to prevent this from happening but there will be no other assumption that the names are short from the code. I also don't think anything will prevent rolling upgrades, do you had something in mind? Note: I have a long flight ahead of me so I plan to update my last patch with both those changes, as I still like the moving of all the directories handling in a dedicated class, even if we don't support both layout."
__label__love	love_100	Thanks for the patch! http://svn.apache.org/viewvc?view=revision&revision=1361531
__label__neutral	neutral_328	"Hi colin, I agree that scatter/gather typically refers to multiple input tuples of (position, length). Yes, we can extend the api to include that. The reason my original proposal did not include that was because I was mostly targetting this api to reduce the number of buffer copies."
__label__love __label__joy	love_joy_14	Thanks a lot for your excellent work Shazron!
__label__love	love_101	Done at 946323 and 946322 Thanks Blas !
__label__neutral	neutral_329	This new patch incorporates a few of Hairong's comments. 1. There is no need to check LOG/isInfoEnabled() because logs are typically at INFO level anyway. 2. Change the comment in addStoredBlock() on why we log when safemode is off.
__label__love	love_102	"I just committed this. Thanks, Sameer!"
__label__neutral	neutral_330	"Hmm, I can't apply 0002-V2 on top of either my 0001 + trunk from feb 5, or current trunk + rebased 0001. And Eclipse generates the diff in a different order from git commandline, so I can't tell what's changed by eyeballing the diff either. I've attached rebased-to-current-trunk versions of my 0001-0003, can you attach your fixes as a 0004 on top of those?"
__label__love	love_103	Committed. Thanks Ashish!
__label__neutral	neutral_331	That's what reminded me of ubjson actually. I looked at UBF and it looks rather complicated for a data exchange. I wouldn't say no but I don't have any interest in supporting it. ubjson shouldn't be anything more than writing a parser (which should be ~trivial) and then adding the logic to switch (de)serializers based on content and accept types. I have no idea what UBF really even is under the hood but it sounded a lot more complicated.
__label__love	love_104	+1 patch looks good. Please submit the patch for verification so it can be committed into the trunk and merged all the way back. Thanks.
__label__joy	joy_27	"+1 as well. Patch looks good, like the javadoc, we get lots of users asking what those exceptions mean."
__label__sadness	sadness_25	"Stepan, Sorry, I didn't see you comment until I'd committed the change - Sian tested it for me. I've no idea what the msvcr71.dll issue is - but I don't think that is anything to do with my changes. The fetch-depends/checksum issue for icu-3.4.zip should be fixed with my patch."
__label__love	love_105	"Thanks Alok Agnihotri for your valuable patch. Special thanks to Rishi Solanki,Pranay Pandey,Brajesh Patel and others in helping Alok. Changes are in rev # 607341. -- Ashish Vijaywargiya"
__label__joy	joy_28	"+1 This patch looks reasonable to me. Thanks, Hairong!"
__label__love __label__joy	love_joy_15	Patch looks good to me. Reuploading patch with one corrected code-comment.
__label__neutral	neutral_332	Thanks for the patch Greg. Applied at r1153789
__label__love	love_106	Applied patch with thanks to William.
__label__neutral	neutral_333	Adds docid Field to the index for EnwikiDocMaker
__label__neutral	neutral_334	"It was looking good for jackrabbit, for modeshape there is one more tweak required"
__label__neutral	neutral_335	Fixed in SVN. Will let Vincenzo close it if he is satisfied.
__label__sadness	sadness_26	"Sorry, I was wrong about needing to fix Gump - that just needs the build.xml patch to remove the copy of the files in lib."
__label__love	love_107	Fixed rev 1190423. Thanks Jose!
__label__neutral	neutral_336	Will be naming this camel-rss rather than camel-rome in case we change to some other rss lib in the future.
__label__neutral	neutral_337	"@JMS & @stack Tks for your review and commtents, my reply as follows... My intention was to set _executor_ explicitly if the call path is _main -> HbaseFsck -> initialPoolNumThreads -> run -> initialPoolNumThreads_, despite it should be no hurt if I remo"
__label__neutral	neutral_338	"This patch removes tohtml.xsl and adds configuration_to_docbook_section.xsl. The latter generates a docbook section from our hbase-default.xml using maven-xml-plugin that runs before the docbook plugin. Our book then xincludes the generated file (the patch includes this modification too). Patch includes a edit of our book which adds a preface, an index, an appendix that talks of configuarion, another on compression, etc."
__label__love	love_108	Ok thanks ! Closing the issue then.
__label__neutral	neutral_339	I am not sure how the build system check for ant tar failed. It appears to be working from the console output.
__label__neutral	neutral_340	commits@mina created.
__label__love	love_109	+1 thanks. Don't forget to add line to CHANGES.txt when committing
__label__love	love_110	Thanks for reviewing Suresh. Committed to trunk.
__label__love __label__joy	love_joy_16	"looks fine, thank you, George."
__label__joy	joy_29	+1 patch looks good.
__label__neutral	neutral_341	The DebugDLL and ReleaseDLL build configurations for vs2005-activemq didn't have the /DEBUG linker flag turned on.
__label__love	love_111	"Hi Iâ€™m trying to use hive performance benchmark. I read README file and followed step by step, and finally I reached to the data generation part. Teragen has no problem, but I face a problem with htmlgen. I configured something to my own cluster (40 VMs), and launched generateData.py, but it never finished! I launched it about 10 hours ago.. So, I modified UserVisits and Rankings in config.txt to be smaller, but it was also failed. Even it consumed very little resources when I saw 'top' information in the ubuntu. Have you guys ever met this kinds of problems? And if you have, how did you solve this problem? Thank you so much"
__label__neutral	neutral_342	receive() and receive(timeout ) now return null on transport failure - so consistent behaviour with a close() on the connection.
__label__neutral	neutral_343	missed encoding for non-array request parameters. It doesn't look like I can remove previously attached files. Whoever is reviewing the code should use the latest patch.
__label__neutral	neutral_344	dupe CB-675. See my latest comment there regarding Cordova 2.1.0
__label__love	love_112	"Hi, Thanks! Too be honest, I haven't looked at noop much. It was just used in the original patch. I'look at your updated patch and see what more work needs to be done."
__label__love __label__joy	love_joy_17	"This works fine. It probably could have been done in another Valve (like the policy conetxt valve), but this is a reasonable solution as well. Thanks."
__label__love	love_113	Committed. Thanks Yusaku!
__label__neutral	neutral_345	"Hi Arpana,"
__label__neutral	neutral_346	Committed revision 949471. merged to branch-1.4 for 1.4.1
__label__love __label__joy	love_joy_18	"Looks good. Applied, thanks! http://svn.apache.org/viewvc?rev=606891&view=rev"
__label__neutral	neutral_347	Fixed in revision 903352. The change should get published in a few hours.
__label__love	love_114	+1 for 0.95. Thanks.
__label__love	love_115	I just committed this. Thanks pat.
__label__love	love_116	committed to 1.2 and trunk. thanks!
__label__love __label__joy	love_joy_19	"Great, thanks!"
__label__neutral	neutral_348	Duplicate of INFRA-4886
__label__love	love_117	"Hi Mike, Do you know how to get the virtual machine file? The link to download from the rcmes web site is broken. Thanks. ----------------------------------------------------------------------------------------------------- Jinwon Kim Dept. Atmospheric and Oceanic Sciences and Joint Institute for Regional Earth System Science and Engineering University of California, Los Angeles Los Angeles, CA 90095-1565"
__label__love	love_118	Will review by EOD today. Thanks for the tip.
__label__love __label__joy	love_joy_20	"Awesome, works for me. LG committing. Thanks!"
__label__love __label__joy	love_joy_21	I did it works fine with 2.1 and iOS6. Thanks! Dominic
__label__love	love_119	"Patch applied. Thanks a lot, especially for the test case. http://svn.apache.org/viewcvs?rev=240459&view=rev http://svn.apache.org/viewcvs?rev=240461&view=rev The result for 180 and -180 is definitely wrong. There's a bug that needs to be fixed eventually. But since this is low-priority for me, I'm going to leave it for now. I've added a comment to the new test case block-container4a that explains what is wrong. So I think I'll close this issue. It's primarily for the patch, after all, and the bug won't be missed now that there is a check in our test suite. If anyone disagrees, just reopen the issue or create a new one."
__label__love	love_120	"Committed @revision 1440266 in trunk Thanks Lufeng, if and when you get around to the patch for 2.x I can review. The patches for tests are very welcome in Nutch. Thank you."
__label__love	love_121	[~thiru_mg] - thanks for the patch! Looking forward to it landing in 1.7.0
__label__love __label__joy	love_joy_22	thanks Randy! committed ;-r
__label__love	love_122	Oleg A minor comment.. I don't see why the close() method would throw an IOException.. thanks asankha
__label__love	love_123	"Committed to trunk. Thanks, Thejas!"
__label__neutral	neutral_349	Applied the patch : At revision: 1051526
__label__neutral	neutral_350	"Hi Florent, where is the code you extracted?"
__label__neutral	neutral_351	Changes look reasonable to me.
__label__love	love_124	Thanks [~ajisakaa]. +1 pending jenkins.
__label__love	love_125	Thanks guys!
__label__neutral	neutral_352	Quickstart to demonstrate that I can't reproduce this.
__label__love	love_126	"Thank you, Carol!"
__label__love	love_127	Patch applied to trunk/ . Thank you!
__label__love	love_128	"@Ted Thanks for taking a look. Sure, I will make that change on commit."
__label__love __label__joy	love_joy_23	+1 23 patch changes look trivial. Thanks!
__label__neutral	neutral_353	just pending announcement now
__label__neutral	neutral_354	patch _1 to fit changes from FLUME-1005
__label__love	love_129	"Failed test is covered by HBASE-5992. Integrated to trunk. Thanks for the patch, Matteo. Thanks for the review, Andy."
__label__neutral	neutral_355	"this was released in 1.4.9, but is now being reverted in 1.4.10 due to overwhelming community feedback"
__label__love	love_130	It's working! Thanks.
__label__love	love_131	"Thanks, Karthik! I committed this to trunk, branch-2, and branch-2.1-beta."
__label__love	love_132	thanks to Jakob Korherr for this patch
__label__love	love_133	Changes look good. Could you run regression tests with your patch and let us know how it goes? Thanks Kathey
__label__love	love_134	"Thanks for taking the time out to review the patch, Bryan. Yes, the patch is ready for commit unless someone else is reviewing it too. Thanks again."
__label__love	love_135	"1. My feeling is that ""if (file.lastModified() < now + ACCESS_TIME_RESOLUTION)"" is not necessary, since the lastModified value will already be truncated to the system resolution, but I do not think it is harmful. 2. I chose to throw exception only if file.canWrite, because I was trying to minimise the impact of the change. It's not clear to me whether setLastModified might work when !file.canWrite. However, it certainly must work (because of GC) if file.canWrite. I would consider moving the canWrite test outside of the setLastModified call, similar to getRecordIfStored, it just wasn't necessary to fix the immediate problem. 3. Well, not swallowed exactly, but caught and converted to failure return code (-1) e.g. see BLOBInDataStore.getSize. In any case, the javadoc for Property.getLength/getLengths documents -1 as a possible ""failure"" return code, so it had to be tested. I think if Property.getLength/getLengths throws an exception, that is already correctly handled. Thanks for the quick response."
__label__love	love_136	"patch committed. Thanks, pradeep!"
__label__love	love_137	Committed to branch-2 and trunk. Thanks Ahmed!
__label__neutral	neutral_356	"Gabe, yes, this (<param name=""blocked"">p1,p2</param> ) would be the way I would expect it to work but perhaps we can add OGNL expression evaluation as well. This could be usefull in other cases as stated in XW-340. What do you think?"
__label__neutral	neutral_357	"Hi, which version do I need to apply the patch on?"
__label__neutral	neutral_358	Attaching JUnit testcase so I don't loose it.
__label__love	love_138	I just committed this. Thank you Lohit.
__label__neutral	neutral_359	"Hi Malcolm, updated for the latest check-style. Christian"
__label__joy	joy_30	+1 the patch looks good.
__label__joy	joy_31	Builds fine for me and the code looks good. Great work! I did not run the integration tests. [~abayer] what do you think?
__label__neutral	neutral_360	"uploading the patch for commit to internal branch, it has review comments from sreekanth and cos implemented."
__label__love	love_139	Committed revision 728746. Thanks Shai!
__label__love	love_140	"Thanks, did that. Hopefully it syncs now. Cheers --Kurt"
__label__love	love_141	Committed to 92 branch and trunk. Thanks for review stack.
__label__neutral	neutral_361	Add this in once 0.20.2 clears.
__label__love	love_142	Committed. Thanks for the patch J-D
__label__neutral	neutral_362	"The issue arises due to the call to <ant> in the ""docs"" target of plugins/build.xml It uses the system $ANT_HOME/lib/* if it can find it. So the solution might be to add a note to howto/howto-buildPlugin.html#ant to describe the abovementioned workarounds. Is there a better way to call forrest targets from within project ant build files. See FOR-145 ""Make Forrest able to be imported by Ant"""
__label__neutral	neutral_363	Patch applied in revision 1055819.
__label__love	love_143	"I just committed this. Thanks, Alejandro!"
__label__love	love_144	"Incorporating Konstantin's comment Thanks, Mayank"
__label__love	love_145	[~shreepadma] thank you for working on it. Do you have plan when you submit a patch? I know it takes efforts to code and test in 4 different types of databases. Would you please release mysql version first? Then file a jira to follow up Postgres/Oracle/Derby. Just a suggestion for fast release but up to you to decide. thanks a lot again Tim
__label__neutral	neutral_364	"i don't think that any special filtering should be performed for the access control content such as e.g. rep:policy nodes. but as far as i can see, you didn't incorporate this into the patch, right? testing for Tree#exists in the NodeDelegate looks ok to me..."
__label__joy	joy_32	"Good ideas, thanks Alexey. I've updated the test patch."
__label__sadness	sadness_27	"Mark, Alexey's right, the original fix was invalid. Please undo all the patches. Sorry."
__label__neutral	neutral_365	Committed revision 568039.
__label__sadness	sadness_28	"We'll get it fixed soon, sorry for the inconvenience. I just wanted to point you (and others who may land here) to alternative resources meanwhile :)"
__label__sadness	sadness_29	Yes exactly -- sorry to be so unclear. Just really wondering/hoping you'd be interested in working on these ?? I'd like to get them cleaned up because there are now so many that other more important and/or meaningful warnings are likely to be ignored.
__label__neutral	neutral_366	Committed revision 1142583. I also plan to backport the fix to the 10.8 branch.
__label__neutral	neutral_367	"Yes, someone should have a look at this. I just ran it again and it is still failing."
__label__love	love_146	"Committed to branch and trunk, thanks Gab!"
__label__love	love_147	Committed to 0.94 (operability) and to trunk. Thanks for the patch Jie.
__label__neutral	neutral_368	"Colin, the approach and your patch looks good to me. What's the latest on testing? Eg you verified a v1 install with hsync files correctly upgraded (eg leases recovered) to v2 or trunk build with this patch? Nicholas, do you have cycles to take a look? I spent a while paging in the relevant code and the patch/testing look good to me but would be good to have another set of eyes. The patch itself is straight-forward so mostly around subtleties."
__label__love	love_148	"Hi Ivan, {quote} + long numberOfEntriesToReplicate = lastEntryId - firstEntryId; should be (lastEntryId - firstEntryId) + 1 {quote} You are right, both side entries has to be considered. Thank a lot for noticing it. {quote} In general, I think this splitting should be in LedgerFragmentReplicator, rather than BookKeeperAdmin. This way you could avoid the need to expose the update of ledger metadata. It will make control flow a little more complex as you'll have to initiate replication on the next subfragment from the callback of the current, but i think it would encapsulate things a bit better. {quote} Yes, in general, all the split logic should be in LFR. I might pushed that code to BKAdmin because, I don't want to disturb admin key flow much, which will go through LFR. Now anyway, I moved that logic, still not disturbing BKAdmin key flows in anyway. Attached a patch, which addresses the comments. Also to give more confidence on split fragment scenarios, I have added multiple boundary cases for FragmentSplit. Thanks a lot, Ivan for your nice reviews!"
__label__love	love_149	"Committed to trunk. Thanks for review, Stack and Ryan."
__label__neutral	neutral_369	Lets fix this post wss4j-1.5.3
__label__sadness	sadness_30	"Oh, sorry, will submit them tomorrow. Hmm, svn diff is really strange. Don't know why the files were not included though I did the diff from the src/java/o/a/c/jci dir."
__label__neutral	neutral_370	"Hi Jochen, It's not about building successfully (which I have no issue with that as well), it's about resolving the right dependencies of the dependency. Use mvn dependency:tree to see if you really have them all correctly, if you are getting them right too: mvn dependency:tree -Dxmlrpc.version=3.1.1 (Yeap, apparently I uploaded the pom after testing it against 3.1, not 3.1.1) yc"
__label__neutral	neutral_371	"Hmm - it seems that the patch cannot be applied on a few files - e.g. the CxfEndpoint.java patch. As it seems your patch is against an old version of the code? e.g. your patch uses the line {code} * @version $Revision$ {code} when trunk is {code} * @version $Revision: 563665 $ {code} Any chance you could do an 'svn update' to ensure you are using the latest/greatest trunk, then create the patch again please? As right now I cant apply it"
__label__neutral	neutral_372	I added your tests and didn't see any failures against ActiveMQ. However I did make a change anyway to StompFrame similar to you patch expect that I just used the DataInputStream's readFully method to ensure all the data gets pulled off the wire.
__label__love __label__joy	love_joy_24	Sounds good. We'll postpone HBASE-2993 til then. Thanks!
__label__neutral	neutral_373	Here is a Test case to reproduce it. I launch it on a JDK1.6 and it deadlocks each 6 to 10 run.
__label__neutral	neutral_374	+1 with the read-ahead removal.
__label__neutral	neutral_375	"This issue was ruled a Flash Player issue all the way back in 2009 (by Adobe). It is not an Apache Flex bug, so we can't fix it."
__label__neutral	neutral_376	Commenting it out in src/test/log4j.properties isn't enough. Setting it to ERROR works though.
__label__love	love_150	I've just committed this. Thanks Eli!
__label__neutral	neutral_377	"# In DataStorage.linkAllBlocks() you commented our the {{toDir.mkdir()}} part. You probably wanted to remove it. # I would avoid all spelling, formatting, commenting, empty line changes, because they will make merging hard. # Don't think introducing {{FINALIZED_DIR_NAME}} in {{MiniDFSCluster}} is a good idea. It is better than what we have now - a plain string {{current}}. {{DataStorage}} is a public class, we should rather add a public static method to it {{getFinalizedDirectoryName()}}. Then ""finalized"" will defined only in one place."
__label__neutral	neutral_378	Committed a few days ago.
__label__neutral	neutral_379	"Committed revision 698035. it's just about having an optional ant property for specifying the full path to svnversion ... i've made the Hudson config changes for Lucene-trunk (add -Dsvnversion.exe=/opt/subversion-current/bin/svnversion) and manually kicked off build#594. If i missed something, re-open and i'll take a look"
__label__love	love_151	+1 looks good.
__label__neutral	neutral_380	"No, I never see the ""Completed rebuilding index"" message. Here's what I see on startup: INFO 2011-03-21 09:50:41,961 IndexManagerImpl:<init> - search enabled: true INFO 2011-03-21 09:50:41,973 IndexManagerImpl:<init> - index dir: /home/raible/roller_data/search-index INFO 2011-03-21 09:50:42,011 ReferrerQueueManagerImpl:<init> - Instantiating Referrer rg.apache.roller.weblogger.business.search.operations.SearchOperation"
__label__love	love_152	Thanks Kihwal!
__label__neutral	neutral_381	"Created an attachment (id=17581) Patch for build.xml to add index=""true"" for jar tasks"
__label__neutral	neutral_382	Committed revision 777662.
__label__neutral	neutral_383	Created an attachment (id=13383) Patch to apsupport.m4 to support AMD64
__label__love	love_153	"I'll look into the namespace handler. Thanks. Yes, I should have added the different event handling support to the TODO above. I need to think more about this and look into the camel code a bit more. Using just the endpoint api, I couldn't create routes on the fly, hence the polling consumer approach. I'll keep hacking away at in in my toolbox when customer needs dictate. Am I missing something in your approach, how would I do this then in the XML DSL using your approach? I think virtual routing is a known limitation of Camel when you start to deploy large scale systems. Out of curiosity have you seen camel ever been deployed with 1000's of routes (and/or routes files)? I think this would have FD and thread overkill problems. Everything repeats itself :)"
__label__love __label__joy	love_joy_25	"Nice! Thanks for adding nice debug logging, too :-)"
__label__neutral	neutral_384	Reassign to fix in future release.
__label__love	love_154	"Looking at DataStax's 2.0.0 Debian packages, the change didn't make its way in. Digging deeper, it's only on the cassandra-1.2 branch. Can someone merge/cherry-pick it to cassandra-2.0 and trunk. Thanks, Blair"
__label__love	love_155	patch committed thanks!
__label__neutral	neutral_385	On 2008/Apr/08 04:09 pm Brian Minchau wrote: > > Hi Helge. > > I'm afraid you can't assign someone to review. However I will have a look > at your patch. Any progress in reviewing my patch? -- Helge Schulz - http://OpenSHORE.org
__label__love	love_156	Committed to trunk. Thanks Tim!
__label__love	love_157	I just committed this. thanks flavio.
__label__love	love_158	Thanks for the suggestion Raghu. Let me try it.
__label__neutral	neutral_386	3.1.0-incubating released!
__label__neutral	neutral_387	Previous patch was wrong. Here a new one.
__label__love	love_159	"Committed, thanks Maheshwaran."
__label__love __label__joy	love_joy_26	Good catch! Thanks for the thorough explanation and suggestions. I think it all makes sense. Will work on a patch.
__label__love	love_160	Thanks!
__label__joy	joy_33	"Thank you for the source code, but why don't you also attach a diff file you get by running 'svn diff'? It will help us figure out which part is changed exactly. Thanks in advance! Your idea sounds very good, though. :D"
__label__neutral	neutral_388	Created an attachment (id=9504) relevant portion of stack dump
__label__neutral	neutral_389	Can put the info in this file on people: -rwx------ 1 dblevins dblevins 0 Jul 12 21:00 /home/dblevins/INFRA-5044
__label__neutral	neutral_390	"Keep in mind this is to support ""development"" scenarios only. If a project in an IDE references jars in lets say a maven repo. We need the ability to add individual entries to the shard lib, without having to copy each individual jar over to the shared library. So the answer to your first question is no, this is not the same, there is no way to add invidivial entries. I don't quite understand your second bullet. Third bullet, true, just thought it would be nice to have an empty template. Yes, agree a test case should be added."
__label__love	love_161	Thanks Rahul! I will take a look at it this evening. Aaron
__label__neutral	neutral_391	fixed. Committed revision 797662.
__label__sadness	sadness_31	Regrettably I do not have a working instance of svn so I can't create a proper patch I have attached the modified source file: org.apache.tuscany.sca.assembly.builder.impl.CompositeWireBuilderImpl.java I have commented the place where I modified a single line with: // FIX FOR JIRA BUG: TUSCANY-1930
__label__neutral	neutral_392	"Latest version still needs hudson, right?"
__label__sadness	sadness_32	"I think my first preference would be to make this only a java 7 and up feature. The change is very clear and we can use our normal testing methods. Meanwhile users can set their umask appropriately. My second preference would be only to only change permissions by default with java 7 and higher. I think we really need to have tests for the default configuration and non-portable tests might have to be customized to different environments, which seems like a lot of effort for something that won't be used moving forward. I am sorry I didn't chime in earlier. Time has been quite tight recently."
__label__joy	joy_34	"+1 looks good Thanks, Mayank"
__label__neutral	neutral_393	Committed by Ted today.
__label__love	love_162	Thanks Vasily - the patch was applied to BTI branch 2.0 at r615105. Please check that the patch was applied as you expected.
__label__neutral	neutral_394	"I just did an AMD Linux build, and all I did was remove /usr/lib from the list of libraries. Since we don't really need /usr/lib at all, don't you think a better patch would be to remove that directory all together?"
__label__love __label__joy	love_joy_27	Looks good. Thanks for your work on this!
__label__love	love_163	I just committed this. Thanks Jeff.
__label__neutral	neutral_395	change status from ASSIGNED to NEW for consistency
__label__love	love_164	"Great, I think we are all on the same page, then! We'll move forward down this route. Thanks for taking a look."
__label__love	love_165	the code has been checked in. Thanks to Gordon for that.
__label__neutral	neutral_396	Committed to 1.3.3 at revision: 705591
__label__love	love_166	Completed: At revision: 614842 -- Thanks Maja!
__label__love	love_167	"Thanks for applying the images. Please check and apply the patch I've submitted to FOR-1008 [1]. Since the changes required to resolve this issue involves files modified there, it has to be applied first. [1] https://issues.apache.org/jira/secure/attachment/12363540/valid_xdoc.patch"
__label__neutral	neutral_397	Trying again.
__label__neutral	neutral_398	Patches from Phani and Vamsi that need to be applied to ActiveMQ. I verified the patches work with ActiveMQ 3.2.2 and the latest Geronimo branches/1.0 code form late Feb.
__label__love	love_168	+1 I just committed this to branch 0.22.1. Thank you Benoy.
__label__neutral	neutral_399	Created an attachment (id=16836) struts-config
__label__love	love_169	"Thanks, Jarcec!"
__label__love	love_170	"I've committed this to 0.94,0.95 and trunk. Thanks for the patch gautam."
__label__love	love_171	"Committed to trunk. Thanks, Enis!"
__label__love	love_172	"Committed to 0.20 branch. @Stack, any chance of some trunk love? :) If not I will get to it later."
__label__neutral	neutral_400	"The patch looks pretty good to me. One question for you, though: does loosening this check for the QJM case not unnecessarily weaken the check in the non-QJM case?"
__label__love	love_173	"Thanks for taking this, patch looks good. Is this good to be committed?"
__label__joy	joy_35	+1 patch looks good.
__label__neutral	neutral_401	"And, Could you please explain detail?"
__label__neutral	neutral_402	true.
__label__joy	joy_36	"I took a quick look at D (unused locals). Most of it looks good, but I don't understand the few places where for backward compatibility there is what looks like a useless statement just to make sure a property gets read. Won't someone else someday follow up with patch H that removes what seems to be useless code and just take those out anyway?"
__label__neutral	neutral_403	That patch file didn't apply cleanly. Here's a version that does.
__label__joy	joy_37	"Re: patch, looks fine. I'd include <optional> too, on geronimo/ant deps, as per project.xml"
__label__love	love_174	Committed! Thanks Namit!
__label__neutral	neutral_404	Bulk close after 3.5 is released
__label__love __label__sadness	love_sadness_2	"Yes, updated the rb just now. Sorry, no perf numbers yet. Let me run some experiments for that. Thanks."
__label__neutral	neutral_405	"Jerome, I did a skeleton of the code to use HashMap. Do you want to start from there and add what is missing?"
__label__love	love_175	patch by Dennis Byrne. Thanks a lot!
__label__neutral	neutral_406	"Olaf, Please also consider submitting a test case for this issue. This will increase the chances of the patch getting committed sooner rather then later Oleg"
__label__neutral	neutral_407	"Antonio, could you just create a patch file that I can apply."
__label__sadness	sadness_33	Sorry clicked the wrong button. Its intended for inclusion.
__label__neutral	neutral_408	"Yes, I have been watching OFBIZ-1453 with interest. I approve of the issue and implementation and didn't have anything to add, so I haven't been involved. The thing I have been thinking about is that there's some assumptions to be made here for pricing and the type of question. I.e. multiselect questions should display the absolute price. I'm also trying to work over some other scenarios. I'll clean up what I have an submit a patch tomorrow."
__label__love	love_176	"Fix applied, thanks."
__label__neutral	neutral_409	Committed revision 1165174.
__label__love	love_177	Thanks for the work Haohui! I've committed it to branch-1.
__label__love	love_178	Thanks for providing this update. WIll try to take a look at this sometime this week.
__label__love	love_179	+1 looks good.
__label__love	love_180	"I just committed this patch. Thanks, Richard!"
__label__love	love_181	"Hi Steve, gentle reminder as per your instructions about reviewing this patch. Thanks!"
__label__neutral	neutral_410	"Also, {noformat} + NetUtils.getDefaultSocketFactory(conf), + org.apache.hadoop.ipc.Client.getTimeout(conf), defaultPolicy).getProxy();{noformat} indentation is wrong in the second line"
__label__neutral	neutral_411	"Hi Eduardo, I have tried with your settings for the timezone. I was not able to reproduce it. The meeting was correctly displayed in the calendar, the meeting times in the iCal invitations where send fine, I tried also with ""simple email"". The invitation hash also worked fine and had the correct time validity."
__label__love	love_182	Thanks Uma for looking at the Jira. I think it should work fine with BPOfferService#registrationSucceeded(..) synchronized. Will post a patch soon after verifying it.
__label__love	love_183	"Committed, thanks"
__label__neutral	neutral_412	"Well, since you didn't respond to my request I finally did without and checked out what you did. First of all looking at CIncludeTransformer I have to say that I don't understand why it is doing its own caching. Caching should be the concern of pipelines and sources. If you want preemptive loading of cached content this would much better be implemented as a Source wrapper. In fact we now have such a class in the scratchpad area. One unpleasant implication of the current design is that as an unsuspecting user of this class, when you turn on caching in this transformer, the cached contents of any included cocoon:// source that identifies a caching pipeline would be cached twice! Once by the pipeline itself and once by the CIncludeTransformer. Now concerning your patch. I don't quite understand why you retain the validity of the cached contents. The algorithm the caching pipeline uses to determine the validity of the cached contents is as follows: first it looks at the validity of the cached pipeline contents itself, then if the validity by itself indicates it needs a current validity to check against then the pipeline contructs a pipeline validity by calling the participating components' getValidity() methods. If your component now returns the same validity object that you previously returned then that does not make much sense to me. Since I really needed this functionality myself and I didn't have enough time to discuss and refactor the CIncludeTransformer I implemented my own very basic IncludeTransformer that does exactly what I need, no more no less. I'll post it here if anyone want to use it. I also looked at the XIncludeTransformer to see if I could implement caching in that one instead. But it seems that the XIncludeTransformer reads included content from URL objects instead of from Source objects."
__label__neutral	neutral_413	"Yes, I missed this basic case. Thanks for pointing out. I will cancel this patch."
__label__neutral	neutral_414	"Hi Suresh, I think this task is also related to AMBER-63 since both, OAuth 2 and Open Id Connect use JSON Web Token (JWT)."
__label__love	love_184	I committed the patch branch-1 also. Thank you Andy and Slavik.
__label__love	love_185	"Oh, how this warms my heart to see this... Thanks Daniel - I know you've worked hard on this :)"
__label__love	love_186	"The latest patch looks pretty good to me. Two small nits, +1 once these are addressed: # Generally in the Hadoop codebase we put the ""@Test"" annotation right above the method declaration, below the method comment: {code} + @Test + /* + * test #toString() for typical VolumeId equality classes + */ {code} # In the class declaration of INVALID_VOLUME_ID, I recommend putting a blank line between the methods being declared there. Thanks a lot for improving the test coverage in this area of the code, Ivan, and thanks a lot to Andrew for your reviews of these patches."
__label__love	love_187	Committed trunk and 0.92 branch. Thanks for the patch N.
__label__neutral	neutral_415	"There have been changes to the method updateCurrentIterator() between these versions that we need, so we can't just reverse the change. I'd love to fix any bug that can be identified cleanly. For now though I'm placing this in NEEDINFO awaiting a test case."
__label__neutral	neutral_416	"applied in revision 411104 Paulex, please verify it resolves the issue"
__label__love	love_188	+1 Thanks Sambavi
__label__neutral	neutral_417	Fixed in subversion repository as of r1328492
__label__neutral	neutral_418	Changing resolution to WFM
__label__neutral	neutral_419	This was taken care of already.
__label__neutral	neutral_420	"Following the recent facets work, I think that as part of this issue we should do the following two things (in addition to what I described above): * Make OrdinalPolicy an enum with two constants (ALL/NO_PARENTS). It's already hard to support just these two (see LUCENE-4610 and LUCENE-4600), and it's not at all clear how to support arbitrary OrdinalPoilcy-ies that users will provide. ** Rather, if one really wishes to encode only say levels 3 and below, he can extend FacetFields and provide his own CategoryListBuilder. ** For the search side, he'll need to provide whatever will work for him (I cannot even describe here what API exactly because of the complexity) * Nuke PathPolicy. One can extend FacetFields and provide his own DrillDownStream. I'll need to check about that one, but it looks like we can get rid of it too."
__label__love	love_189	"Thank you, Ashish Vijaywargiya and Pranay Pandey :) Thanks and Regards -- Akash Jain"
__label__neutral	neutral_421	This bug is a duplicate of HIVE-3253.
__label__neutral	neutral_422	"Maven, I am on the fence about it. We actually do not need all the libs I included. Having them in a tarball sounds good, but making a maven repo for only this purpose seems to be a lot of work. {quote} Should we attempt to factor out the HBase commonality immediately, or commit the overlapping code and then do refactoring as a followup? I'm fine either way; I can give suggestions on how to create the reusable abstract bases and where to package+name them.{quote} If you can specify specific instances then sure. The code may be 99% the same, but that one nuance is going to make the abstractions confusing and useless. I await further review."
__label__neutral	neutral_423	"I think clearing private fields should work in all JVMs, since that's what the call to f.setAccessible(true) is for. Those fields were final too before DERBY-23, and it looks like modifying final fields via reflection didn't work prior to Java 5, even when calling setAccessible() first. The tests also fail on 1.4.2 (both Sun and IBM)."
__label__sadness	sadness_34	Sorry that I think I missed some discussion in the mailing list. The implementation and test and BreakIterator is attached.
__label__love	love_190	"Simon, thanks, please commit this :)"
__label__joy	joy_38	+1 This is a very desired feature for me. Ship it!
__label__joy	joy_39	"new patch looks good to me, +1"
__label__love	love_191	"Hi [~wikimore], [~michaelstockton], or any other Ruby user: I'd really like to commit that, but I need someone of you to review and confirm before. So if you want this being part of the next release .... thank you!"
__label__joy	joy_40	"I'm still not in love with the sarcasm or excessive negativity. I'll just point a few things out. 1/ I didn't veto anything, and this has nothing to do with C++. I think it is a bad idea for us to generate code in a way that causes semantics to silently change when a new optional field is added. This in dangerous in the long term. 2/ I have no problem reverting this change. 3/ Restoring the old constructor and marking in deprecated is probably a good idea."
__label__neutral	neutral_424	"I changed my mind and resolved DIRMINA-82, and therefore we don't need to fix this issue anymore."
__label__love	love_192	"Committed, thanks Sambavi."
__label__love	love_193	"Integrated to trunk. Thanks for the patch, Bryan. Thanks for the review, Chunhui."
__label__love	love_194	"I just committed this. Thanks, JordÃ !"
__label__sadness	sadness_35	"<pctony> Herbert, sorry we cannot do this. The scope of the blemlist AIUI is at the SVN repo level - and we run a single repo for all the ASF projects. However buildbot works at the per-project level. Short of perhaps re-writing all of our buildbot mechanisms from the SVN master this is not do-able. Sorry."
__label__joy	joy_41	"Tim, The fix is good. Please close this JIRA. Thanks a lot."
__label__love	love_195	Just committed this to trunk and 3.4 branch. Thanks Rakesh!
__label__sadness	sadness_36	"Sorry, forgot to mention this. Try to switch the tabs a second time. The first click on ""Tab B"" will correctly render ""Content B"". But switching back to ""Tab A"" and then again back to ""Tab B"" fails to render ""Content B""."
__label__neutral	neutral_425	"Anton and Spark, updated patch applied at revision r447348, thanks a lot for this enhancement, please verify that the problem is fully fixed as you expected."
__label__joy	joy_42	"+1 This patch looks good. Let's remove from 0.4, and work on a better implementation on 0.5"
__label__love	love_196	"I see you rebased the patch, thanks a lot."
__label__love	love_197	This was a temporary connectivity issue. You can close this bug. Thank you.
__label__sadness	sadness_37	"Sorry Alvaro, lot of things need to be done at the same time. But I am still not 100% clear what you want me to do / change. I put installation/wiki links on top-right now: http://incubator.apache.org/openmeetings/index.html What about the links to the Tutorials, you want to put those in the section ""Installation and Upgrade"" right? Sebastian"
__label__neutral	neutral_426	"Re: setReaderThread I didn't know we had such a method. It looks like it was added here: http://cvs.apache.org/viewcvs.cgi/jakarta-commons/net/src/java/org/apache/commons/net/telnet/TelnetClient.java?rev=1.9&view=markup Other than adding documentation to FTPClient about this, it sounds like like there isn't any other action to take on this report???"
__label__neutral	neutral_427	"Added the following to getRollbackOnly(): if (status == Status.STATUS_NO_TRANSACTION) { throw new IllegalStateException(""There is no transaction in progess.""); }"
__label__sadness	sadness_38	"Sorry it took so long to drag this up. I think the issue I had was with the Customer => BillingInfo and Customer => ShippingInfo relationships. BillingInfo and ShippingInfo each inherit from Address. IIRC, a runtime relationship was being created for Customer => Address, which was messing things up. I'll have to dig through the SVN history to see what I did with mandatory relationships that I mentioned being problematic in the initial bug submission."
__label__love	love_198	Thanks Kathey and Myrna. The release note looks good and it passes the ReleaseNoteReader's checks.
__label__love	love_199	"First sorry for the delay. It looks like this patch slipped through. I tried to apply it, but there are a bunch of conflicts (some of them are related to recent docstring format changes and other seem to be related to other changes). Can you please re-generate the patch against the latest trunk? Thanks!"
__label__love	love_200	Thanks Wei. I've committed your latest patch to SVN.
__label__love	love_201	addressed review comments. Thanks Vinod.
__label__love __label__joy	love_joy_28	Awesome. Thanks!
__label__love	love_202	Committed revision 1506513. Thanks Vinay.
__label__sadness	sadness_39	"Yes, sorry I forgot to mention this :-) But a header where this is stored would work great, and probably there should be a config item if you want it or not."
__label__joy	joy_43	"+1 looks good. As for the naming: [JIRA].patch stands for trunk patch, IMO. Any branch designations can be add as qualifiers. Thanks"
__label__love __label__joy	love_joy_29	"Looks excellent. Really sweet. + Where does the jar come from and whats its license? + The REST API looks good. Very RESTy. There might be little nitpicks later but for it looks great. How different is it from current REST. Should the two be the same? If not, how to deprecate the old? + The annotations look interesting. Could their serializations be used in other contexts, the shell say? Or -- warning -> crazy-thought coming -- somehow producing thrift IDL? + In hadoop/hbase, line lengths are < 80 chars (Your new classes are missing apache license, classes are missing comments describing what class is about, etc). + Is there anything we could do refactoring HTable say, so your modeling was easier? Looks like lots of code in your Cell and Database controllers. Should our client be taking on this model? + Can you add a note on how you've changed how REST works, high-level? Thats all for now."
__label__sadness	sadness_40	"Oops, it is my fault. Please defer this patch, I'll raise jira for other classes/interface as its dependance soon, sorry for inconvenience."
__label__joy	joy_44	Sounds like a good idea but better to only fix in 1.5 to keep 1.4 more 1.3-compatible.
__label__love	love_203	"Thanks a ton for your review, Todd. Here's an updated patch which addresses all of your comments except the following. bq. In EditLogFileInputStream, why do we need to pass isInProgress as a boolean? If it's in-progress, that means we don't know the lastTxId, so it would be INVALID_TXID, right? So we can implement isInProgress() by just comparing lastTxId. Because in the case of pre-transactional ELFIS, we pass in INVALID_TXID, even though the log is not yet in progress. I'm still working on producing an updated patch which also adds testing for the pending DN message queues."
__label__love	love_204	Committed to trunk. Thanks Edward.
__label__sadness	sadness_41	sorry for the delay
__label__sadness	sadness_42	"Sorry for the late review. Have a few minor questions/comments. 60. What happens if have 2 instances of Consumers with the same clientid in the same jvm? Does one of them fail because it fails to register metrics? Ditto for Producers. 61. ConsumerTopicStats: What if a topic is named AllTopics? We use to handle this by adding a - in topic specific stats. 62. ZookeeperConsumerConnector: Do we need to validate groupid? 63. ClientId: Does the clientid length need to be different from topic length? 64. AbstractFetcherThread: When building a fetch request, do we need to pass in brokerInfo as part of the client id? BrokerInfo contains the source broker info and the fetch requests are always made to the source broker."
__label__love	love_205	I just committed this to trunk and branch-2.0. Thanks Xeiguiming!
__label__love	love_206	Hi. The code above is a copy of the CharsetUtil class just run within a Junit Test case. There is no exception other than junit.framework.AssertionFailedError. Are you able to reproduce the error? Thanks Richard
__label__joy	joy_45	"Now why did I not think of that... :) Great idea, I'll move the files to svn!"
__label__sadness	sadness_43	"Sorry for the patch error. I have created a patch both for 562 and 564,and attached it in 564."
__label__neutral	neutral_428	"I don't think this is a bug. CachedSqlEntityProcessor will execute the query only once and that is its USP. If you don't want the caching, then just use SqlEntityProcessor."
__label__love	love_207	Committed r1146903 Thanks Jonas for the patch.
__label__love	love_208	This looks like a fine approach to me. Thanks for putting the patch together. +1.
__label__neutral	neutral_429	"Patch adds maybeRefreshBlocking which blocks on refreshLock. It also: * Renames reopenLock to refreshLock * Shares the refresh logic between maybeRefresh and maybeRefreshBlocking. * Switches to use ReentrantLock instead of Semaphore(1): ** It allows to protectively obtain the lock in doMaybeRefresh (see comment in the code) ** It is better in general because it's equivalent to Semaphore(1), yet protects against an accidental bug where someone changes Semaphore(1) to Semaphore(>1). I'll add a CHANGES entry after the patch is reviewed and we agree on the approach."
__label__neutral	neutral_430	Fresh build works for me now too. Looks like the missing snapshot has been published somewhere now.
__label__neutral	neutral_431	Hadoop-475 is for making reduce value iterators cloneable. Hadoop-531 is for sorting on multiple keys
__label__neutral	neutral_432	"(In reply to comment #29) > (In reply to comment #28) > > Created an attachment (id=19576) [edit] [edit] > > main patch file > > > > I'v had problems again applying the patch: something went wrong with FontSetup, > looks like the patch wants to remove this file entirely, which I don't think > should be the case. Hmm.. not sure quite why that happened. > Also, why did you change the DEFAULT_STRICT_FO_VALIDATION constant into > DEFAULT_STRICT_VALIDATION? I think it would be clearer to leave it as is. Have done."
__label__neutral	neutral_433	Committed revision 1517592.
__label__neutral	neutral_434	Committed by Ryan Baxter as revision 1352277
__label__love	love_209	"Thanks James, does the rest of the build work with this patch? Seems like this should work with the old RHEL5 toolchain but I didn't look closely."
__label__sadness	sadness_44	"Sorry to come in late. Some clarifications: # MR1 JT kills all running tasks on a TT when it's deemed 'lost'. # It also kills all completed maps on that TT for 'active' jobs. # The tasks are marked KILLED rather than FAILED and thus don't count towards the job, which is correct since it wasn't the job's fault. Hope this helps."
__label__neutral	neutral_435	"Hi Eli, didn't realize you were going to look at TestDatanodeBlockScanner too. I did extensive mods to it as part of HDFS-1295. Let's take a look and compare."
__label__love	love_210	Committed. Thanks John.
__label__love	love_211	"Committed to trunk. Thanks, Sergey!"
__label__neutral	neutral_436	"Now with try/catch and debug level log output. {noformat} 2011-10-23 16:10:49,699 INFO bsp.YARNBSPJob (YARNBSPJob.java:waitForCompletion(275)) - Job succeeded! {noformat},,,,,,,,,,"
__label__love	love_212	thanks
__label__love	love_213	Applied the patch with revision 170884. Thanks Carlin for the detailed updates (and for all the fixed double-dashes :)).
__label__love	love_214	"Hi Neil, Thanks for the advice ... > On the other hand, if you can design a handler that knows how to > make appropriate calls to the scanner's sendChars() method so that > the buffer gets flushed when a maximum buffer size is reached, then > perhaps a pluggable handler wouldn't be necessary since the default > behaviour would always work when an application has chosen to set > this limit. The code I have, as written, does have the pluggable handler notion, since I didn't want to arbitrarily couple the XMLBuffer class implementation (or worse, it's interface) to the scanner. I didn't go so overboard as to allow multiple registered handlers, or anything like that; this seemed simple enough without being a hack. > I'd also observe that XMLBuffer has to check to use the > infelicitously named ""insureCapacity()"" method to make sure it's > large enough Yes, this is where I implemented the full-handler invocation. It's more or less as you describe. Once I get everything cleaned up, I'll post the patch here; you'll probably find it to be entirely unsurprising. I think what I'll end up doing to allow user-configurable buffer size limit will be to add a setter method on Parser and AbstractDOMParser, something like setInputBufferSize(). I think that would be most consistent with the existing API. Sound ok?"
__label__neutral	neutral_437	"yes parseLedgerConfig did throw an IOException. since the bug is found in hub server, topic can't be acquired due to hub server can't closing such kind ledger. if we don't add code in LedgerOpenOp, we have to find all such kind ledgers and handle them manually (maybe delete them). throwing IOException here is OK for me. but I am not sure do we need to keep backward compatibility to handle data/metadata produced by old version. what is your opinion?"
__label__love __label__sadness	love_sadness_3	"I'm sorry, the error was only triggered on a clean build. Thanks for the catch Eric, can you please review the simple fix?"
__label__neutral	neutral_438	This appears in MS-Windows environment too. The following monkey-patch resolves the problem: DIV.datePicker td .topLabel { color: WindowText; } ------------------ patch datepicker.css -------------- (sorry still don't know how to official patches) .datePicker td .topLabel { - color: CaptionText; + color: WindowText; display: block; font-weight: bold !important; width: 100%; text-decoration: none; }
__label__neutral	neutral_439	Attached image showing blip padding in the Google Wave client.
__label__neutral	neutral_440	Committed revision 1480515. Committed revision 1480517.
__label__sadness	sadness_45	"Sorry, I didn't look at the package thoroughly enough. I now see that it can be used in the non-RPC cases also."
__label__neutral	neutral_441	"The attached patch, combined with an `svn rm drivers/' should be enough to call this a Done Deal."
__label__love	love_215	"Committed to 0.20.205.1, branch-20-security, 0.23.1, and trunk. Thanks, Dave!"
__label__love	love_216	Thanks a lot Willem :-)
__label__joy	joy_46	"Great, thank you for the commit Harsh! Mitch, thank you for providing the detailed bug report."
__label__neutral	neutral_442	"Hi Dushshantha, Please find the attached file AXIS2C-1193-manual.patch."
__label__love __label__joy	love_joy_30	Great! Thanks. Aaron
__label__love	love_217	"Committed to trunk and 0.9 branch. Thanks, Arup!"
__label__love	love_218	Thanks for the patch Richard. Applied to LUNI module at repo revision r418009. Please check that the patch was applied as you expected.
__label__neutral	neutral_443	one additional example: http://www.who.int/entity/tb/publications/global_report/gtbr12_execsummary_ar.pdf
__label__love	love_219	"Vishal Kher to Benjamin, Camille 9:38 AM (54 minutes ago) Hi Ben, I was going to open a jira after checking with you guys. With your solution won't we run in into the problem that Camille pointed out by marking the snapshot for lastZxid - 1? - Peer fails after taking the snapshot. The snapshot has applied lastZxid, which created a child znode. During recovery it will apply lastZxid, which will faill with NodeExists and we will increment the Cversion of the parent (after fix for ZOOKEEPER-1046). So creation of sequential znodes won't be be really sequential. This is probably acceptable, but should be clearly documented. If not, then from this bug, it looks to me that patch ZOOKEEPER-1046 was also not complete. We may need to conditionally update cversion. I think we need a clear document of how snapshots are supposed to work and what to assume while taking snapshots and while recovering from snapshots. It will be very helpful for to verify the correctness of implementation and for future bug fixes.I will open a jira for this bug shortly and post our discussion as well. Thanks. -Vishal"
__label__neutral	neutral_444	Created an attachment (id=12961) [chain] CatalogFactoryBase
__label__neutral	neutral_445	"Hi. Yes, perhaps I got a bit trigger happy. Although I did get a +1 from another committer and I assumed that the ""submit patch to hudson"" wouldn't be able to pick up on the renaming of the test using patch.sh and would fail. Perhaps there is a better way to do this which I am not aware of? Glad to get feedback though, need to properly get the hang of the process"
__label__neutral	neutral_446	"yes,- this is HDFS-4866 releated. I've added reference."
__label__neutral	neutral_447	I think I'd rather have a CL option so it can still raise an error if you think (say) just one node is down but a second goes offline briefly as you run the loader. But --skip-dead-nodes would also be reasonable.
__label__neutral	neutral_448	"Thanks for the update Tom, this is getting close! Some more comments: {quote} > src/java/org/apache/hadoop/mapreduce/TaskType.java > -> Public? Stable? It is public. Not sure about whether it is stable yet. {quote} I'd tend to lean towards making it Stable to ensure it's never broken, it probably deserves that status given how central it is to the framework. Thoughts? I don't see either 'audience' for this yet it the patch, maybe you missed it? bq. Are MarkableIterator and MarkableIteratorInterface public user classes? The unit test for them (TestValueIterReset) implies that the user instantiates a MarkableIterator. +1, public bq. I left all of the lib.db classes public evolving since they are used by various extensions and users. Does this sound reasonable? +1 {quote} > src/java/org/apache/hadoop/mapreduce/Job.java > -> public Yes. > src/java/org/apache/hadoop/mapreduce/JobCounter.java > -> public Yes. > src/java/org/apache/hadoop/mapreduce/JobPriority.java > -> public Yes. {quote} Again, I don't see 'audience' as 'public', another human miss on your part? Or am I seeing the wrong patch? ---- Comments on rest of the classes I missed in the first pass: src/java/org/apache/hadoop/mapreduce/security/token/package-info.java -> Unstable src/java/org/apache/hadoop/mapreduce/security/token/delegation/package-info.java -> Unstable src/java/org/apache/hadoop/mapreduce/TaskTrackerInfo.java -> Public, used in Cluster src/java/org/apache/hadoop/mapreduce/util/package-info.java -> Unstable src/java/org/apache/hadoop/mapreduce/TaskCompletionEvent.java -> Public, Job.getTaskCompletionEvent src/java/org/apache/hadoop/mapred/JobInProgress.java -> limited-private, for schedulers src/java/org/apache/hadoop/mapred/Task.java -> limited-private, for schedulers src/java/org/apache/hadoop/mapred/JobEndNotifier.java -> public, maybe evolving since end-users use this directly src/java/org/apache/hadoop/mapred/LineRecordReader.java -> limited-private (mr, pig) src/java/org/apache/hadoop/mapred/JobProfile.java -> Odd, I thought this was 'public' - but I can't find any uses for it. The FairScheduler uses it, so 'limited-private' ? src/java/org/apache/hadoop/mapred/TaskCompletionEvent.java -> public, accessible via JobClient"
__label__love __label__joy	love_joy_31	"That looks great, thanks! I replicated the database but can't figure out how to start the CouchApp, can you help? Cheers, Chris."
__label__love __label__joy	love_joy_32	"this looks good, but a bunch of tests are now broken because of the new hidden input, I will fix the tests, do some more testing and commit in the next few days. thanks for the patch!"
__label__love	love_220	"Integrated to 0.94 and trunk. Thanks for the patch Jimmy. Thanks for the review, Andy."
__label__neutral	neutral_449	"If this is deemed to be a valid bug, you can use my upcoming patch which simply doesn't pass the calls to getLoginTimeout and setLoginTimeout through to the BasicDataSource. I guess it could be a good thing to let the BasicDataSource throw the UnsupportedOperationException notifying the programmer that their call to the method really isn't doing anything. OTOH, they probably care more about successfully migrating their 1.0.2 app to 1.1 and this is just getting in the way. If they really want to know why their call to setLoginTimeout isn't working they can check the included javadoc. So, if you decide it's a bug then there's a patch coming..."
__label__neutral	neutral_450	Created an attachment (id=12544) mimeInput.eml for this test case
__label__neutral	neutral_451	"Did you mean to reference HADOOP-8562? HADOOP-8952 was never committed, although apparently a typo during the checkin of HADOOP-8562 accidentally referenced it."
__label__sadness	sadness_46	Sorry I forgot to mention: This is for the future branch!
__label__love	love_221	Thanks Ivan for take a look. I'll go through and work on this weekend.
__label__love	love_222	"+1 looks good. Once it is committed, I will deploy it. Thanks Sourygna."
__label__neutral	neutral_452	"Reopened for submission to branch-1.2, per [~jlowe]."
__label__neutral	neutral_453	"Somehow it seems that this problem is more on the rubygems side. I didn't have time to investigate it any further, but looks like rubygems is using @gems internally sometimes as a hash and sometimes as an array. You could try doing the following change in rubygems/source_index.rb (line 410): 410c410 < @gems.replace(new_index.gems) --- > @gems = Hash[*new_index.flatten]"
__label__neutral	neutral_454	S3 would be interesting
__label__neutral	neutral_455	Committed revision 1331262.
__label__sadness	sadness_47	"Hi, I just made some more (long running) tests, and found some problems in the patch I submitted. The mechanism is working, but it shrinks the caches too quickly, and it prints too much log output (log.info instead of log.debug). I will fix those problems and submit a new patch. Sorry. Thomas"
__label__neutral	neutral_456	Any reason not to commit this patch? It's been hanging around a long time.
__label__love	love_223	Committed to sqoop2. Thanks Jarcec!
__label__neutral	neutral_457	"hi dhruba borthakur , I am using the 20.1 version.. I put NameNode in safemode and then i executed the save namespace,,But editlogs are not corrupted.. can u please give exact scenario to reproduce this."
__label__neutral	neutral_458	Released in ClickIDE 2.2.0.0.
__label__neutral	neutral_459	The patch is generated against the latest trunk.
__label__love	love_224	Applied. Thanks!
__label__love	love_225	Passed tests and committed to trunk. Thanks Charles!
__label__love	love_226	"Thanks, Omkar! I committed this to branch-0.23 as well."
__label__joy	joy_47	"I think you should get rid of the open-ended version spec [1.2,) as it occasionally screws things up by bringing in snapshots or non-working code. Otherwise, to my eyes, it looks good."
__label__love	love_227	Thank you for the patch Xuefu! I have committed it to trunk!
__label__love	love_228	I just committed this. Thanks Amareshwari!
__label__sadness	sadness_48	"{quote} because they are non-javadoc Eclipse-related only, and not everybody uses Eclipse. {quote} ouch... sorry about that. You will not see that again."
__label__love __label__joy	love_joy_33	"Thanks Bruno and Bilgin, You patches are in trunk revision: 691953 Great to see good cooperation at work :)"
__label__love __label__joy	love_joy_34	"Excellent, thanks a lot!"
__label__neutral	neutral_460	"An updated documentation of the Processor is now at http://wiki.apache.org/solr/LanguageDetection @Lance: What params were on your mind as candidates for keyword instead of true/false, and for what potential future reasons?"
__label__love	love_229	"I have committed this. Thanks, Aaron!"
__label__neutral	neutral_461	"yes, go ahead."
__label__neutral	neutral_462	I can also see this would get screwed up in Zookeeper mode if the elevate file didn't exist.
__label__love	love_230	Hi Holly Thanks! I have the one comment - where is the code for InternalRecursiveBundleTracker? I don't see it in the patch Did I miss the source code for it? Lin
__label__love __label__joy	love_joy_35	Patch 3 looks good to me too. Thanks for all the work.
__label__neutral	neutral_463	"I propose to commit drop_column_v8_restored_tests.diff. If there are any reviewers currently examining this patch, please let me know. Unless any additional review comments are raised in the next 48 hours, I will commit the patch."
__label__love	love_231	"I just committed this. Thanks for the reviews, Doug. (BTW the last patch didn't include the removal of lang/java/mapred/src/main/java/org/apache/hadoop/io/SequenceFileBase.java, so I did that manually when I committed.)"
__label__neutral	neutral_464	Perhaps we should have a filesystem-specific method that indicates whether a path is fully-qualified?
__label__love	love_232	Thanks Andrew for covering me.
__label__love __label__joy	love_joy_36	"The patch looks good, and so do the tests. Thanks. My only question is why were the following lines added to setup? {code} conf.set(YarnConfiguration.NM_LOCAL_DIRS, ""file:///bin/echo""); conf.set(YarnConfiguration.NM_LOG_DIRS, ""file:///dev/null""); {code} The test seems to pass just fine without them, and I did not understand their need."
__label__neutral	neutral_465	"Just curious, how did you solve the split packages issues and invalid symbolic names with some Lucene modules? I can't see it in the parent pom."
__label__neutral	neutral_466	"Hi, I am still having the same problem with the 1.4.1 build. Can you please check this a.s.a.p. Best Regards"
__label__love	love_233	Committed to trunk. Thanks Jeff!
__label__neutral	neutral_467	"Released in Qpid 0.24, http://qpid.apache.org/releases/qpid-0.24/index.html"
__label__love	love_234	"Committed to trunk. Thanks for the review, Alan!"
__label__love	love_235	"committed, thanks!"
__label__neutral	neutral_468	"This doesn't exactly seem fixed to me. First of all, I can't make this work on an actual RELEASED version of the plugin. Second, I can't even get the most recent snapshot to work at all. The POM includes all sorts of noise that just shouldn't be required, per Chris's point. Can this issue get some attention? I'm fairly certain this plugin just flat out doesn't work in its current state."
__label__neutral	neutral_469	I'm trying to conditionally hook this into the build so we can get it into SVN and go from there
__label__neutral	neutral_470	"Hi Guillaume, I think that what you are saying is right and i find ( despite is on the specification or not ) that to have the error status is quite useful. But i don't agree that if InOnly MEP terminate with an ERROR status it should propagated back. I agree totally with Gianfranco this should be done only when we're working in sync mode, otherwise it's better not to propagate the error back and use feature like restart from the failure point, that we've just implemeted. Do you agree with this?? Andrea"
__label__neutral	neutral_471	"No noticeable performance impact with stress.py defaults, or with one column per row in periodic mode."
__label__joy	joy_48	+1 patch looks good
__label__joy	joy_49	"Yes, we need to fix it. :)"
__label__neutral	neutral_472	TestWordCountTether times out. I suspect the wrong version of Java is used for subprocess.
__label__neutral	neutral_473	yes
__label__neutral	neutral_474	"Hi Robbie, would you mind reviewing this commit?"
__label__love	love_236	Merged the batch file updates to branches/2.1 (revision 743129). Thanks again!
__label__love	love_237	patch applied - thanks!
__label__love	love_238	Committed. Thanks Zheng!
__label__neutral	neutral_475	Created an attachment (id=17244) Fix misspelled function names
__label__love	love_239	"I just committed this. Thanks, Jim!"
__label__neutral	neutral_476	Not commited in cvs.
__label__love	love_240	"Hi Aki, I strongly suggest you write a persistence system test both for client and server side, which can expose the problem you mentioned and also verify your fix works. Actually we already have ServerPersistenceTest and ClientPersistenceTest in systests/ws-specs, I think you can add yours in those two classes. Btw, your suggestion seems ok for me. Thanks Freeman"
__label__neutral	neutral_477	"Aleksey, is the problem you mentioned is caused by this patch? If yes I can fix it and submit new patch ASAP."
__label__neutral	neutral_478	Created an attachment (id=12011) LazyDynaClass Test Case
__label__love	love_241	Junit patch committed Revision: 634284 - Thanks John.
__label__neutral	neutral_479	"Patch, failover-slave-2b.diff committed as revision 633043."
__label__neutral	neutral_480	Nevermind. I believe someone has already addressed it in CAMEL-4294. I have linked the issue here.
__label__love	love_242	"Thanks a lot for the review, Todd. I've just committed this to the HDFS-3077 branch."
__label__neutral	neutral_481	"Hi Fuhwei, I was a bit worried by the big override method in your patch, so I have taken a good long look at this, but as its an area of the code I'm not very familiar with I can't necessarily jump in with an expert comment. My current analysis of this is that EMF forces an assumption in the two lines of XSDEcoreBuilder's createFeature method XSDTypeDefinition elementTypeDefinition = getEffectiveTypeDefinition(xsdComponent, xsdElementDeclaration); EClassifier eClassifier = getEClassifier(elementTypeDefinition); that the type of an element is contained in the emf representation generated from the input schema. So, if we could override getEffectiveTypeDefinition and conditionally return an XSDTypeDefinition from the metadata available within our SDO scope then we would be OK. For the case where the type referenced in the schema was provided by an earlier XSD to SDO conversion I think we can retrieve this data, and then do whatever's necessary, if anything, to get the EClassifier based on that type definition (I haven't spent the time to dig into that as I thought now was a good time to discuss) This wouldn't cover the case where a schema writer was assuming some types were available that hadn't been produced from an XSD, but I don't know that that's currently a realistic use case. If my analysis is correct we could lobby EMF to make a change so that the above two lines were incorporated into a single protected method call that didn't require the EClassifier lookup to proceed via an XSDTypeDefinition instance. Then our override would be able to return an EClassifier based on the xsdComponent and xsdElementDeclaration directly. What do you think? Have I missed a/the point here?"
__label__neutral	neutral_482	v4 Patch does not apply snapshot branch ff25969ea0b2ff38cc25512a02569c351e757d66 Looks like this is built upon some of the online snaphots work. What branch/hash does this go on Matteo?
__label__neutral	neutral_483	"I had almost the same interface for the command-line option in mind, but sticking to the previous formats for specifying the id: ./wmgr-client --url http://localhost:9001 --operation --getWorkflowInstMet --id <workflowInstId> And in return, display the values in the format as you suggested above."
__label__neutral	neutral_484	"well, if the user uploaded a file in the first FileUploadField, then it should be handled by the first nested Form, and if he uploaded a file in the second then it should be handled by the second, and if both ... then both ! If only outer Form process all the submit then I understand that it can be difficult to implement what I expect, are nested Form informed of the submition or not ? In fact FileUploadException is raised only for size limit exceeded, can't we handle this thru an IFormValidator instead of a hardcoded check ?"
__label__neutral	neutral_485	Created an attachment (id=3493) Patch to validator-rules.xml for bug
__label__neutral	neutral_486	Closing all resolved tickets from 2010 or older
__label__love __label__sadness	love_sadness_4	My apologies - I submitted the wrong patch file. I've checked the trunk and what you applied is correct so I won't re submit. Thanks for covering my sloppiness.
__label__love	love_243	[~apresta] thanks for the fast review.
__label__neutral	neutral_487	"This patch adds some getting started documentation and also a new page about configuration. I've removed the individual pages for services in the absence of something to write there, but we can add back as needed. I've also commented out some broken links that won't be live until we do a release. I think we could make this live now. Thoughts? BTW before applying the patch run: svn mv site/src/site/confluence/getting-started.confluence site/src/site/confluence/quick-start-guide.confluence"
__label__love	love_244	"hi, Im Sujan. I need to send proposal for gsoc 2012 for AIRAVATA-345. how can i do it? please let me know the steps what should i do ? Thank u email: hardsujan@gmail.com"
__label__sadness	sadness_49	"Sorry for the mess there, I was just trying to port CFS and Hive metastore too... but those tests don't work right now, so put it on hold, getting it to work with CQL3 Column Families is a priority for me right now, so will come back to those later. Just for the Hive handler, please look at the (cas-support-simple-hive) branch - https://github.com/milliondreams/hive/tree/cas-support-simple-hive All the test cases (whatever few they had) pass there and it is working perfectly with Thrift/Compact storage Column Families."
__label__neutral	neutral_488	Patch attached.
__label__love	love_245	"Yes, I just tried it and this change works when the user's classpath variable is unset. I've just committed this. Thanks Michael!"
__label__neutral	neutral_489	"er, take two, uploaded wrong thing."
__label__love	love_246	"Hi Bilgin, you are right the entitymode.xml can be removed but I when I add it I'm thinking to add a new filed to PosTerminalInternTx entity to store ""Pos Paid Reason"" instead of store it in the reasonComment field. I have already created some enumeration into DemoPosData.xml but it is still not been used. There are still a lot of things that has been not implemented or not working so contribution from other people are welcome. Removing the hardcoded value pos-1 into WebPosEvents.java at line 77 is something still to be done. I'm thinking to add a combo box after logged in to choose the posTerminalId but I didn't get the time to do it. Thanks Marco"
__label__love	love_247	thanks Attila. I fixed the test/header already
__label__neutral	neutral_490	We did agree to produce a hive release in less then 3 months that did not use the NPath trademark. This jira is to specifically address that.
__label__joy	joy_50	+1 looks good - all tests pass.
__label__neutral	neutral_491	"Hi Christian I just tried to apply your patch, but I found there is no pom.xml in the camel-soap module. Can you submit it to the JIRA ? BTW did you run the test with JDK 1.5.0 ?"
__label__neutral	neutral_492	"Attach a screenshot of Local Security Policy console (secpol.msc), where users can add symbolic links privilege to their accounts."
__label__neutral	neutral_493	"> If it's windows and it's a local filesystem URI, do the os-specific subbing. You can't always tell whether it's a local filesystem URI. Lots of relative paths are constructed that do not contain a scheme."
__label__neutral	neutral_494	Marking this as won't fix.
__label__joy	joy_51	"+1, branch-2 patch looks good to me. I'll commit this to branch-2 later today to give others a chance to comment."
__label__neutral	neutral_495	"I found the reason why we observe different behaviors with the network server: Since you run with the default security manager, you actually get derby.system.home set as a system property as a side effect (see line ca line 586 in NetworkServerControl.java) as part of the set-up of the security manager. I ran without the security manager, so I did not get it set. I do think though, that the old behavior was buggy: I can't see why one should need to set derby.system.home explicitly to get the auto-boot behavior. Unless someone can explain why this should be so, I'll file a bug for that."
__label__neutral	neutral_496	"Could you make sure that the following path exists on your machine: C:\Program Files\Apache\Tomcat 6.0\webapps\ode\WEB-INF/jpadb It sometimes happen that Tomcat, for some reason, fails to open the WAR which results in an incomplete deployment."
__label__sadness	sadness_50	Sorry about that.
__label__sadness	sadness_51	"I'm afraid one can't extract the text from the given pdfs. Both are using fonts with a non human readable encoding and as there isn't included any mapping, you'll get rubbish instead of the text. Even the acrobat reader can't extract the text."
__label__neutral	neutral_497	"Attached the patch, which addresses the issue in EntryLogger."
__label__love	love_248	"Committed to trunk. Thanks, Harish!"
__label__neutral	neutral_498	Yes 70x indicates something amiss.
__label__neutral	neutral_499	"Yes, that's right."
__label__neutral	neutral_500	Made some more progress with kryo plan serialization. Check-pointing WIP patch.
__label__love	love_249	Hi Aidan can you take care of this when you do QPID-1010. Thanks
__label__love	love_250	"Hi Daisy, could you please dispatch this review to one of your team? Mingfei did not respond on that and I would like to be certain we got all provided patches with us for 0.7. Thanks in advance, Svante"
__label__neutral	neutral_501	Duplicate of CASSANDRA-4587
__label__love	love_251	"Thanks. Yes, when that fragment is part of an RTF file it provokes the exception, so if you could put it into a valid RTF file it should throw the exception."
__label__neutral	neutral_502	The inline patch came out garbled. Same patch attached.
__label__neutral	neutral_503	Could you please share how is it impacting ?
__label__neutral	neutral_504	I've done some modifications and checked with valgrind and reduce around 6000 bytes of a loss with echo sample. regs lahiru
__label__neutral	neutral_505	Created an attachment (id=1417) xercesc/framework/XMLValidator.hpp
__label__neutral	neutral_506	"Further optimized caching in KernelNodeStore a bit in revision: 1450145 The test now just runs for a very long time (with -Xmx128m) and didn't run out of memory so far on my machine. Though, it is still working on 51200 child nodes after it reported '25600 nodes in 1440293 ms'."
__label__love __label__joy	love_joy_37	Fixed. Thanks for report (even if I'm not sure empty password is a good idea :-) ).
__label__neutral	neutral_507	Committed to 1.3.1 branch at revision: 685854
__label__love	love_252	"Committed to trunk. Thanks, Sushanth!"
__label__joy	joy_52	"Great, [~jhsenjaliya]."
__label__neutral	neutral_508	This isn't a bug. These tests are outdated and it was unclear that they were useful. They have Junit @Ignore annotations that cause them to be skipped (on purpose).
__label__love	love_253	"Hey Aidan, can you cast your eye over this again. Thanks."
__label__sadness	sadness_52	The patch here seems to be attached to a wrong jira. Sorry about the confusion. I have re-attached the path here.
__label__neutral	neutral_509	"hmm... i couldn't run your huge 7.5 MB application. Sorry for asking again, but will it be possible to post a ***smaller*** test case? Actually, that will also help you to isolate the issue. - venkat"
__label__joy	joy_53	This looks good to me. +1 pending beta-8.
__label__neutral	neutral_510	"One more comment, this should be in the incompatible section in CHANGES.txt."
__label__neutral	neutral_511	"Dag commented (6/30/2011) on the commit of revision 1141368 - apparently replies on the commit messages don't make it back into JIRA, so just for the record, here is that comment: ""I didn't follow this one, but I notice setUp and teardown do not call super.setUp, super.tearDown respectively as per the idiom. Is there a reason for this here? Notably BaseJDBCTestCase#tearDown does some cleaning up. It may not be required here, but it's generally good to stick to the idiom."" Houx Zhang replied: ""Yes, Dag. I agree with you, and will adopt it."" Looks like Bryan already added super.teardown with revision 1141769."
__label__love __label__joy	love_joy_38	"As Olivier does all the great work here, I assigned the issue to him. Thank you!"
__label__neutral	neutral_512	Dupe of JUDDI-310.
__label__love	love_254	"Integrated to 0.94 and trunk. Thanks for the patch, Anoop. Thanks for the review, Stack."
__label__neutral	neutral_513	Corrects problems with continuous replication timeouts introduced by r916518 and r916868.
__label__neutral	neutral_514	"count' is protected by 'lock', also extract() and removeAt(), and before invoking extract() and removeAt(), there has check to make sure 'count' not zero. So I can't see any chance that 'count' could be invalidate in extrac() and removeAt()."
__label__neutral	neutral_515	newPost now sets publishEntry to true.
__label__neutral	neutral_516	"DWR validation is working fine for me with FF 1.5, but the submit action for lesson1 is still not working. IE 5.5/6.0 still throws some really disturbing error messages which I could not yet resolve."
__label__neutral	neutral_517	There is no mxmlc.exe in the 4.10 release only mxml (for OSX and Linux) and mxml.bat (for windows). How did you install 4.10?
__label__neutral	neutral_518	Move to wish list since we won't include this in the upcoming G 2.1.5 release.
__label__love	love_255	Committed to trunk and 4x. Thanks Simon!
__label__love	love_256	"I just committed this. Thanks, Hairong!"
__label__love	love_257	"If you ment this <s:div id=""t4"" showLoadingText=""false""> <s:form id=""form"" action=""AjaxTest""> <input type=textbox name=""data""> <s:submit type=""button"" theme=""ajax"" label=""Update Content"" targets=""t4"" id=""ajaxbtn""/> </s:form> </s:div> it still doesn't post the form values in IE but works fine in FF Thanks a lot for your quick response. I really really appreciate -ravi -- Ravi Mangalagiri www.bluepitch.org (My personal website. Coming soon!) 703-505-4240 (c)"
__label__love __label__joy	love_joy_39	"Looks great, thanks Tinny!"
__label__neutral	neutral_519	Attached fix patch.
__label__sadness	sadness_53	"sorry, After investigation, the real source of the problem is when a tag is using dots (<a.variable>) Apparently, XMLConfiguration does not support this. Should it ?"
__label__love	love_258	Hi. Should this be ok to commit to trunk? Thanks.
__label__neutral	neutral_520	"Kishan, If this is already merged, can you change status to resolved??"
__label__love	love_259	Works for me. Thank you Alexei.
__label__neutral	neutral_521	Patch that fixes this problem and adds a test case demonstrating it.
__label__neutral	neutral_522	From what i can see on the system the libpthread is in /usr/lib and in /usr/lib64 and both of those paths are in my library config.
__label__neutral	neutral_523	Duplicate of COUCHDB-1415
__label__love	love_260	"Committed, thanks"
__label__sadness	sadness_54	"Hi Lars, sorry about the delay in responding. Good point about the TreeMap always returning result in a deterministic ordering. The patch itself I think is still beneficial because it removes a little bit of redundancy in the existing equality code. IMO, the fix makes it easier to understand as well. In addition, the tests are beneficial since we were missing coverage there. I think it'd be better if the fix were in sooner, but it's probably not an issue if we moved it to 0.94.7."
__label__neutral	neutral_524	"Here's a potential fix for this. close() and hflush() now may throw InterruptedIOException if the thread has interrupt status. It's a bit tricky because they won't *always* throw it - if they weren't going to block, they will return immediately (with interrupt status preserved)"
__label__love __label__joy	love_joy_40	"Committed to trunk. Thanks, Bharath! And thanks Cos for helping review."
__label__neutral	neutral_525	"Just changed the workflow scheme, should work now."
__label__love	love_261	"Thanks for the patch, applied to 1.x and 1.5.1"
__label__neutral	neutral_526	fixed to use reader.termDocs(null) for delete check.
__label__neutral	neutral_527	"Attached v2.2, rebased to trunk latest."
__label__love	love_262	Thanks Daniel. We will get back on this as soon as we have the correct information. Thank you.
__label__love	love_263	"Committed to branch and trunk, thanks for the review Stack."
__label__love	love_264	Patch committed to trunk Thanks Hari!
__label__sadness	sadness_55	Sorry I put a comment here which was for another issue (tired as said already)
__label__neutral	neutral_528	As of 05/25/07 no error is thrown in IE7 when title bar is clicked in window.xal example.
__label__love	love_265	"Thank you, Gregory, Eugene. Verified on Harmony-r547521-msvc-debug."
__label__neutral	neutral_529	"Nathan, I have not been able to get the time to run the other tests. However, I did try changing the timeoutwait. I set it to 10000 as suggested. The test failed as it did before. I then decided to change it to an unrealistic number 60000. The program died as it did before. Whats interesting with this test is that it did not even run for a minute. As such I dont think changing this value had any impact on the problem."
__label__neutral	neutral_530	I commented out the assertion for this test ... it's not valid.
__label__sadness	sadness_56	"sorry, should be: path -p6 < pluto-1.1.0-taglib-el.diff"
__label__love	love_266	"Hi Rustam, Finally I will not commit the IMAP-351 patch, so it will be good that you attach your patch here. Thx, Eric"
__label__love	love_267	Patch verified at r535584. Thank you for applying it.
__label__love	love_268	"+1 I committed this. Thanks, Hong!"
__label__love	love_269	"Hi Colm, My comments are the same, see above: https://issues.apache.org/jira/browse/CODEC-161?focusedCommentId=13485148&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13485148 I've not gone through to see if you've addresses any of comments but a quick scan shows that you did not pick up 2 and 3 so I'll wait for the next version of the patch ;) Thank you, Gary"
__label__joy	joy_54	This seems good to me. +1 to apply it
__label__love	love_270	"Thanks, applied OK."
__label__neutral	neutral_531	Committed to trunk with revision 467578. Committed to 10.2 with revision 467580.
__label__love	love_271	Attached patch for review... Christian could you see if this works for you? Thanks!
__label__love __label__sadness	love_sadness_5	"Sorry, I dont understand, are you saying that this will not be fixed for minOccurs=0? And the workaround is to set minOccurs=1? Thanks, Chris"
__label__joy	joy_55	Works for me. Thank you Paulex.
__label__love	love_272	"Hi Willem, I've just tried the latest version from the trunk. Now everything works like a charm. Thank you very much for such a great help. Regards, Sergey"
__label__joy	joy_56	"+1, Looks good, I will commit this patch."
__label__sadness	sadness_57	"> Alexander Shorin Not quite, I propose that the URLs remain the same. Merely the source code gets moved around. On release-packaging time, jquery.couch.js is pulled in from the other repo. I mean in long term vision (e.g. for CouchDB 3.0+). It's oblivious that for 2.x it will also available by old URL and new one (if any). But ok. > jquery.js should stay the way it is as long as we ship Futon. So when we replacing Futon with Fauxton (this will happens anyway) we also stops shipping with jquery.couch.js and his deps, correct? I want to clarify this moment since it is the main of this issue and to be sure that we all thinks about the same. Sorry for such persistent questions! Thanks(:"
__label__neutral	neutral_532	Didn't make 1.1
__label__love	love_273	"Patch applied, thanks!"
__label__love	love_274	"Committed to trunk. Thanks, Navis! [~thejas] I will recommend inclusion of this bug fix in 0.12 as well."
__label__love	love_275	"Thanks Ivan. I'll do the changes by just return if it matches as you suggested. I'll investigate it later. bq.Auditor will be a top level daemon, so it should own its create it's own LedgerManagers and ZooKeeper client. The only thing passed in to is should be the configuration. Anyway we are planning to have initialization class which does starting Auditor and RW threads. Would you agree to create ledgerManagers there and pass it to the Auditor and RW daemons? In that case, shall I keep the ctor as it is. (by taking managers) {code} public Auditor(String bookieIdentifier, AbstractConfiguration conf, ZooKeeper zkc, LedgerManager ledgerManager, LedgerUnderreplicationManager ledgerUnderreplicationManager) { {code}"
__label__neutral	neutral_533	This is a java problem.
__label__love	love_276	"committed, thanks!"
__label__joy	joy_57	"Looks good. +1, pending Hudson."
__label__love __label__joy	love_joy_41	"Thanks for the revision, JÃ¸rgen! I think the release notes look good now. I will resolve the issue after a few days, to allow for any feedback on Knut's suggestion."
__label__joy	joy_58	"+1, looks good. Checking this in."
__label__love	love_277	Patch committed. Thanks Jarek!
__label__love	love_278	+1. Looks good to me.
__label__love	love_279	"I've just committed this to the HDFS-347 branch. Thanks a lot for the contribution, Colin."
__label__sadness	sadness_58	"Oops, didn't mean to leave that in."
__label__neutral	neutral_534	Enabled garbage collection on transient and durable queue message managers. Also added a check on capacity limit before removing idle containers.
__label__love	love_280	"Hi DIGY, I like to know a bit more about this patch: 1) what test case is it fixing? 2) how did you determine the race condition? The changes to the ThreadClass is considerable and I'm trying to understand why this wasn't a problem in earlier versions. Thanks. -- George"
__label__neutral	neutral_535	"I haven't spent enough time thinking about this but I think it is more than just fixing the error message string. It seems that the comparable method in DTD should return int rather than boolean and the return int value will decide if we should throw what we are throwing today (ie something like ERROR 42818: Comparisons between 'VARCHAR' and 'CHAR' are not supported. ) or throw a new message because collations don't match. This is just my initial thought, haven't spend enough time to think about a solution"
__label__love	love_281	Hi Rich! Thanks for taking the time to move forward on this. I didn't have any JUnit problems at all with Maven2 when I installed it. But clearly we're in a world of hard-to-replicate behaviors here. :) What is the exact problem you're seeing?
__label__joy	joy_59	Great idea.
__label__neutral	neutral_536	"We got lots of votes on this issue, seems like we should take some action here! I will assign it and make sure it will be resolved rather sooner than later. bq. Please add this feauture to get expectations right, we are working on releasing 3.2 soon and this one should not block it. I will work towards 3.3 here"
__label__neutral	neutral_537	any progress on this issue?
__label__sadness	sadness_59	bq. So we can add isAlreadyExpiring() and if true Sorry it should be So we can add isAlreadyExpiring() and if flase we can go with expireIfOnline
__label__neutral	neutral_538	Dupe of HIVE-3869
__label__neutral	neutral_539	"Hi Willem, yes, you're right.. I did not realized that I had a explicit dependency on the wrong version... You can close this ticket."
__label__love	love_282	Thank you Jacques for the quick commite !! Pierre
__label__neutral	neutral_540	This change was only applied to the 0.5.x-dev branch. It needs to be merged to trunk.
__label__neutral	neutral_541	I am in the middle of reviewing both of these patches and noticed that they are related and won't mix well.
__label__love	love_283	I've just committed this. Thanks Arun!
__label__sadness	sadness_60	"Oops - the hivemodule.xml snippet from the previous post should read: <implementation service-id=""tapestry.multipart.ServletMultipartDecoder""> <create-instance class=""org.apache.tapestry.multipart.MultipartDecoderImpl,sizeMax=-1"" model=""threaded"" /> </implementation> Sorry for any potential confusion..."
__label__neutral	neutral_542	It looks like we have to rebuild StackMapTable from scratch during method generation. I've tried BCEL code and it looks like it already have implementation we need but I don't see ways to reuse it for now... By the way I recommend to increase this issue priority to high or blocker.
__label__love	love_284	Thanks Amit & Vivek - Committed at r907620. -- Ashish
__label__neutral	neutral_543	Oh one more thing on the tests. You have if (JVMInfo.JDK_ID >= 6) { ... test should it b if (JVMInfo.JDK_ID >= 5) { ?
__label__sadness	sadness_61	"Hello, Sure you are right here, I didn't make myself clear enough Im sorry. As you (and RFC959) say, when we are sending the file we should transform to NVT-ASCII but not when we are receiving the file. In this second case, i think that the expected behaviour is that the text message be written to a file with the default line separator for the platform. The sender converts the data from an internal character representation to the standard 8-bit NVT-ASCII representation (see the Telnet specification). The receiver will convert the data from the standard form to his own internal form. Actually , according to the spec before a RETR ASCII operation is transformed we should be converting the charset to ASCII , for our machine could be using EBCDIC to store files and clients are supposed to expect that files are encoded in NVT-ASCII. So I don't know ... Any way, this has little priority for me (until someone using a non-ascii-compatible encoding complains) so we could leave this for the future. Any way I don't like ASCII mode for it breaks the 'REST' command. My implementation only supports binary mode."
__label__joy	joy_60	+1 patch looks good. The checkstyle.xml is specified in hadoop-project-dist/pom.xml .
__label__joy	joy_61	+1 looks good - will commit if the tests pass
__label__love	love_285	"Thanks for the patch, applied for 2.0.1/2.1"
__label__neutral	neutral_544	What is interesting here is that the OOM error already occurs while processing the SOAP part of the message and not while accessing the attachment part (as one would expect). What is the stack trace that you get with Axis2 1.6.1 and Axiom 1.2.12?
__label__love __label__joy	love_joy_42	"Thanks a lot for fixing those issues, Alejandro. I re-ran all the tests I ran last night and everything worked great. Additionally, I tried out test-patch.sh, which seemed to work flawlessly. +1, patch looks good to me."
__label__love	love_286	Applied to trunk. Thanks Andrey
__label__love __label__joy	love_joy_43	"Rakesh, The patch looks good to me. Ill wait for hudson to check this in. We are good to go for 3.4 RC now! Thanks Rakesh!"
__label__neutral	neutral_545	Lets fix this post rampart-1.3
__label__love	love_287	Integrated into trunk and 0.96. Thanks.
__label__love	love_288	"Patch applied, thank you."
__label__neutral	neutral_546	The patches on XERCESJ-1365 supersede the ones attached here.
__label__sadness	sadness_62	"My oops, then. I hadn't defined it, I was assuming that it would be handled like the other special characters... ...sorry for the trouble."
__label__neutral	neutral_547	The fix causes test to fail in other circumstances. Apparently File.delete() can't be relied upon to actually delete the file.
__label__neutral	neutral_548	HBASE-10079 now looks like a race in the tablename caching. Not related to the locking here.
__label__joy	joy_62	The fknames patch looks good!
__label__love	love_289	"Johannes -- Thanks for the complete testcase! Sorry about taking so long to fix this one. Thanks, Rick"
__label__neutral	neutral_549	[~acmurthy] did you commit to both branch-1.2 and branch-1?
__label__love	love_290	"I have committed the patch to trunk, branch-2, and branch-2.0.4-alpha. Thanks you Jagane!"
__label__sadness	sadness_63	"Otis, You need to grab the 'zipped' version aka solr-215.patch.zip (since June 23). I was trying to be space & bandwidth friendly... Sorry I did not make it more obvious in some previous comments. Henri"
__label__neutral	neutral_550	Looks like this broke imports into Intellij
__label__sadness	sadness_64	Sorry I meant ZOOKEEPER-1239.
__label__love	love_291	Thanks Dawid!
__label__love	love_292	"I just committed this. Thanks, Prachi!"
__label__neutral	neutral_551	Can you run: {noformat} yum repolist all {noformat} and post what you see?
__label__neutral	neutral_552	InstanceDescription can be extended with HandlerDescription without pain. Only problem is a contribution to ComponentTypeDescription by custom handlers. Simple slot for custom handlers to keep their information in displayable format would be sufficient.
__label__neutral	neutral_553	Patch is attached
__label__neutral	neutral_554	Quick fix to interchange the order of constructor arguments of ClientIdAndTopic.
__label__love	love_293	Thanks Zheng!
__label__neutral	neutral_555	I have attached a patch that provides the necessary translations.
__label__neutral	neutral_556	@Andy Thanks for pointing it out. We did not take the latest patch by mistake and thought this change was missing. Sorry about that. But still i think this JIRA we can use to solve {code} org.apache.hadoop.hbase.mapreduce.TestImportExport.testSimpleCa
__label__love	love_294	"Thanks, Rick!"
__label__love	love_295	"abhi, can this be assigned to someone thanks /sudha"
__label__love	love_296	Thanks for taking a look Bikas and Devaraj. Committing this.
__label__joy __label__sadness	joy_sadness_0	+1. Patch looks good. I want to wait until FALCON-85 is committed to commit this else I'll have to regenerate the merge patch. Sorry about that.
__label__neutral	neutral_557	"bq. CASSANDRA-2444 got in the way I'm not sure what the right solution is here. I buy the premise of 2444 that you don't necessarily want to get hammered by compaction when you're first starting up (warming up caches). So I don't think ""check for compactions ever N seconds"" is a great policy. But, I'm not sure ""check every N seconds, starting M minutes after startup"" is great either because it's not something a user will just guess when he's wondering ""why aren't compactions happening yet?"" Any other ideas?,,,,,,,,,,"
__label__neutral	neutral_558	"Now, the following tag: <html:javascript dynamicJavascript=""false"" staticJavascript=""true"" /> Always adds <script .....> ... </script>. I thought that staticJavascript purpose was to allow things like: <script src=""<html:rewrite page='/staticJs.jsp' />"" type=""text/javascript""></script> And create a jsp with something like: <%@ page language=""java"" contentType=""text/javascript"" %> <%@ taglib uri=""struts-html"" prefix=""html"" %> <html:javascript dynamicJavascript=""false"" staticJavascript=""true"" /> And take profit of browsers cache. No this is broken. As a workaround <jsp:include page=""/staticJs.jsp"" flush=""true"" /> can be used, but this hasn't any benefint over generating both static and dynamic javascript in the same tag (except form multiple forms per page) If this is the intended behaviour I'm sorry for reopenning the bug."
__label__love	love_297	Mind taking care of this one Doug? This looks like a 0.92.0ism so needs dnoting so in the book as for 0.92.0. Thanks.
__label__neutral	neutral_559	Added to all-developers group which has this permission.
__label__love	love_298	"Integrated to 0.92, 0.94 and trunk. Thanks for the patch, Chunhui. Thanks for the review, Lars."
__label__love	love_299	"Gregory, thanks - the patch is applied as expected."
__label__love	love_300	Thanks for the commit!
__label__neutral	neutral_560	"Pom.xml <https://reviews.apache.org/r/4054/#comment11930> So, all proto generated files go to proto/generated? All into the same package? Thanks Jimmy. Also, mind checking out Deveraj's patch? I'd suggest at least reviewing it to figure if you fellas are using same conventions going all proto. Good stuff - Michael"
__label__love	love_301	"I have committed this. Thanks, Michele!"
__label__sadness	sadness_65	"Oops, sorry folks. Wrong project."
__label__joy	joy_63	+1 Patch looks good
__label__love	love_302	"Hi Ian, this looks brilliant to me! So fat +1 from me."
__label__joy	joy_64	Looks very good. +1
__label__love	love_303	"I've committed this to trunk, branch-2, and branch-2.2. Yingda, thank you for the patch. Chuan, thank you for help with the code review."
__label__love	love_304	"Thanks, patch applied."
__label__joy	joy_65	Looks good to me Markus. +1
__label__love	love_305	"Committed to trunk, branch-2 and branch-2.1-beta. Thanks Jian."
__label__love __label__joy	love_joy_44	"Patch looks great! Thanks Artem. No more mixing in of fuzzy-ness into AnalyzingSuggester. It looks like we are doing the utf8 conversion + det twice per lookup, once in convertAutomaton and once in getFullPrefixPaths. But, I think this is inevitable: the first conversion is on the ""straight"" automaton, for exactFirst match, and the second one is on the lev automaton, for non-exactFirst. Really we should only do the first convertAutomaton if exactFirst is true ... but this is an optimization so we don't need to fix it now."
__label__love	love_306	"I've tried patching the current SVN version of tapestry-core, but the patch did not work for me either, though no failure messages, just silently does nothing when trying to get a page (404). This is a homebrewed version of the ""quickstart"" app. Directory structure is exploded/x.ear/x.war/WEB-INF/classes/... JBoss is set to deploy the exploded/ directory. Packing the JAR in WEB-INF/lib works, but JBoss/Tomcat can't do reloading or hot deployment in this case, which is very annoying. It would be nice if I could get this to work :) Used JBoss 4.0.5"
__label__neutral	neutral_561	"Patch Commited, closing bug"
__label__sadness	sadness_66	"Sorry, I missed Bill's comment. bq. We've seen similar exceptions when loading data that contains text with the column delimiter in it, which produces shorter than expected tuples. Could that be the case here? I don't think that's the case here. However, I've made many silly mistakes&misunderstandings in pig before. Let me double check."
__label__love	love_307	"[~bikassaha] Thanks for the heads-up Bikas! This JIRA is not concerned with the Tez integration for Pig and is simply the abstraction in Pig to allow for alternate ExecutionEngines in Pig. But will certainly change this on the Tez integration side of stuff. Thanks a lot [~cheolsoo] for continuing this! I think everything looks good from my end. I can certainly see why we may want to keep this on a different branch until everything is finalized. Certain things may still need more work. For example, OutputStats is not completed abstracted out, as it still has references to POStore which is a MR implementation construct. ScriptState/PPNL/JobStats may still need more abstraction (especially PPNL) and reworking to incorporate a new ExecutionEngine abstraction. I think what we have done here is the minimum foundation for an abstraction though, and it would be appropriate to put into trunk, but these are not my decisions to make. With regard to public methods that were changed, I don't think most of them are a big deal, besides as Cheolsoo said, the PigServer throwing PigException. I never thought IOException was a good exception to throw, but I think reverting PigServer back to IOException as it is userfacing code is not a big deal. The rest of the method signature changes shouldn't be worrisome because most of them are internal to the project. However, the change from JobStats to MRJobStats, while necessary (as each ExecutionEngine would have it's own type of JobStats it would present to the end user), could be problematic because it is userfacing code and would probably break people who were previously using JobStats. That I think is the most important thing to keep in mind. The task of making the PPNL and JobStats clearly tied to the ExecutionEngine should be thought through also."
__label__love	love_308	"Thanks for the new patch, Kim. +1"
__label__love	love_309	I just committed this to trunk and branch-0.23. Thanks Arun!
__label__love	love_310	"+1 Thanks Harsh, the patch looks good. > Also, might it be reasonable to mark just isInSafeMode @InterfaceStability.Stable? Since this is a new API, we are not sure if want to change it. Let's leave it as-is for the moment."
__label__neutral	neutral_562	Apparently this is not completely solved.
__label__love	love_311	"Hey Tom, The change in your patch looks good. Latest patch just updates two tests. I'll commit this if Hudson comes back OK. Thanks, Eli"
__label__love	love_312	"Thanks Mirdul, committed in trunk r903428 and 9.04 r903429"
__label__neutral	neutral_563	closing since 4.1.0 is now released
__label__neutral	neutral_564	"If you run the train command you get an error in the model serializer, I suggest to train on the ppa data set, serialize the model and then load it again to ensure there are no runtime errors in this code path. Its also easier to debug in an IDE if it fails in a junit test. That is the exception I get: Caused by: java.lang.NullPointerException at opennlp.model.GenericModelWriter.persist(GenericModelWriter.java:91) at opennlp.tools.util.model.ModelUtil.writeModel(ModelUtil.java:71) at opennlp.tools.util.model.GenericModelSerializer.serialize(GenericModelSerializer.java:39) at opennlp.tools.util.model.GenericModelSerializer.serialize(GenericModelSerializer.java:31) at opennlp.tools.util.model.BaseModel.serialize(BaseModel.java:553) at opennlp.tools.cmdline.CmdLineUtil.writeModel(CmdLineUtil.java:173) at opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool.run(TokenNameFinderTrainerTool.java:193) at opennlp.tools.cmdline.CLI.main(CLI.java:222) ... 6 more"
__label__neutral	neutral_565	Fixed. Now we dont have restPath only service path.
__label__love	love_313	"Fixed the minor nits. Thanks, Sid!"
__label__love	love_314	Committed. Thanks Kevin!
__label__love __label__joy	love_joy_45	bq. Opened LUCENE-3595. thanks! I committed this to trunk and backported to 3.x nice iterations.. ;) heavy committing
__label__joy	joy_66	+1 This looks good to me.
__label__love __label__joy	love_joy_46	"Hi Paulex, The fix looks good, thanks! Best regards, Andrew"
__label__neutral	neutral_566	Created an attachment (id=2473) Patch to MANIFEST.MF
__label__neutral	neutral_567	"Todd, I briefly looked at the patch. It looks like you are trying to get rid of the Journal Spool in BN. Correct me if I am wrong. I don't think you can. BN makes a checkpoint from its memory state, which differs it from SNN and CN. While it does it, the namespace should be locked (for modifications), so the edits go into journal spool, which is reapplied to memory after the checkpoint is finished. Please see the design doc in HADOOP-4539."
__label__love __label__joy	love_joy_47	"Jaigak - Its nice to see another application on top of Yarn. Since its a lot of new code, could you please add some notes on the high level components and suggest some pointers on navigating the code. It will help review the changes. Thanks!"
__label__joy	joy_67	"+1, patch looks good."
__label__love	love_315	Thanks for the patch.
__label__love	love_316	Can anyone please review the attached patch ? Thanks
__label__love	love_317	Integrated to TRUNK. Thanks for the patch Ramkrishna. Thanks for the review Michael and J-D.
__label__love	love_318	I just committed this to Trunk. Thanks! NOTE: made some slight changes to patch to apply correctly to Trunk.
__label__love	love_319	Thanks for the clarification. I will reintroduce separate data structure for LEADING/FOLLOWING notifications.
__label__neutral	neutral_568	Created recovery mechanism jira at HBASE-4652
__label__love	love_320	"Release Candidate 1 of this patch. This patch contains: + add IP Address to CrawlDatum Version 5 (as byte[4]) + a IpAddress Resolver (map runnable) tool to lookup the IP's multithreaded + add a property to define if the IpAddress Resolver should be started as a part of the crawlDb update tool to update the parseoutput folder (contains CrawlDatum Status Linked) of a segment before updating the crawlDb. + using cached IP during Generation Please review this patch and give me any improvement suggestion, I think this is a very important issue, since it helps to do _real_ whole web crawls and not end up in a honey pot after some fetch iterations. Also if you like please vote for this issue. :-) Thanks."
__label__love	love_321	"Committed, thanks!"
__label__neutral	neutral_569	T5 requires Java 1.5+
__label__neutral	neutral_570	"I committed this change. Thanks for reporting the issue Kazuki: {code} Index: src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java =================================================================== --- src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java (revision 1074909) +++ src/main/java/org/apache/hadoop/hbase/client/HConnectionManager.java (working copy) @@ -300,7 +300,6 @@ // initialize zookeeper and master address manager this.zooKeeper = getZooKeeperWatcher(); masterAddressTracker = new MasterAddressTracker(this.zooKeeper, this); - zooKeeper.registerListener(masterAddressTracker); masterAddressTracker.start(); this.rootRegionTracker = new RootRegionTracker(this.zooKeeper, this); {code}"
__label__love __label__joy	love_joy_48	"Brilliant, thanks!"
__label__neutral	neutral_571	I see no gain to make it singleton (Scala object) too. No need to change it without reason.
__label__neutral	neutral_572	"the compiler works more or less good enough, not perfect, but it should minimize the manual labor we have to perform."
__label__neutral	neutral_573	"Stefan, > the said method is not public since it returns *all* workspace names, regardless of user rights. please note that > the a session must only see/know about workspaces it is actually allowed to access. I'm working on a garbage collector for the data store. The GC doesn't care about user rights, or, putting it another way, it must be able to access all workspaces. Ideally I'd like to use a SystemSession, but you can't get one outside RepositoryImpl or o.a.j.c package (i.e., getSystemSession(String) is package private, WorkspaceInfo is protected). I understand that these APIs shouldn't be public, but they're useful from within the core. In my case, for the GC. I'm very interested in using another way to walk every workspace, but this other way should guarantee that the repository won't shutdown during a walk operation. I'll check the solution Thomas said he'll be proposing, but in the mean time that is what I'm using. Still, I don't see why this APIs aren't public. Regards"
__label__love	love_322	Thanks Robert. Committed to trunk.
__label__love	love_323	Committed to trunk. Thanks Johnny!
__label__neutral	neutral_574	"Andrey, I don't quite understand this patch. For instance, you didn't mention bcprov above but you remove some references to it in build/make/components/extra.xml and build/make/deploy.xml and confusingly the patch doesn't remove build/make/components/extra/bcprov.xml ? This seems a little inconsistent. Perhaps I'm missing something."
__label__neutral	neutral_575	We dropped check for references; we need to always compact if references.
__label__love	love_324	Committed this. Thanks.
__label__love	love_325	"committed to 0.94, 0.95 and trunk Thanks Jerry for the patch and Stack for the review!"
__label__neutral	neutral_576	Changes committed with revision: d3a9688d00bd520dc1c9b3a40b229aa9b10c87f0
__label__neutral	neutral_577	Address the issue of extracting runtime library info from asm module.
__label__neutral	neutral_578	Added license headers.
__label__love	love_326	"I have committed this. Thanks, Junping!"
__label__neutral	neutral_579	I logged a new ticket HADOOP-9280 as this is critical problem for people trying to upgrade from 0.2 to 1.x
__label__neutral	neutral_580	"Thanks for getting started on this. I have a couple of requests - 1. Could you please upload a patch to this JIRA and grant it to Apache ? 2. This patch doesn't apply cleanly to trunk, would you mind updating a patch that would ? It will make it much easier for us to review it. Also, when you said the zk connect option hangs, did you get a chance to take a look at the debug/trace logs to see where it hangs ? Do you mind uploading those log files here ?"
__label__neutral	neutral_581	(This is the Debian build of the 1.0.6 RC that Sylvain just put up)
__label__neutral	neutral_582	This task was done before the 2.7.1 branch was created. This task is now resolved.
__label__neutral	neutral_583	"Never mind, figured it out, will be committing patch in the next few days."
__label__neutral	neutral_584	duplicate of FLUME-1475
__label__neutral	neutral_585	"Added missing 2 * package.html. Some files need to be removed (svn del): src/java/org/apache/commons/jexl/Arithmetic.java src/java/org/apache/commons/jexl/parser/JEXLNode.java (*) src/java/org/apache/commons/jexl/util/PropertyExecutor.java src/java/org/apache/commons/jexl/util/BooleanPropertyExecutor.java src/java/org/apache/commons/jexl/util/introspection/UberspectLoggable.java src/java/org/apache/commons/jexl/util/GetExecutor.java If on windows, you really need to remove it before applying the patch otherwise it will just keep using JEXLNode.java for a class named JexlNode... The patch does not apply cleanly especially UberspectImpl & Introspector. The ""best"" approach I've found yet is to force apply updates even if patch thinks it may have already been applied. Then, for each of them, copy/paste the '.rej' content replacing the end of the original file with the content at the proper place; a quick regexp replace with '^+ ' to get rid of these '+' and it should be ok. I wish I had a way to generate patches guaranteed to apply (a tool that would apply the patch to the original file & if rejects are found, re-create a patch for this file that replaces the whole content - delete all original content, add all new content - with the new one....)"
__label__love	love_327	"Committed to branch, thanks Eli."
__label__love	love_328	Patch is committed to the trunk. Thanks Niraj.
__label__neutral	neutral_586	"Are there any plans to release a 2.4.1? If yes, can this fix be included?"
__label__love __label__joy	love_joy_49	+1 The patch looks good.
__label__love	love_329	"I committed this. Thanks, Raymie!"
__label__love	love_330	committed to trunk. Thanks [~elserj]!
__label__neutral	neutral_587	[~brocknoland] Did this not patch?
__label__neutral	neutral_588	Will commit it today evening.
__label__neutral	neutral_589	"@Owen - I'm working on getting Harmony working on Hadoop at present. We're pretty close, and have workarounds for most issues but the trick is to fix the issues in such a way that we can create a patch with a resolution that works for all the JREs. Yes,"
__label__love	love_331	Thanks Martijn!
__label__neutral	neutral_590	attached patch puts all MessageDigest creation into util class.
__label__sadness	sadness_67	"Sorry, I narrowed down the issue to Chrome's over-zealous caching. I was able to reproduce the problem on two separate computers in a simple project where I had upgraded from Wicket 1.4.0 to 1.4.15. But due to testing before and after, Chrome had cached the buggy version of wicket-ajax.js from 1.4.0 and did not detect that it changed with the update. Clearing the browser cache resolved the issue. Sorry about the bogus bug report."
__label__joy	joy_68	"Attaching updated patches. Arun, let me know it this looks good. Thanks"
__label__neutral	neutral_591	"I've just gotten a chance to look at this. A few things jump out immediately. 1) I have to chew over the changes to Cayenne core a bit more. Off hand, they don't seem bad, but something feels weird about it. 2) While I can appreciate the cut working like a remove, it's a bit weird to be prompted to delete the item. 3) I can't paste an ObjEntity I just cut back to the same DataMap. With the lack of an undo feature, the only reasonable thing for me to do is a revert the datamap. 4) I think my font changed for labels. I'll have to verify that. Looking at #3 again, actually, I can't seem to paste at all. I even tried creating a new DataMap and was unable to paste the ObjEntity to that."
__label__neutral	neutral_592	This is fixed in CVS (post 1.5b5).
__label__neutral	neutral_593	bq. Can we just make it final when we backport this change? Duh no we can't since we have core IR impls subclassing IR...
__label__sadness	sadness_68	"Sorry for the noise, I forgot to grant the license to previous attachment for inclusion in ASF works. Thanks"
__label__love	love_332	"ah, got it. thanks Ivan for explanation."
__label__love	love_333	"These look just fine -- thanks for your hard work on all these fixes, Dag! If they are technically correct, I say +1 to commit."
__label__love	love_334	"I just committed this. Thanks, Boris!"
__label__neutral	neutral_594	Fixed in 1.4 release branch in r605105. Leaving open until fix (with other pending changes) is ported back to trunk.
__label__love	love_335	Thanks for the patch. Committed to 0.8.
__label__joy	joy_69	+1 patch looks good. This cleans up a lot of code.
__label__love	love_336	"Committed to branch, thanks Eli"
__label__love	love_337	"Hi Chris, could you add my username as initial developers for the Spark JIRA? Thanks."
__label__neutral	neutral_595	"Hi Alan, I was merely commenting on the title of the JIRA, not the UDF name."
__label__love	love_338	Thanks Jarcec - that clarifies.
__label__sadness	sadness_69	"Good catch, sorry about that. I had run the tests but I guess I didn't re-run on the very latest rev against latest trunk. New patch fixes the NPEs."
__label__sadness	sadness_70	"Oops, sorry. Certainly right."
__label__neutral	neutral_596	Committed revision 648214 for IPF fix.
__label__neutral	neutral_597	patch that replaces the numeric constant value with the symbolic name of the enumerated constant
__label__joy	joy_70	Looks good to me. Mike
__label__sadness	sadness_71	"Hi Josh, I'm sorry I didn't check all the path that could effect the http method url. After went through the code and I found a way to verify my change and find a minor issue of http component. I will commit a better patch shortly. Willem"
__label__love	love_339	"I rather we don't work on older versions. If this is still an issue in 2.3.1, please submit a new patch for 2.3.1. Thanks."
__label__neutral	neutral_598	"Adds leading ""/"" to root context of default plan."
__label__joy	joy_71	"Hi Ramin, The patch looks good except I think it would be good to give import/export its own SQLState starting with XIE instead of reusing the existing store FILE_EXISTS message. Also it would be good to have test cases for writing the lob files. Kathey"
__label__love	love_340	"Thanks Ilya, Aleksei - the patch was applied to BTI branch 2.0 at r542776. Please check that the patch was applied as you expected."
__label__neutral	neutral_599	"Due to the java compiler bugs Jing mentioned, I have reverted the commit."
__label__love	love_341	"I committed this. Thanks, Nicholas"
__label__love	love_342	Thanks!
__label__neutral	neutral_600	"I can't reproduce this error. I also can't properly navigate in your example since the UI doesn't properly work on a Nexus 4. Tried on the Nexus 10, but your splash screen took too long."
__label__love	love_343	I committed the patch to trunk. Could you please submit a patch for the 0.16 branch. This one doesn't apply cleanly. Thanks!
__label__love	love_344	"Hi Hairong, the speedups you measured with this patch are very impressive. It would be great to have it included in the system. The patch still applied successfully to current trunk when I tried it. So can you please go ahead and ""submit patch"" so we see how it does with test-patch? And I'll review it, and try to get someone else to also. Thanks!"
__label__neutral	neutral_601	"Actually now that I think of it, we never had anything exposed via jmx for the RM? Looks like this is the first bean we are adding. Is that right? I thought some of the work that Thomas did on web services was also exposed via jmx. No?"
__label__love	love_345	Thanks Erwan for you're effort :-)
__label__neutral	neutral_602	Updating patch against new 4164.patch-2.txt from CASSANDRA-4164.
__label__love	love_346	"Thanks Ankit, Your patch is in trunk at r1060220, I did not backport as it's not breaking anything"
__label__neutral	neutral_603	"When I ran make-maven target, build failed with following error: {noformat} BUILD FAILED /Users/amarsri/hive/build.xml:706: Warning: Could not find file /Users/amarsri/hive/build/ql/pom.xml to copy. {noformat} I don't see any pom files created in build directory."
__label__love	love_347	I just committed this. Thanks Patrick!
__label__neutral	neutral_604	"reopening issue for a partial revert as requested by Tsuy, see http://mail-archives.apache.org/mod_mbox/incubator-clerezza-dev/201009.mbox/%3CAANLkTikODvHWEzyUzsseJ7nZWjUDFhri6qKxjBmiS9WF@mail.gmail.com%3E"
__label__love	love_348	"Thanks Dawid. bq. Yes, this is pretty much the top-n nodes reordering that I did, albeit without any optimization of how many n to take (the hardcoded magic constants should probably be justified somehow? Or replaced by a default in FST somewhere?). bq. Deciding how many nodes to reorder is I think hard â€“ I failed to provide any sensible fast heuristic for that and I simply do a simulated annealing to find a local optimum. Yeah the algo is simplistic now... and it does force caller to pick the params (though minInCountDeref=3 and maxDerefNodes=Inf are probably pretty good)... we can and should make it more sophisticated over time. We have at least one spare bit to still use in the arc flags :) bq. One thing I was wondering is why you decided to integrate the packer with the fst â€“ wouldn't it be cleaner to separate packing from construction? Granted, this requires a double pass over the fst nodes and more intermediate memory but it wouldn't add any more complexity to the builder which is already, ehm, a bit complex . You can compare this design in Morfologik: Well... it's tricky. First, I decided to change node targets to ords so that pack could use an array to (relatively!) efficiently hold node data, eg inCount, newAddress, etc. That required making the first pass FST ""modal"" (deref'd or not). If we didn't do this then the packer would have to use even less RAM efficient data structures (eg Map<Int,X>) I think? Second, the format written by the packer is tightly coupled with the FST reading, ie there are sizable differences when reading packed vs unpacked FST. But I agree it'd be cleaner if we could move packing out (eg Util.pack), and more strongly decouple packing from FST format... One thing I'd really like to somehow do is create different classes for FST writing vs reading, and different classes for each format. We now have write-ord, write-non-ord, read-packed, read-unpacked (and even the two readers have 3 different modes depending on INPUT_TYPE)."
__label__neutral	neutral_605	"I've revised DateConverter to conform to java 6: changed isAlphabetic to isDigit (and reversed the ?: values) use SimpleDateFormat(""Z"") as Tilman suggested. Also fixed some Javadoc in both DateConverter and TestDateUtil"
__label__neutral	neutral_606	"Hmm, not quite. Added this above entry to my web.xml, but I'm unable to load the jdbc driver, oracle.jdbc.driver.OracleDriver. What's weird is that this class is in Cocoon's normal classpath. How do I specify the classpath? Once I get this answered (either here or in cocoon-users which I've also asked), I'll close the bug."
__label__neutral	neutral_607	dist dirs created also.
__label__neutral	neutral_608	Assigning back to Dag.
__label__love	love_349	I just committed this. Thanks pat!
__label__neutral	neutral_609	"Dang, just realized this might be hard. Each individual node can't really predict when/where conflicts will happen. So how would it avoid compacting away the shared parent?"
__label__neutral	neutral_610	I believe this is a duplicate of HTTPCORE-328 Oleg
__label__love	love_350	"Well, if it is just a documentation bug, even better. Thanks for the clarification."
__label__love	love_351	"Committed, thanks Jiayan!"
__label__love __label__joy	love_joy_50	thanks for the patch Michael Van Geertruy :)
__label__love	love_352	Thanks Daryn I put this into trunk and branch-2
__label__joy	joy_72	+1 the patch looks good.
__label__love	love_353	+1 thanks
__label__joy	joy_73	Great job. I'll review this patch today's night.
__label__love	love_354	"Hi Pieter, it looks fine now ; thanks ; your mirror will be added to the list in an hour or so. Groeten, Henk Penning"
__label__sadness	sadness_72	"Sorry, I'd accidentally deleted the --disable-eventfd from my compilation script."
__label__sadness	sadness_73	"Sorry Michael, but I did find one small last issue with the patch. I guess you meant to use Boolean.parseBoolean(this.jcd.getAttribute(""org.apache.jetspeed.engineScoped"", ""false"")) instead of Boolean.getBoolean(...). After correcting that, the patch works for me and I'll commit that change. If you can confirm it still works for you then I hope we really can close this issue."
__label__neutral	neutral_611	It is not needed in trunk. Trunk will be taken care of in HADOOP-7853.
__label__neutral	neutral_612	"Fixed, eventhough these are commented out."
__label__sadness	sadness_74	"bq. I'm gonna hold off on LUCENE-2771 until we figure this one out... because it would make your getSequentialSubReaders in the synced=true case quite heavy (without modifications). Sorry, I was wrong on this... I totally forgot the norms cache is lazy-loaded always in that patch. I'll commit LUCENE-2771 it shouldnt affect this!"
__label__neutral	neutral_613	"You're right, I didn't check what the warning was about and assumed it was due to your patch. Resubmitting it. And yes, I'll create a jira for the findbugs warning."
__label__neutral	neutral_614	"It's hard to say. I lost 5 nodes in about an hour, but I don't know how many I lost last time"
__label__love	love_355	"Fixed at r504842, thanks!"
__label__joy	joy_74	Looks good to me.
__label__sadness	sadness_75	"Sorry to close this David, but the Messenger component headed over to codehaus where I think it's pretty much dead."
__label__love	love_356	"I just committed this. Thanks, Milind!"
__label__neutral	neutral_615	"Hudson does not work well, patch has been manually tested."
__label__love	love_357	"Hi Antonio, I can take this one, if nobody is working on it. Would be a nice one to get my feet wet... :) Thx, Sam"
__label__neutral	neutral_616	"bq.It handles both meta is not assigned, and it is double assigned. Yes"
__label__neutral	neutral_617	Committed revision 585929.
__label__neutral	neutral_618	Ok I'll add these.
__label__neutral	neutral_619	"No, this is not the right fix. HDFS can *not* depend on MapReduce. Please remove the dependence completely."
__label__love	love_358	"Thanks for volunteering for this, Prashanth!"
__label__neutral	neutral_620	"Attaching a new patch that compiles without errors against JDK1.4.2. It also accounts for the customizable port part (DERBY-4217), which the previous patch didn't."
__label__neutral	neutral_621	Bringing this in the latest 0.89
__label__joy	joy_75	Patch looks good to me.
__label__neutral	neutral_622	Attached another refresh
__label__love	love_359	Thanks Sandy. Committed to trunk and branch-2.
__label__neutral	neutral_623	"What's the status of this issue? Is it still alive? The latest comments seem to indicate it was a DNS misconfiguration problem. Stack, could that have been the cause of your experience with the issue?"
__label__love	love_360	"I just committed this. Thanks, Arun!"
__label__love	love_361	Thanks
__label__neutral	neutral_624	"Looks like patch failed QA due to lack of tests. Are there existing tests for the shell? At a glance, I couldn't find any."
__label__neutral	neutral_625	Commited in r823180 thx robert
__label__neutral	neutral_626	"I did NOT want to add a ""framework"", but rather *exactly* the opposite."
__label__love	love_362	"I've just committed this to trunk and branch-2. Thanks a lot for the reviews/testing, Chris and Todd."
__label__sadness	sadness_76	"I had no idea about fetching binary data, sorry. Is it flash? Looks like my patch addressed all three points, failing only for handling raw bytes."
__label__neutral	neutral_627	[~arpitgupta] thanks for helping narrow this down!
__label__neutral	neutral_628	model objects were not serializable
__label__love	love_363	Committed. Thanks Yongqiang
__label__sadness	sadness_77	"Sorry, forgot that dev lists were merged before JMeter was made TLP"
__label__love __label__joy	love_joy_51	The patch looks good to me. +1 pending Jenkins.
__label__love	love_364	"Andrew, patch applied at revision r428265, thanks a lot for this enhancement, please verify that the problem is fully fixed as you expected."
__label__neutral	neutral_629	"Uwe, can't you use ExtendedFieldCache.getLongs, passing in your own LongParser?"
__label__love	love_365	"I checked this into trunk, branch-2, branch-2.1.0-alpha, and branch-0.23. Thanks Daryn for a quick fix to this."
__label__neutral	neutral_630	Verified by Oliver.
__label__neutral	neutral_631	TestBlockTokenWithDFS fails for the same reason.
__label__neutral	neutral_632	"Kathey, I think you should just go ahead and port the fix to 10.1. Merge command: svn merge -r 289538:289539 https://svn.apache.org/repos/asf/db/derby/code/trunk I have started working on a general check-that-resources-are-freed test for DERBY-23, DERBY-210 and DERBY-557, but while doing that I ran into another resource leak (DERBY-594) that I wanted to resolve first."
__label__love	love_366	hi. Ping? :)
__label__sadness	sadness_78	"Thx for the confirmation, vm will be created along with dns etc. hopefully later this week. sorry for the need to be a bit formal. rgds jan I."
__label__neutral	neutral_633	I have attached the modifications to the ClientStubWriter.java in wsdl. This modification will solve the problem. But I didn't check further memory leaks with the modifications.
__label__love	love_367	Committed. Thanks Siying
__label__joy	joy_76	Looks like the 0.95 issues are timeout related...should be good to go.
__label__love __label__joy	love_joy_52	"bq. If you back-port this to 2.9, you can't use any of the java.util.concurrent.* Very good point! - didn't thought about back porting at all. bq. I'm not sure you need a separate SearcherHolder class - can't you re-use IndexReader's decRef/incRef? I guess I did not see the simplicity the reader offers - blind due to java.util.concurrent.* :) bq. I think there are some thread safety issues.. this is weird - on my dev machine and in the patch it is not synchronized.. on the machine I run the tests it is. Anyway you are right. I changed the code to be compatible with 2.9 using indexReaders.dec/incRef.. will attache in a minute"
__label__love	love_368	Hi Victor Thanks alot for your help testing this issue! Would be good to know if it works on Centos too. kind regards bob
__label__love	love_369	"Thanks Tucu! You are right. I had not thought of that. I'm on the fence because we are serializing a process which should happen fast (so parallelizing is good). Like you already mentioned bq. 1* Add a method in the FileSystem to disable its shutdown hook. MRAppMaster would disable it and call closeAll() explicitly (it already does). This is already present (by setting conf.setBoolean(""fs.automatic.close"", false) ) So I'm not sure what problem this JIRA is fixing. Or are we planning for the future? I'm fine with the latter answer being yes. I'm just curious. The patch looks good for what it intends to do, although the latest one doesn't include the fixes you made in response to Nicholas' comments."
__label__love	love_370	"Hi Alena, Hope all is well, Sorry for delayed response, the 5 vms dont belong to any project. I could not find a way to retrieve all vms without looping the projects. Thanks ilya"
__label__neutral	neutral_634	I added a patch to fix the deadlock issue. I used the same type of approach as Brian Ewins did with his patch. So the addition of some of his concepts could be applied to fix them both at the same time. Reference of his patch suggestion: http://nagoya.apache.org/jira/browse/AXIS-238?page=history
__label__love	love_371	"Oh, thank you lohit. Then should we close this issue?"
__label__love	love_372	patch applied. thanks!
__label__love	love_373	"I committed this to 0.20 and above. Thanks, Corinne!"
__label__love	love_374	"I just committed this to trunk, thanks Owen"
__label__love	love_375	Yes it can be resolved. Thank You!
__label__sadness	sadness_79	"Carl - Sorry I missed that though I did see it on the logs 2x, the other being this one. Fixed in this patch."
__label__sadness	sadness_80	"Thanks Andreas, patch applied to HEAD of CVS only. Please check and then close this bug report. You allude to other issues with the Sitebuilder app. Would you please add a new bug report with whatever hints that you can manage. Then others can follow up. p.s. It must have been my mistake with the patch format. Using gunzip did finally work. Sorry to waste your time. --David"
__label__neutral	neutral_635	Attaching the latest version of the patch from review. Incorporates a trivial javadoc fix as suggested.
__label__love	love_376	Thanks Steve!
__label__sadness	sadness_81	"Sorry Ivan, attach a new patch with --no-prefix."
__label__love	love_377	"Patch committed, rev: 84f4fa61b6607d8699bb28743b568f4a716b4288. Thanks Mike!"
__label__neutral	neutral_636	Attached patch. I plan to commit in a day or two.
__label__love	love_378	"Committed to trunk. Thanks, Prasanth!"
__label__neutral	neutral_637	"You should do conn.getObject(entry, null). In the AtomPub case it's actually going to be optimized if the entry is already an APPObjectEntry and no futher remote repository access will be done."
__label__neutral	neutral_638	"The same appears to be try for case_studies.xml, community.xml, and zookeeper.xml. Should those not be copied for some other reason?"
__label__love __label__joy	love_joy_53	"Hi Luca, I've applied the changes you mentioned and it worked fine on my end (Windows). Can you try this on your end as well? I've attached the patch. Thanks!"
__label__sadness	sadness_82	"Unfortunately I have no Sql Server to test against at the moment. But I wonder, does this work when using a table name like 'SomeTable' (note the upper case). If you could verify for me that such mixed case names work with your patch when not in delimited mode, then I'll apply it ASAP. Tom"
__label__neutral	neutral_639	"Remove from 0.20.205, in hopes that HDFS-2342 did indeed fix TestHdfsProxy.testHdfsProxyInterface."
__label__love	love_379	"Jacopo, Thank you for your work! I'll test it today and let you know what I find."
__label__neutral	neutral_640	Created an attachment (id=356) XML parsing tool.
__label__love	love_380	"Thanks, Joe!"
__label__love	love_381	Patch applied. Thanks Matt!
__label__love	love_382	"Knut Anders, thanks for the review and the good advice. The attached patch, rmTestPreparedStatementMethods_v2.diff, should address your comments."
__label__neutral	neutral_641	"could you also remove "">>>>>>>>>>>>"" from line 1504"
__label__neutral	neutral_642	Added patch generated from CXF 2.2.6
__label__neutral	neutral_643	bq. One possibility is that getToken of OPP can return hex value if it fails to encode bytes to UTF-8 instead of throwing error. I can't think of how it would break anything to accept keys we previously rejected.
__label__sadness	sadness_83	I meant the findbugs addon. Sorry for the confusion.
__label__neutral	neutral_644	I just committed this. I changed it so that Mapper and Reducer extend a Closeable interface rather than both providing a close() method directly.
__label__love __label__joy	love_joy_54	"No, this was on 3.3.3 (sorry, I should have mentioned that before). That's great to know, thanks!"
__label__love	love_383	"Alexei, the patch has been applied as expected. You can close the issue, thanks."
__label__love	love_384	"I'll do it now, thanks!"
__label__neutral	neutral_645	Duplicate of HDFS-2321
__label__neutral	neutral_646	"Marking as open, since looks like it needs some more work."
__label__neutral	neutral_647	"Ahhh, sorry, didn't realise that set -e took care of it for you. I will have to go back and work out why it's failing but not triggering my CI system. As such, you can close this."
__label__neutral	neutral_648	addressed the Cos and Balaji comments. Latest patch for yahoo security branch.
__label__love __label__joy	love_joy_55	"Thanks! Looks like a good clean-up to me. I admit I didn't check all the changed lines in detail, but the approach gets my +1 :)"
__label__sadness	sadness_84	Fixed the bug description - sorry for the noise
__label__neutral	neutral_649	A patch file is attached here to address these problems. Many files have been touched. Sorry for it. But I'm sure there are more files than these that have i18n problems. I'd like to dig more into it as soon as these critical ones are resolved.
__label__neutral	neutral_650	"<pctony> This has been done. It should work just fine, I'll be doing some more work on JIRA later, and will force a re-index then, so this might look better after that. Have a look around."
__label__neutral	neutral_651	1.2.x patch attached
__label__love	love_385	A patch for this. Thanks a lot.
__label__neutral	neutral_652	"I just remembered one of the reasons why i didn't do this the last time i looked at it: i don't think FunctionQuery has any good unit tests in the Solr code base -- there might be some tests that use the SOlrTestHarness to trigger function queries, but they aren't really portable."
__label__sadness	sadness_85	"Oh, I never saw your answer. Sorry Ryan I never searched for _libthrift_, thanks for pointing it out Stack. As this is a custom release by the Hadoop folks are we sure this is not in any way customized by them? I haven't looked at the Maven stuff in a while but by being in a custom group we might get a different version by accident as a transitive dependency if any other project decides to do the same as Hadoop."
__label__love	love_386	The patch is in: https://git-wip-us.apache.org/repos/asf?p=sqoop.git;a=commit;h=3865f7deec722948a60cc1746e2330bd1c5cb9e4 Thank you Vasanth! Jarcec
__label__neutral	neutral_653	Attached
__label__neutral	neutral_654	Done at revs 946320 and 946321 thanks Blas
__label__neutral	neutral_655	The DismaxRequestHandler and StandardRequestHandler are both deprecated and replaced with SearchHandler.
__label__neutral	neutral_656	Created an attachment (id=7421) patch to o.a.c.l.SystemUtils.java. Modified declaration order.
__label__love __label__joy	love_joy_56	Works fine with my minimal test case and the tutorial. Thank you!
__label__love __label__joy	love_joy_57	that's nice! The patch looks good Emanuele :)
__label__neutral	neutral_657	Test cases for geomultidist() function. Add this and SOLR.2155.p3.patch
__label__neutral	neutral_658	"{quote} This wasn't a problem with my patch, right? That was an issue of the mahout script in trunk itself? {quote} Yes it was a problem with the script in trunk. I believe this was due to the fact that the job files were on the classpath instead of all of the dependency jars. Adding the job files to the classpath does not add the dependency jars they contain to the classpath as well. So, no you didn't add this, but it should be fixed (and is in the patch) Yep, that should do it, as long as MAHOUT_CONF_DIR appears before src/main/resources, we should be good to go. It should be added outside of the section of the script that determines if -core has been specified on the command-line."
__label__sadness	sadness_86	Hi Rupert! Sorry it took so long but i thought i'd test building in a linux environment too so i set up a Centos 6.3 machine running Maven 3.0.4 and Java 1.6_41. Got the exact same error on both machines. I have attached corresponding logs both from windows8 and centos to this issue. Link here: https://issues.apache.org/jira/secure/attachment/12570981/surefire_reportsR1450112_win8_centos6.3.zip Kind regards Esse EDIT: I'll also run mvn clean install for just jenatdb with logging when i get home.
__label__neutral	neutral_659	"Closing as a duplicate of DERBY-3061, which is fixed in Derby 10.3.2.1."
__label__neutral	neutral_660	"I can access the patch deletion from ""Manage attachments"" right next to the attachment list. If you can't access it, let me know which patches need to be deleted..."
__label__joy	joy_77	great idea
__label__neutral	neutral_661	Committed revision 1331265.
__label__love	love_387	"committed as 1307725. thanks for Ivan's improvement, thanks Flavio for reviewing."
__label__neutral	neutral_662	Bikas -is there any reason to not make the {{close()}} operation in {{unpackEntries()}} part of the try/finally logic? Other than that it looks good to be -the {{Shell.WINDOWS}} checks ensure that the Unix untars will be the existing shell commands and not break anything
__label__joy	joy_78	+1 for this patch. Looks good.
__label__neutral	neutral_663	"I believe this is now fixed. The test case itself was the problem - missing suffix of ULL or LL for unix, and UI64 or I64 for windows. I am closing the issue."
__label__love	love_388	I just committed this. Thanks Vinod!
__label__love	love_389	I've just committed this. Thanks Edwin!
__label__neutral	neutral_664	"This looks good to me as a first step - tested with both config and schema errors. Would be nice if single core with the solr.xml also worked, but no biggie - we can fix with the rest of multi-core. bq. Note for no good reason what so ever, Well, I think it was supposed to work (even though the whole idea is kind of broken anway), cause it attempted to, so reason is prob a bug ..."
__label__love	love_390	Committed to trunk. Thanks Jarcec!
__label__neutral	neutral_665	Committed revision 1125305.
__label__love	love_391	"Sounds perfect, thank you."
__label__love	love_392	"Committed to trunk, 0.92 and 0.94. Thanks for the patch Shaneal."
__label__love	love_393	Applied. Thanks Simon!
__label__neutral	neutral_666	Uploaded new patch by addressing review comments from Amar.
__label__love __label__joy	love_joy_58	"+1 Looks good to me. Thanks, Hyunsik!"
__label__neutral	neutral_667	"This looks like it needs rebased onto trunk. The posted patch includes generated code ({{AdminProtos.java}}), please remove. Please add javadoc for the new classes and new public methods on existing classes. {{FavoredNodeAssignmentHelper#placeSecondaryAndTertiaryWithRestrictions}} introduces a {{while(true)}} block containing non-trivial branching logic. Can this be refactored with simpler and/or clearer break conditions? {{FSUtils}} introduces new configuration {{hbase.client.localityCheck.threadPoolSize}}. Can this be added to {{HConstants}} and/or documented in {{hbase-defaults.xml}}?"
__label__neutral	neutral_668	"About EPL licence,please have a look at http://people.apache.org/~rubys/3party.html#category-b. Seems fine with some light constraints"
__label__neutral	neutral_669	A PDF which demonstrates the problem
__label__neutral	neutral_670	in addition to that DataContext.newObject() shouldn't throw on classes that are not DataObjects.
__label__neutral	neutral_671	"bq. accountNames => {""shalinmangar"",""steffkes"",""otis"",'ErikHatcher'} Shalin, Stefan, Otis, and Erik: I've added all of you to the solr-committers, solr-admins, and confluence-administrators groups."
__label__love	love_394	+1 Committed. Thanks Suresh
__label__neutral	neutral_672	"Hi Tommaso, bq. However I think it should be good if it was possible to alternatively get rid of the uimaConfig file defining each parameter inside the Processor with Solr elements (str/lst/int etc.) as well. I've done this in the attached patch. Please review it. I'm not confident about the part: {code} <lst name=""fieldMappings""> <lst name=""mapping""> <str name=""type"">org.apache.uima.SentenceAnnotation</str> <str name=""feature"">coveredText</str> <str name=""field"">sentence</str> </lst> </lst> {code} the structure is appropriate or not."
__label__neutral	neutral_673	I've gotten to the bottom of this - patch attached.
__label__love	love_395	"Committed to trunk and branch-22. Thanks, Ari!"
__label__neutral	neutral_674	"Re-attaching, as I didn't grant ASF license first time I attached it!"
__label__love	love_396	"Committed to trunk. Thanks, Harish!"
__label__love	love_397	"+1 Jihoon, Thank you for your contribution. Sergio, Thank you for your review."
__label__neutral	neutral_675	Duplicate of MYFACES-2970
__label__love	love_398	Thanks Lukas for pointing these issues out. Will review your fixes and do the necessary changes. The JMS transport fix should go to Axis2 Transports project.
__label__joy	joy_79	The patch & tests look good to me.
__label__neutral	neutral_676	"On second thought, I removed the patch. This would just be working around the problem. I could live with a verdict that this dev environment is broken in some way that I'm just not seeing. Or, there is another option that avoids what looks like an enumeration over local addresses for reverse lookups (including virbr networks). Since this is all localhost testing, mocking the resolver is not unreasonable."
__label__love __label__joy	love_joy_59	"+1 I committed this. Thanks, Jothi!"
__label__love	love_399	Committed to 0.11.1 branch and trunk. Thanks a ton Kai!
__label__neutral	neutral_677	"{quote} I don't think it makes sense to argue about who the exception messages are for [...] {quote} I think the opposite, because it has an impact on the library design. Not that CM cannot go on with the current way; but my point is that Luc and you are focusing on top-level users while stressing that CM in a low-level component. To me, that is a blatant contradiction that produces drawbacks which I presented in several usage examples (which you didn't address), while you always reply with a single use case where the user is yourself (i.e. a CM developer). Anyone else who is using a high-level application based on CM will be baffled by the ""detailed exception message"" because, in all but the most trivial case, his actions will have only a remote connection to the exception triggered by CM. I'm pinpointing at a minute detail of the design of CM, explaining that it can come in the way of some direct users of CM. The current long list of errors is in fact imposing your view (of what is important) to future application developers. [As an example, let's say that someone wants to create a GUI (e.g. for the statistician referred to above), he will want to define his own detailed error messages to be displayed in the GUI with a formatting of his choice. The statistician will never see the messages created by CM.] If a CM exception (resulting from a precondition violation) reaches the end-user level, it means there was some unanticipated problem in the call chain. And to correct it, one would need more than just the ""detailed message"": the end-user will pass the stack trace to the application developer, who will correct a possible bug in his code (such as a missing check of a precondition) or pass it on the the CM developers."
__label__sadness	sadness_87	"You are missing my point, sorry, By 'check in normally' I mean just commit them using 'svn add ...' 'svn commit ..' not 'svn import' you cant do that. people.apache.org was down for a while, but is now back ,that however is not related as you dont need to access people.apache.org to commit to svn."
__label__sadness	sadness_88	This was my accident. I had the wrong JIRA opened. This should have been filed against Apache Drill. Opened DRILL-146 instead. Sorry
__label__neutral	neutral_678	"bq. Hmmm, infoStream is just for debugging... should we really make it volatile? I'll remove its volatile... Oh yeah. But then we'd clone the full IWC on every set... this seems like overkill in the name of ""purity"". I really don't like that this approach would split IW configuration into two places. Like you look at the javadocs for IWC and think that you cannot change the RAM buffer size. IWC should be the one place you go to see which settings you can change about the IW. That some of these settings take effect ""live"" while others do not is really an orthogonal (and I think, secondary, ie handled fine w/ jdocs) aspect/concern."
__label__neutral	neutral_679	"kevinwilfong updated the revision ""HIVE-2797 [jira] Make the IP address of a Thrift client available to HMSHandler."". Reviewers: JIRA, njain, ashutoshc Ran updated my checkout. REVISION DETAIL https://reviews.facebook.net/D1701 AFFECTED FILES shims/src/common/java/org/apache/hadoop/hive/thrift/TUGIContainingTransport.java metastore/src/test/org/apache/hadoop/hive/metastore/TestRemoteUGIHiveMetaStoreIpAddress.java metastore/src/test/org/apache/hadoop/hive/metastore/IpAddressListener.java metastore/src/test/org/apache/hadoop/hive/metastore/TestRemoteHiveMetaStoreIpAddress.java metastore/src/java/org/apache/hadoop/hive/metastore/TUGIBasedProcessor.java metastore/src/java/org/apache/hadoop/hive/metastore/TSetIpAddressProcessor.java metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java"
__label__love __label__joy	love_joy_60	"+1 for the patch, pending successful Jenkins run for the latest version. The changes look good. I verified on both Mac and Windows. Thanks for addressing this, Andrey! I'll commit this after Jenkins responds with +1 for the latest version."
__label__love	love_400	Committed. Thanks Namit.
__label__neutral	neutral_680	"I won't get to it, so let's go ahead. In general, we should push things to a ""2.0.x"" version if we want to get it out in time for 2.0 GA."
__label__neutral	neutral_681	"I just glanced through in general: this is similar to the hack patch i used exploring LUCENE-4089, though I just used a Map<String,String>. The part i didnt like when exploring was more related to how term index/term dictionary are separated: {quote} divisor: generalize this into something simple like a Map<String,String> of codec ""parameters"" that you set on IWC/IR. split divisor from ""don't load terms index"". define these as constants where they belong. I got unhappy here in the ""splitting"" part because I wanted the divisor part in TermsIndexReaderBase, but that doesnt extend FieldsProducer (where i wanted the ""don't load"" part) and wrap the terms dict, instead its backwards and terms dict wraps the TermsIndexReaderBase... maybe we should fix that too? I think this confusing the way it is but I didnt look at how difficult this would be. {quote} But I think maybe I was trying to tackle too much at once... still as an ""untyped"" parameter I thought it would be useful to fix the semantics all in one break rather than causing confusion down the road."
__label__love __label__joy	love_joy_61	">Tilman Hausherr hello, finally it works! I just downloaded the revision 1535956, and bulded it with Ant. and added the new *.jar to my project's build path. it printed very well. thank you very much."
__label__joy	joy_80	Tnx for the quick fix. Works perfect!
__label__neutral	neutral_682	Review board comment: https://reviews.apache.org/r/314/
__label__sadness	sadness_89	Added to trunk in #1098800 3.x in #1098896 sorry about visad.UnimplementedException!
__label__neutral	neutral_683	The fix is attached.
__label__neutral	neutral_684	patches applied revision 434193
__label__love	love_401	"Hello Andreas, Thank you for the information. Shall try the same and upload the patch shortly. Thanks & Regards, Ravikiran Mane."
__label__love	love_402	"Richard, patch applied at revision r437600, thanks a lot for this enhancement, please verify that the problem is fully fixed as you expected."
__label__neutral	neutral_685	"Here is the curent state. It is the samples/servlet/src/script/share build.xml. It work for tomcat5x (it is hard coded). The test are passe but I need to remove TestSampleFilter.java, TestFilterHttpHeaders.java and TestBasicAuthentication.java from the test execution. I don't know why they failed but continu to look at this. Nicolas,"
__label__neutral	neutral_686	"This patch just removes the lines of code that send the second NEWLEADER quorum packet. The first packet is sent with: leaderLastZxid = leader.startForwarding(this, updates); a few lines above."
__label__love	love_403	"Committed, thanks Dave"
__label__neutral	neutral_687	"This is default for staging in hadoop 1 <property> <name>mapreduce.jobtracker.staging.root.dir</name> <value>${hadoop.tmp.dir}/mapred/staging</value> <description>The root of the staging area for users' job files In practice, this should be the directory where users' home directories are located (usually /user) </description> </property>"
__label__neutral	neutral_688	Created an attachment (id=1333) xml/xsl testcase for normalize-space-bug
__label__love __label__joy	love_joy_62	"Looks like a good solution! Thanks for taking care of this, Uwe! {quote} Should we backport this to 2.9 and 3.0 (which is easy)? {quote} +1"
__label__neutral	neutral_689	see also SOLR-2399 -- this has done some great work revamping the admin UI
__label__neutral	neutral_690	Commited to trunk.
__label__neutral	neutral_691	"We can't upgrade to maven-assembly-plugin 2.3 as it breaks the build on MacOS, due to https://jira.codehaus.org/browse/MASSEMBLY-588."
__label__love	love_404	Thank you!
__label__neutral	neutral_692	"Hi, I've started working on this. I think I have an idea of what to do design-wise, but if anyone has any suggestions please let me know."
__label__neutral	neutral_693	"bundles have been promoted to OSSRH some minutes ago. It will take roughly 2-4 hours before they appear on Central, so this one is close to be fixed."
__label__neutral	neutral_694	Brings this patch back up to trunk level.
__label__neutral	neutral_695	Created a new issue and copied the patch there: https://issues.apache.org/jira/browse/DAEMON-93
__label__love	love_405	"I just committed this, thanks Ari."
__label__neutral	neutral_696	Are there any plans to also publish the new release to the Maven 1 repository on ibiblio.org? We at Jackrabbit still use Maven 1.0.2 as our build tool.
__label__sadness	sadness_90	Sorry but I was running on the 1.1.1 branch. We will hopefully have a release out shortly (in a week or so) that should fix this issue. Although an example would still be helpful so we could add a cactus test that makes sure we don't reintroduce the problem.
__label__neutral	neutral_697	It should be noted that the client driver already caches the LOB lengths (for both Clobs and Blobs). I planning to go ahead with the patch for StoreStreamClob in the embedded driver.
__label__neutral	neutral_698	It worked fine in Jetspeed 2.2.0 too
__label__sadness	sadness_91	"Ah, this is in Solr-land, sorry, thought it was Lucene."
__label__neutral	neutral_699	fix also applied to the Native SDO repo on revision 671633
__label__sadness	sadness_92	"This is my fault, didn't try other profiles, yarn was broken as well. Works now."
__label__love	love_406	Committed. Thanks Hitesh
__label__neutral	neutral_700	"Correction to the design of this feature (I can't edit comments because of permissions, so adding another comment). In case the seconds field needs more than 31 bit, the first VInt is {{-1-reversedDecimal}} regardless of whether {{reversedDecimal}} is zero or not."
__label__neutral	neutral_701	This is not a major issue
__label__sadness	sadness_93	"Sorry for the late reply. Your corrections look good, I've just applied them. Thanks!"
__label__love	love_407	"Committed, thanks Jingwei."
__label__neutral	neutral_702	"This actually depends on HDFS-3863, so not committing until that one is in."
__label__joy	joy_81	"Nobody has started. If you want to submit a patch, that would be great! Thanks!"
__label__neutral	neutral_703	fix the launch console message
__label__sadness	sadness_94	"Sorry Carl, this won't make it in the 2.2.0 release which is about to be released very shortly now... Maybe it could get into the 2.2.1 release if you are able to send us a patch or a reproducible testcase. thanks, Maarten"
__label__neutral	neutral_704	This patch solved this issue in a test case.
__label__neutral	neutral_705	How do you know that a key will exceed a threshold until after you've passed it?
__label__love	love_408	"Hi Sascha, There is an overlap with OFBIZ-3843, could you please check? Thanks"
__label__sadness	sadness_95	Sorry I missed this since it wasn't tagged iOS. Looking at it now.
__label__love	love_409	"siying, can you rebase this patch? thanks!"
__label__joy	joy_82	Looks good. +1. Checking this in.
__label__love	love_410	"+1 thanks, committed to cassandra-2.0 as commit 3a7093356ca032d9ce8767b2c47980aebe4bce60"
__label__neutral	neutral_706	committed revision r580334 regression test added.
__label__joy	joy_83	Looks good!
__label__neutral	neutral_707	Updating 'Fix For' to Unknown on issues not targeted for 0.8
__label__love	love_411	"Thanks for the finding, Andrey. createDir() is recursive. Would be nice to write it in iterative manner. Would FileSystem.mkdirs() do the job ?"
__label__love	love_412	"Fixed, thanks for the suggestion: http://svn.apache.org/viewvc?view=rev&revision=498105"
__label__love	love_413	I just committed this. Thanks Mahadev!
__label__neutral	neutral_708	Committed revision 771270.
__label__neutral	neutral_709	Committed 3a with revision 506899.
__label__love __label__joy	love_joy_63	+1! Thanks! I also ran with mvn clean install and it looks good.
__label__love	love_414	Thanks Alex. It looks like a good path to solve this issue.
__label__love	love_415	committed to branch-4.0 and trunk. Thanks Rohini.
__label__neutral	neutral_710	"By default, the auth prompt is suppressed making this a rare issue, closing."
__label__neutral	neutral_711	See HADOOP-7853 Andy needs a little more time in deciding whether HADOOP-7853 is good enough replacement for 7070.
__label__love	love_416	"All the regression tests ran cleanly with the patch. Committed revision 1126468. Thanks for fix, Ed!"
__label__love	love_417	"Patch v6 integrated to trunk. Thanks for the patch, Jean-Marc. Thanks for the review, Matteo. @Lars: Do you want this in 0.94 as well ?"
__label__love	love_418	"Ok. I will do that. Adrian, thanks for taking a look at this. :)"
__label__neutral	neutral_712	All existing documentation/discussion from Moin Moin wiki now copied across to Confluence JIRA and re-formatted as appropriate. Should now all be updating on Confluence wiki and retire Moin Moin in a couple of weeks when people have been able to check that their pages look ok on Confluence.
__label__sadness	sadness_96	"Sorry, this new patch is the correct one. Still learning the ropes :-)"
__label__neutral	neutral_713	"Split out some fixes to the SSTII bytes tracker getting out of sync w/ the underlying stream, and did some cleanup to make the streamed/file versions less divergent. Also adds parallel compaction testing to LazilyCompactedRowTest. CliTest and DefsTest generate compaction loads (in DefsTest's case, on the Migrations CF -- haven't dug into CliTest as much) that break w/ parallel enabled, although the test doesn't actually fail (argh). Haven't figured out what's causing that, and haven't come up with a way to reproduce in a ""real"" test yet. The DefsTest does mix lazy/nonlazy iteration in the merge, which may be relevant. bq. I'm also no proposing to complicate things. You're right, poor choice of words on my part. Latest gives the merge executor a SynchronousQueue. I think that's a better way to cut worst-case, than the Deserializer, for the reason given previously. bq. 'if...instanceof' business is a bit error prone/ugly Agreed. Added getColumnCount + reset to ICountableColumnIterator sub-interface. bq. say how multithreaded_compaction is different from concurrent_compactors and that multithread_compaction is likely only useful for SSDs in cassandra.yaml done bq. The bytesRead ""race"" should also be fixed in CompactionIterable done bq. I would have put the code in CompactedRow.close() at the end of the LCR.write() instead of adding a new method, as it avoids forgetting calling close I did consider that, but it feels weird to me to have write implicitly call close. I guess we could just change the method name? :) bq. We can make PreCompactedRow.removeDeletedAndOldShards a public method and use it in PCI.MergeTask done"
__label__love	love_419	Committed. Thanks Stephen.
__label__love	love_420	"the patch looks good to me, aside from the lack of unit tests."
__label__love	love_421	Committed and was my first commit. Thanks to all.
__label__love	love_422	+1 looks good.
__label__joy	joy_84	+1 looks good
__label__neutral	neutral_714	User specified directory is not created by agent
__label__love __label__sadness	love_sadness_6	"I apologize for taking so long to get to reviewing this. This has some good elements but also quite a few problems. Here are a few suggestions. 1. The bindingGBeans do not need to know the name of the gbean they are getting something to bind into jndi from, they need a reference to it. Similarly they do not need to bind a naming Reference, they can bind the object itself. For instance, the connector binding gbean can do something like this: private final ManagedConnectionFactoryWrapper managedConnectionFactoryWrapper; // this is the reference to the gbean that gives us the connection factory to bind ... //now it's time to bind the connection factory Object connectionFactory = managedConnectionFactoryWrapper.$getResource(); globalContext.bind(jndiName, connectionFactory); This is also going to affect how the builders set up the binding gbeans: they know the name of the appropriate gbean such as managedConnectionFactoryWrapper, since they just created it, so they need to use that name to set the reference pattern in the binding gbean. The binding gbean will then get (a proxy to) the ""real"" gbean that it can use as outlined above. 2. I don't see an implementation of a writable thread safe jndi Context, as dain pointed out you would need. 3. The zip file consists almost entirely of irrelevant files and the actual source files do not all appear to be in the geronimo project structure. This makes it extremely hard to figure out what to look at. 4. Some of the code modifications (such as to ServiceConfigBuilder) appear to be test cases rather than production code. It will be a lot easier to evaluate your work if you keep test cases and production code clearly separated as is done in typical maven projects. 5. I think you will need to redo the openejb work after dain's reintegration of his container rewrite. Thanks! Let us know if you have any questions about this."
__label__love	love_423	"Hi Charles, thanks for the confirmation... We will chat with Willem, I'm off today but will work for a couple of days this week... Sergey"
__label__neutral	neutral_715	"Yes, I'm continuing along the path Chris started with his first patch, mine is coming soon. Nikola"
__label__neutral	neutral_716	"critical typo above... should have written: These *idempotent* calls serve to find the correct active NN, and then the following non-idempotent ones succeed"
__label__neutral	neutral_717	This patch effectively reverts the HIVE-4688 change. The NPE is fixed in VectorizedRowBatch by HIVE-4758.
__label__neutral	neutral_718	"I don't think this is a bug -- you essentially moved files out from under a running instance, something cassandra can't expect. In the end, sstablesplit should only be done offline."
__label__love	love_424	thanks luis!
__label__neutral	neutral_719	"Closing this record, since 4.1.0 is now released."
__label__love	love_425	"Thanks for double-checking the fix, Knut. I am thinking of merging the fix into 10.3 tomorrow just to make sure that tests run fine on the tinderbox. All the tests ran fine on my machine."
__label__neutral	neutral_720	"First draft. This just does the mapping in the constructor to the comparator. We could do setNextReader, but I can't imagine it will really make much difference given the small number of items that we typically would expect to be elevated.,,,,,,,,,,"
__label__neutral	neutral_721	I didn't see anything in subversion?
__label__love	love_426	"Committed, rev:088067c. Thanks Roman!"
__label__neutral	neutral_722	"+ if (!more) { + return false; + } I was about to submit this same patch today, but I see you beat me to it :) Thanks Mark."
__label__sadness	sadness_97	"Oops, my bad, sorry. I indeed did not 'svn add' the new classes since I don't have write access to the repository anyway. But this way 'svn diff' goes wrong, of course. I will submit a new patch on Monday when I'm back at my working machine. I'm really sorry for the incovencience!"
__label__neutral	neutral_723	Duplicate of HADOOP-3000.
__label__joy	joy_85	"+1 This looks good to me. Existing configurations will still work with this patch, so there are no compatibility concerns."
__label__neutral	neutral_724	"> David Reiss writes: > As I recall, Jonathan was the only person who really seemed to > care about this issue, and he wasn't satisfied with my > suggestion, so I put it aside. Chad also requested some changes > to my diff for the JSON protocol. I'll try to reevaluate the > status some time soon, but I am away from a computer today. Jonathan - are you still in the loop on this one? What do you think? Given the fundamental differences in what a ""string"" is across different languages, there's unlikely to be a clean solution that suits everyone. Having a backwards-compatible compromise that works is much better than having nothing, though."
__label__neutral	neutral_725	"This bug is fixed in 2.7, closing it down per the request by the reporter, Anuj Gupta."
__label__love	love_427	Committed. Thanks Namit!
__label__neutral	neutral_726	In revision 1406185 I applied the patch from https://github.com/jukka/jackrabbit-oak/commit/e01558418008e41a94c44ea00494f6a939ed58a2. This fixes the problem.
__label__love	love_428	"I just committed this. Thanks, Omer!"
__label__neutral	neutral_727	THis is now resolved and pushed to npm as 3.0.1. Uses npm's proxy configs in lazy-load module.
__label__love	love_429	trunk and 0.95. Thanks for the review JD.
__label__neutral	neutral_728	@Lars I don't think it would be all that different. I'll take a crack next week (after dealing with the next round of HBASE-6055 stuff).
__label__neutral	neutral_729	+1 lgtm to get rid of the extra logging and to kill the child process.
__label__joy	joy_86	This looks good to me.
__label__love	love_430	"Hi [~justinedelson], thanks for applying the patch and fixing the formatting."
__label__neutral	neutral_730	attached a patch for branch 20 security.
__label__neutral	neutral_731	"It still need a lot of work, but there's an initial version checked into the sandbox now. * http://svn.apache.org/viewvc/struts/sandbox/trunk/jpa-mailreader/ See STATUS.txt for design notes and such. ,,,,,,,,,,"
__label__neutral	neutral_732	I created a regression test for HARMONY-1654 and attached it to HARMONY-3522.
__label__neutral	neutral_733	"If and when Xerces moves to SAX 2.0.1, this patch will satisfy the behaviour of SAX1 and SAX2."
__label__love	love_431	"Sumeet, we did it purposely because if the proxy services are dynamically loaded then we need to build those services at the runtime and redeploy them which is a little bit risky on a production environment. Also there is no mechanism to check whether a particular proxy definition is updated in the registry or not because this configuration is used only at the startup. We can add this functionality to load the proxy services only at the startup time from the registry (this doesn't mean they are dynamic), but I don't see any value there. If you could explain a bit about your exact requirement, I might be able to provide an alternative to this. Thanks, Ruwan"
__label__neutral	neutral_734	Direct link to mail item didn't work.
__label__neutral	neutral_735	"Setting it to Major, as the case seems to be random. Please comment if you disagree."
__label__love	love_432	"Hi Ivan, As Donald has reassigned this JIRA to you, please help to review and commit these patches after I submit the patch for TranQL localization. Thanks. BTW, the first patch in the list had already been committed."
__label__sadness	sadness_98	"Unfortunately, we can't do that, because that is not explicit on the spec javadoc, and there is a way to do what is expected using ""targets"" property."
__label__love	love_433	"Hi, Gianmarco, Thanks for your concern. Actually we need one additional step to make bin/pig work. We shall copy $PIG_HOME/build/pig-0.8.0-dev.jar to $PIG_HOME/pig-0.8.0-core.jar. This will be handled in ant's ""package"" target when releasing. But if you check out from svn, we will do this additional step to work with bin/pig."
__label__love	love_434	Applied patch with thanks to Chris.
__label__neutral	neutral_736	"Tim, I have no objection. Let's wait."
__label__neutral	neutral_737	I can confirm this is not happening on Ubuntu 12.04 with OpenJDK 1.6.0_24. Did anyone get a chance to look at this apparently Mac-specific issue?
__label__joy	joy_87	+1 Looks good to me!
__label__love	love_435	"I have committed the patch for trunk. Thanks, Tanping!"
__label__love	love_436	"Integrated to trunk. Thanks for the patch, Rajesh. Thanks for the review, Ram."
__label__love	love_437	Closing based on comments from Matt. Thank you.
__label__neutral	neutral_738	"sure only ""/"" works. if path="" that's considered as no path defined."
__label__joy	joy_88	"+1, looks good. I'll commit once HCATALOG-239 is in."
__label__neutral	neutral_739	released with OWB-1.1.4
__label__neutral	neutral_740	"JB, do you expect problems when we upgrade Camel 2.10.0 to Spring 3.1.0 (and deploy it into Karaf 2.2.x)? Because Camel leverage on the Karaf Spring feature, it will use Spring 3.0.x when running inside Karaf 3.0x and Spring 3.1.x when running in Karaf 3.0.x. IMO, when we can upgrade to Spring 3.1.0 without any modification, it should not a problem..."
__label__neutral	neutral_741	I agree. I'm planning to look into WHIRR-370 later this month but I can't provide a timeline for it.
__label__neutral	neutral_742	Committed revision 941607.
__label__neutral	neutral_743	Duplicate of AXIS2-897
__label__sadness	sadness_99	"Strange things going on. With Google Chrome, uploading patch files corrupts the file. With MSIE it worked. Sorry for the noise. Yesterday it worked normally..."
__label__neutral	neutral_744	"Just as we did in HBASE-770, need to check our hbaserpc to make sure it has any changes from hadoop included when we move to 0.18 hadoop jars."
__label__sadness	sadness_100	"Working: - Bash on Linux Not Working: - Bash on Solaris - CSH on Solaris - KSH on AIX - Bash on AIX So, you're right. I close this bug as ""work as designed"". Sorry for the noise :)"
__label__love	love_438	"committed, thanks!"
__label__love __label__joy	love_joy_64	"The patch looks good, just applied on the 1.1 branch and trunk. Thanks a lot, keep them coming! :)"
__label__neutral	neutral_745	Fixed. 3.x didn't have any problems; just test-only changes backported.
__label__neutral	neutral_746	Thanks Elliot! Did you forget to add FailedSanityCheckException to the 0.94 patch? If the same as in 0.96 I'll just add it at commit. Will the new exception cause compatibility issues in old 0.92.x and 0.94.{0|1} clients? I don't think so... Just making sure.
__label__love	love_439	Thank Henri and Don! I found there are two common-validator.jar in my jboss application server env. One in %JBOSS_HOME%/server/default/lib/ and the other in the lib directory of my web application. Then I delete the latter and it works well. Thank you so much!
__label__love	love_440	"Thanks, I've committed your patch, leaving out the change to equals() and not removing mergeBooleanQueries() as that is a public method which someone might be using. Also, could you please check if the test case is correct now? I couldn't apply that part of your patch cleanly and something might have been broken."
__label__neutral	neutral_747	"We have fixed this in the twitter fork. You can review the fix at https://github.com/twitter/bookkeeper/commit/a48472911b176d75905399e7c32bb782f3564b83 If you are fine with the change, I will submit this as a patch."
__label__love	love_441	Committed. Thanks Yongqiang
__label__neutral	neutral_748	"Any feedback on the updated patch? I'm guessing it won't cleanly apply to trunk anymore since it's been two weeks, but if the general idea looks correct, I can update it to apply cleanly to the current trunk."
__label__love __label__joy	love_joy_65	"+1. Patch looks good. Thanks Jian, and Zhijie, Bikas for the reviews."
__label__love __label__joy	love_joy_66	Many thanks ... looks good
__label__love	love_442	v3 up in PB. Thanks for the reviews
__label__neutral	neutral_749	The patch is attached.
__label__joy	joy_89	"Thanks! I have not tried it yet, but it looks good to me."
__label__love	love_443	"Apllied at revision: 545149, thanks!"
__label__neutral	neutral_750	Closing all resolved tickets from 2010 or older
__label__love	love_444	"ah, right -- skipping the clear would be buggy. +1 again. :)"
__label__love	love_445	"Hi Michael, thank you for your answer. I thought that it would not be so easy to solve this issue. Unfortunately. I agree with you that the main problem here is that a copy action is missing and I guess AttachStrategy.persist is the right place to add some kind of copy functionality. I started looking into the source code of the enhanced class from the test. PersistenceCapable declares a public method to copy fields (pcCopyFields(...)). Unfortunately you can't use in AttachStrategy.persist, because the entity to persist has no statemanager at this point (an exception InvalidStateException will be the result). My suggestion is to modify the class enhancement and remove the StateManager check in pcCopyFields (I don't see the need for this check). Afterwards you can use pcCopyFields in AttachStrategy.persist by adding something like ... if (manager.getCopyNew()) { int[] fields = new int[meta.getFields().length]; for (int i = 0; i < fields.length; i++) fields[i] = i; newInstance.pcCopyFields(pc, fields); } ... This solution works for my testcase. As an alternative you can modify (or add an additional) newInstance to copy the data. I have no real experience with OpenJPA. Perhaps there is a much better solution."
__label__love __label__joy	love_joy_67	"Hello George, Thanks a lot. The fix works fine :-) Best regards, Richard"
__label__neutral	neutral_751	<danielsh> yes we're aware of the recurrence
__label__neutral	neutral_752	"- Mind chiming in on the rationale of the setQuota vs setSpaceQuota naming (ie the former for namespace)? - Agree w Nicholas that we should move setQuota from DFS to this admin class, let's do that in a follow on change There's an extra ""/**"" in the s"
__label__neutral	neutral_753	"As soon as I made the change in Karaf, I will submit the CXF patch."
__label__love	love_446	Please try this patch. Thanks a lot!
__label__neutral	neutral_754	5226_20090212.patch: added license headers.
__label__neutral	neutral_755	"Mike: patch reads nice and clean to me (didn't try applying though) two nits: 1) it would be good to have a test of the case where a boolean with the default boost is specified in one bq, and a seperate blank bq is specified to force the first BQ to be treated as a single query 2) let's assign params.getParams(DMP.BQ) to a temp variable so we don't have to call it twice in three lines."
__label__love	love_447	Thanks for fixing it!
__label__neutral	neutral_756	"It took me a while to figure out where the problem is coming from, sorry. So, your way is not a bad way of doing it, though, let me suggest an alternative... In AbstractFileObject, match the constructor's ""fs.fileObjectHanded(this);"" by putting a ""fs.fileObjectDestroyed(this)"" in ""abstract's doDetach()."" This way, the count will be corrected. Currently, it's appears to be wrong in many implementations. In the overriding implementation of detach(), do a check of (if fs.isReleasable(), fs.close()). Patches included."
__label__neutral	neutral_757	description of the changes made in this patch
__label__neutral	neutral_758	"I can't think of a good reason to snapshot the entire keyspace, and doing so can dramatically increase the space needed to enable snapshot_before_compaction."
__label__love	love_448	Thanks Imran. Fixed in LUNI module at repo revision r568966. Please check it was fixed as you expected.
__label__love	love_449	Thanks for the review jimmy. committed to trunk.
__label__neutral	neutral_759	m2 layout
__label__joy	joy_90	+1 patch looks good.
__label__love	love_450	"Guillaume, I took a quick look at your suggestions. I agree that we can reduce the code a bit. However, I think that we need to keep the activate method as it initializes the servingXml internals. I'm not sure about the deactivate method. I also noticed that you have added a patch, but, being new to jira, I'm not sure if that means that you've made changes to my attachment or something else. Are you still looking for me to correct the formatting and to remove the extraneous methods/classes? Thanks, James"
__label__neutral	neutral_760	"Oleg, I agree, it does seem that the presence of the Proxy-Authorization header on the already authenticated connection causes re-authentication. So, for NTLM to work the proxy-auth header must be removed once authenticated. I don't think either patch 2 or 3 handles this case, unless (in the case of patch 2) the host also uses NTLM. What we really need is a way to remove NTLM headers after the authentication has succeeded. Mike"
__label__love	love_451	Applied patch into trunk and cxf-2.2.x branch with thanks to William.
__label__love __label__joy	love_joy_68	"ok,it works fine,thank you."
__label__love	love_452	"Yes, it works ok now, thanks."
__label__love	love_453	"Mathias, please close this issue as it is not reproducing any more... Thanks."
__label__love	love_454	"Committed to trunk. Thanks, Sushanth!"
__label__love	love_455	"Hi Nick, Can you please re-create this patch as I can't get the code to compile? For starters, I can't get the class AttributeImplItem to compile. Please use the latest trunk when doing so Thanks. -- George"
__label__joy	joy_91	"Good advice, this works..."
__label__love	love_456	Patch applied! Thanks.
__label__neutral	neutral_761	"bq. you tweaked a couple little things with the standard cache capture state Actually I think I just moved things around? EG I made it the StandardTermsDictReader's job to seek the termsIn file, I moved docCount ""up"", and I made a single cache entry. I think I also removed a few attrs that we didn't need to store... and downgraded skipOffset from long -> int (it's int on trunk)."
__label__neutral	neutral_762	planning to fix this.. I am planning to remember completed containers (only id) at node manager for predefined time (10min). Does that time sounds reasonable or we should make it configurable? ... I don't really think adding a new configuration parameter will be a good idea but I am open for any different approach / adding conf .. thoughts? This will have a similar implementation like YARN-62 but only difference is that YARN-62 only tracks container for a time after it starts to avoid duplicate launch..where as this tries to avoid logging errors for valid stop attempts...
__label__neutral	neutral_763	"I'll add in the jar then. Tim, that dslkit is GPL so I can't check it in (Looks good though... )"
__label__neutral	neutral_764	Did you get a chance to try a patched build?
__label__neutral	neutral_765	"David, lgtm Bryan, I believe assignee should be Erik as the author of initial version of patch, but I can't find him in drop box."
__label__love	love_457	Applied to TRUNK. Thank you for the patch Erik.
__label__neutral	neutral_766	"Modification of patch-2 to introduce a double class to resolve the final ambiguity for [""float"",""double""] unions."
__label__neutral	neutral_767	Created the DTACLOUD wiki space.
__label__love	love_458	Applied to master and branch 1.2.x. Thanks Klaus.
__label__joy	joy_92	+1 the patch looks good.
__label__joy	joy_93	It looks good to me too.
__label__joy	joy_94	The patches look good :)
__label__neutral	neutral_768	The new patch uses fs.makeQualified(path) as suggested.
__label__neutral	neutral_769	This indicates the Standard inetorgperson schema under the standard ou=schema. This also shows the cn=institutesinetorgperson schema which is the custom schema
__label__neutral	neutral_770	hudson was hung just now for 7 hours in TestHRegion. TestHRegion is unorthodox -- intentionally -- in that it doesn't use inherit from HBaseClusterTestCase so it didn't pick up the changes made w/ mhbc.patch. Hopefully its this anomaly that was responsible for the hang. Attaching a patch that has TestHRegion do like the rest of the hbase (and hadoop dfs) tests shutting down the filesystem first and then the dfs cluster.
__label__neutral	neutral_771	"when we have @RequestWrapper/@ResponseWrapper annotion, the generated WSDL contains duplicate schemas. See test: JaxwsServiceBuilderTest.testDocLit()"
__label__love	love_459	Applied to trunk. Thanks Elliott.
__label__neutral	neutral_772	Committed patch 2a to trunk with revision 784701.
__label__neutral	neutral_773	"And I notice that the marcuse/4338 line still doesn't have latency metrics, if you'd like me to re-run for those stats, I can. Just need to rebase off of CASSANDRA-6153 (or rewrite my tool to use a known good cassandra-stress; right now it just takes the one from the same branch it's testing.)"
__label__love	love_460	"I just committed this, thanks Jothi!"
__label__neutral	neutral_774	"> but I renamed a set of sstable files in data/ to the ""wrong"" version and it did not catch this at startup. I'm not sure what you mean. Which is the ""wrong"" version: the legacy version? > (does it still ignore tmp files at startup?) I'll double check, but I assume so. I didn't change the check that removes tmp files, because it did it based on looking for TEMPFILE_MARKER anywhere in the file name, which should continue to work."
__label__neutral	neutral_775	Closing as a duplicate of ROL-1642.
__label__neutral	neutral_776	Created HADOOP-6281.
__label__sadness	sadness_101	"Maksim, it was my local misconfiguration, sorry for the trouble. Applied at revision: 619775, thanks!"
__label__love	love_461	"bq. Though, pig itself compiled fine and is ready to go, the contrib projects (owl,zebra,piggybank/hiverc) didnt compile, I think because either it didn't download dependices of those projects or didn't include them in the build path. Ashutosh, yes. I did realize it and as you rightly guessed, it is because the ivy-dependency list doesn't have some jars that are actually being used by contrib packages. This is not an issue related to eclipse-classpath. However, there has to be a JIRA opened to solve this issue of downloading the missing jars by ivy. Can you please file a JIRA for this? Thanks"
__label__love	love_462	Committed as r1406707. Thanks for reviewing Sijie.
__label__neutral	neutral_777	I'll add resuableToken support to this patch.
__label__neutral	neutral_778	This bug was introduced by https://issues.apache.org/struts/browse/WW-2171
__label__joy	joy_95	+1. The patch looks good.
__label__joy	joy_96	"Xueqiang, I just committed your latest patch. Keep up the good work! http://svn.apache.org/viewvc?rev=803128&view=rev"
__label__love	love_463	Applied to branch and TRUNK. Thanks for the patch Ramkrishna.
__label__love	love_464	Please review the submitted patch. Thanks.
__label__love	love_465	"Patch is in. Thanks, Jarcec."
__label__love	love_466	Thanks Otis.
__label__neutral	neutral_779	"Hi, We are using Jackrabbit to store/retrieve the content in my application. Please find the attached config files of my application. Best Regards, RK OCS L3 Support +91 44 39853531 +91 98408 51525."
__label__joy	joy_97	Works fine. Thanks
__label__neutral	neutral_780	"Of course I totally agree with Yonik. I don't care that much what the default include is (upper, lower, ...) as long as it doesn't double-count. Double-counting is bad -- it can lead to a bad user experience. There's something about ""lower"" that I feel makes it slightly better than ""upper"" but I can't really explain the rationale. I don't think there's any point in compliance with legacy if nobody depended on the behavior (they couldn't specify the behavior before either). Just because its easy to set the include, doesn't mean the default is arbitrary. Any way, if the default remains to double-count, I'm going to insist that my readers for the second edition of my book change this value."
__label__neutral	neutral_781	"I don't understand why we need these methods, since they are inherited from InetAddress, so we are compliant with the spec."
__label__neutral	neutral_782	Any thought of porting this patch to 10.1? I just ran derbyall on the 10.1 branch and this came up.
__label__neutral	neutral_783	"Hi Bianco, First of all, could you add a apache licence to the file VectorHighlightMapper.cs? Your work is very good and pass all tests, but it is not like just a simple bug fix and there is a divergence from FVH java. This makes life hard while making new versions' ports. All Lucene.Net community! Any idea about what we should do? DIGY"
__label__love	love_467	"Thanks for the patch Daryn, +1 I put it into trunk, branch-2, and branch-0.23"
__label__neutral	neutral_784	Closing all resolved tickets from 2010 or older
__label__neutral	neutral_785	submit patch
__label__sadness	sadness_102	"Ok, I just downloaded trunk and the patch is 99% the same with mine so I'll close the issue now...One comment though and sorry for nitpicking...Shouldn't the second constructor simply be ""this(patterns, null);"" or even better ""this(patterns, ""default"");"" ? In any case I can confirm it works - it just looks a bit ugly duplicating code like that... :)"
__label__love __label__joy	love_joy_69	Awesome - thanks so much for the submission Scott!
__label__love	love_468	Did you set: struts.devMode=false struts.configuration.xml.reload=false This did the trick for me :)
__label__sadness	sadness_103	"Sorry to hack your issue Bilgin, my intention is to keep readable traces (in ML you can't read easily stack)"
__label__love	love_469	"Committed, thanks Namit."
__label__neutral	neutral_786	I did an ubuntu 10.x apt-get install and flume/* downloaded the following unwanted packages: flumotion_0.6.1-1_amd64.deb foomatic-filters_4.0.4-0ubuntu1.1_amd64.deb
__label__love	love_470	Committed. Thanks!
__label__neutral	neutral_787	the mirror.facebook.com/hive site was already taken offlne.
__label__neutral	neutral_788	"bq. {{ catch (InterruptedException ignore) { Thread.currentThread().interrupt(); } }} Resetting the interrupt status of the thread is a good idea when we can't just re-throw the InterruptedException, but IMHO we should in that case *also* throw a TikaException to indicate that the requested operation couldn't be completed normally: {code} ... } catch (InterruptedException e) { Thread.currentThread().interrupt(); throw new TikaException(""Interrupted"", e); } ... {code} When the {{Process.waitFor()}} call is interrupted we can't just blindly assume that the process completed normally. Explicitly throwing an exception is a better approach in such cases."
__label__neutral	neutral_789	Attaching a patch that adds javadoc in the FileSystem class.
__label__neutral	neutral_790	"In MapReducePlanCompiler.java, {code} if (PigContext.instantiateFuncFromSpec(materializedResult.outFileSpec.getFuncSpec()) instanceof ReversibleLoadStoreFunc) { POMapreduce pom = new POMapreduce(logicalKey.getScope(), nodeIdGenerator.getNextNodeId(logicalKey.getScope()), execEngine.getPhysicalOpTable(), logicalKey, pigContext); pom.addInputFile(fileSpec); pom.mapParallelism = Math.max(pom.mapParallelism, materializedResult.parallelismRequest); return pom.getOperatorKey(); } {code} That looks to me like it won't allow map reduce to start unless the store func is reversible. Am I missing something?"
__label__neutral	neutral_791	"Using nutch with solr has been a very demanding request, so it will be very useful when this makes into trunk. I have spend some time reviewing the patch, which I find quite elegant. Some improvements to the patch would be - make NutchDocument implement VersionedWritable instead of writable, and delegate version checking to superclass - refactor getDetails() methods in HitDetailer to Searcher (it is not likely that a class would implement Searcher but not HitDetailer) - use Searcher, delete HitDetailer and SearchBean - Rename XXXBean classes so that they do not include ""bean"". (I think it is confusing to have bean objects that have non-trivial functionality) - refactor LuceneSearchBean.VERSION to RPCSearchBean - remove unrelated changes from the patch.(the changes in NGramProfile, HTMLLanguageParser,LanguageIdentifier,... correct me if i'm wrong) As far as i can see, we do not need any metadata for Solr backend, and only need Store,Index and Vector options for lucene backend, so i think we can simplify NutchDocument#metadata. We may implement : Or alternatively we may wish to keep add methods of NutchDocument compatible with o.a.l.document.Document, keeping the metadata up-to-date as we add new fields, using this info at LuceneWriter, but ignoring in SolrWriter. This will be slightly slower but the API will be much more intuitive."
__label__love	love_471	Applied branch. Resolving. Thanks for the patch Gary.
__label__love	love_472	Thanks Uwe!
__label__joy	joy_98	"Thanks, it works fine!"
__label__neutral	neutral_792	"Noah said heâ€™s going to fix this in his build-fauxton branch, but Iâ€™d like to explain this for posterity. make indeed throws this error, I didnâ€™t suggest it is a grunt.js error, but itâ€™s the way we use Autotools. In particular, in how we use Autotools for packaging. Each file that is supposed to end up in our final apache-couchdb-x.y.z.tar.gz tarball needs to be marked as such in a Makefile.am. For Fauxton that means we maintain a list of Fauxton files in src/Makefila.am specified as `FAUXTON_FILES`: FAUXTON_FILES = fauxton/app/addons/activetasks/assets/less/activetasks.less fauxton/app/addons/activetasks/base.js fauxton/app/addons/activetasks/resources.js â€¦and so on In that list, there is a line: `fauxton/app/initialize.js`, e.g. where we say that file is supposed to go into the release tarball. That file however does not exist at the time `make dist` is run, so make complains. I assume the solution is that make needs to call grunt at some point to turn fauxton/app/initialize.underscore into fauxton/app/initialize.js and I think that is what Noah is doing in his branch. I just wanted to explain, why this isnâ€™t a make error."
__label__neutral	neutral_793	"Not sure if the patch was pushed for review or not. In any case, fixing the build is pretty trivial, the changes made to ModificationStatement should just be reverted (and we should just pass the CL in argument to executeWithCondition() to SP.cas()). Other than that: * I believe we now refuse CL.SERIAL for the cas() method (because CL.blockfor() throw an UnsupportedOperationException for SERIAL). Maybe we can make SERIAL mean ""wait for nothing on commit, not even a local one"" (which probably amount to making CL.blockfor() return 0 for SERIAL and adding a 'if' in WriteResponseHandler ctor to signal right away if blockfor is 0). * I don't think CL.ANY will really work as for normal writes since we don't generate hints for commit. Maybe we could (generate hints) ultimately btw, but in the meantime, it might make more sense to refuse it (and thus make the default for CAS be either SERIAL if we do the preceding point or ONE). * We don't call CL.validateForWrite() when calling CAS (and we shouldn't as it complains with SERIAL), but maybe we should add a validateForConditionalWrite that would at least check we have the right replication strategy when using the multi-DC specific CLs."
__label__sadness	sadness_104	"Hi Lars. Sorry, I wasn't watching this before so I missed your work til you mentioned it on the HBase JIRA. I'll try to take a look at this this week. Feel free to grab me on IRC if you have specific questions."
__label__neutral	neutral_794	"{quote} ...but even if we don't do that, i suppose it's also conceivable that someone might have their own Similarity implementation that is expensive to instantiate (ie: maintains some big in memory data structures?) and might want to be able to declare one instance and then refer to it by name in many different fieldType declarations. {quote} I don't think this is really a use case we need to support: the purpose of Similarity today is to do term weighting, not to be a huge data-structure holder. While I know Mike's original patch went this way with LUCENE-2392 (e.g. norms), I'm not sure i like it being in Similarity in the future either. Otherwise concepts like lazy-loading norms and all this other stuff get pushed onto the sim, which is an awkward place (imagine if you have many fields). So, I think we shouldn't really design for abuses of the API. If there are other use cases for ""named similarity"" that have to do with term weighting, I'm interested."
__label__love __label__joy	love_joy_70	"Ah great, thanks!"
__label__neutral	neutral_795	Performing the conversion of the time out interval from seconds to milliseconds using longs in the getTimeout method avoids the overflow. Could still add additional methods to the Session API if desired.
__label__neutral	neutral_796	Patch attached.
__label__neutral	neutral_797	"looks like the test-patch build ran before HADOOP-7753 was integrated in the snapshot build. I'll wait half an hour or so and retrigger this test-patch. Meanwhile, should be good to review."
__label__love	love_473	Thanks Anton. Fix applied to ACCESSIBILITY module at repo revision r598652. Please check it is fixed as you expected.
__label__neutral	neutral_798	"Yes, actually I take out the hbase part when I commit."
__label__neutral	neutral_799	Reopening this issue and Richard will add more information into the JIRA.
__label__love	love_474	"Thanks Radim, I put this into trunk, branch-2, and branch-0.23"
__label__neutral	neutral_800	Fixed in HBASE-2156 after it was reopened.
__label__love	love_475	"I've just committed this. Thanks Espen, Andrzej, and Owen!"
__label__neutral	neutral_801	"Hi Roman, Which version of Servicemix are you using ? There is an camel feature (which includes camel-core, camel-spring and camel-osgi) in the org.apache.felix.karaf.features.cfg, you need to replace it with camel-core and camel-spring-osgi. Please make sure there is no camel-spring, camel-spring-osgi, camel-osgi installed at the same time."
__label__neutral	neutral_802	"hmm, looks like I didn't save all java files after mass-replace of whitespace. I will attach another patch, nothing of significance will change"
__label__neutral	neutral_803	Committed revision 1070501.
__label__love	love_476	I've now ported the fix to 2.0.4 and deployed a new snapshot. Could someone give it a try to make sure it really is fixed so that we can close this off for 2.0.4? Thanks!
__label__love	love_477	Patch committed to trunk. Thanks Niraj.
__label__neutral	neutral_804	Committed revision 644436.
__label__love __label__joy	love_joy_71	"Looks good to me. Works for me, too. :-)"
__label__love	love_478	Thanks
__label__neutral	neutral_805	"changing the name of JIRA from ""multithreaded"" to ""parallel"" as we've done it with forks instead of threads."
__label__neutral	neutral_806	Haven't you done this N?
__label__neutral	neutral_807	"Hi Brandon, Let me know if the attached patch is sufficient... It looks like the following. Address DC Rack Status State Load Owns Token 143633478586163499463326301508681906517 10.123.42.165 us-east 1a Down Init ? ? ? 10.42.134.229 us-east 1a Up Normal 1.74 GB 35.40% 33724529808132598296109669138912087817 10.93.19.6 us-east 1a Down Normal 1.78 GB 38.69% 99546828780538918038465713665698202555 10.93.74.164 us-east 1a Up Normal 120.37 MB 2.53% 103845090001698524309715695190561870103 10.123.59.26 us-east 1a Up Normal 1.15 GB 23.39% 143633478586163499463326301508681906517"
__label__neutral	neutral_808	For quick reference.... autoPagingContent is the usage in question.
__label__love	love_479	Thanks for finding and fixing. The patch applied at r474719
__label__neutral	neutral_809	Ported to trunk
__label__love	love_480	"I just committed this. Thanks, Sanjay!"
__label__sadness	sadness_105	"Sorry, I clicked the ""submit"" too quickly, the revision number is r501311."
__label__love	love_481	"committed, thanks!"
__label__neutral	neutral_810	It'd work but it's a halfway hack to the real fix we should do in 0.92. My points is that I think it is a good idea in general to raise this timeout (while adding configs so you don't necessarily have to wait since smallish clusters could use the max param if they want to speed this up)... we have run into the situation where not all RS came in the 3 second window (which really is too small given heartbeat frequency) so I've already ramped up the config timeout for fb production. But I'm fine implementing the halfway fix if my argument still doesn't win you over :)
__label__joy	joy_99	"Patch looks good. One minor comment, PlanHelper.LoadStoreFinder may better be PlanHelper.LoadStoreNativeFinder."
__label__neutral	neutral_811	bq. I'm attaching a patch which adds a second query() method to SolrServer which takes the request method as the second argument. Shouldn't that be specific to an HTTP server?
__label__neutral	neutral_812	Uwe: I don't interpret it that way! I don't think our indexinputs should be doing writes!
__label__love __label__joy	love_joy_72	"+1 I committed this. Thanks, Kay Kay!"
__label__love	love_482	"I applied the patch, thanks!"
__label__neutral	neutral_813	change status from ASSIGNED to NEW for consistency
__label__love	love_483	Committed to trunk. Thanks for patch Tudor and review Michael.
__label__joy	joy_100	Looks good to me.
__label__neutral	neutral_814	"Looks like this problem is bigger than I thought. I can't even get a simple form without dot-stuffing to work. Parsing this simple script: require [""fileinto"", ""reject"", ""tag"", ""flag""]; # reply if anyof (header :contains ""subject"" ""test reply"") { reply ""text:"" This is the first line This is the second line . ; stop; } results in org.apache.jsieve.parser.generated.TokenMgrError: Lexical error at line 8, column 1. Encountered: ""."" (46), after : "" at org.apache.jsieve.parser.generated.SieveParserTokenManager.getNextToken(SieveParserTokenManager.java:609) at org.apache.jsieve.parser.generated.SieveParser.getToken(SieveParser.java:625) at org.apache.jsieve.parser.generated.SieveParser.jjtreeOpenNodeScope(SieveParser.java:10)"
__label__neutral	neutral_815	"resovled, commits in comments"
__label__love	love_484	"Thanks Bryan for converting these tests. In using the DERBY-2152 conversion tool, can you double check that it does not omit the fail assert method after a method call in a try-catch block when the statement is expected to fail. e.g. instead of try { s.execute(command); } catch (SQLException e) { assertSQLState(""42502"", e); } It should be: try { s.execute(command); fail(""Command expected to fail"" + command); } catch (SQLException e) { assertSQLState(""42502"", e); }"
__label__neutral	neutral_816	Forgot to grant license
__label__sadness	sadness_106	"Sorry looks like we took to long to get to this, the patch no longer applies. Can you please upmerge to latest?"
__label__sadness	sadness_107	[~sershe] sorry for late reply. I upload the patch to https://reviews.facebook.net/D13341. Could you help to review it ? thx.
__label__joy	joy_101	+1 Looks good to me.
__label__love __label__sadness	love_sadness_7	"Nadya, Thanks a lot for applying the patch. The changes are on the site. Everything looks the way it should. IMHO, we should close the issue now. P.S. forgot to mention other changes. Sorry. Will be more attentive in future."
__label__neutral	neutral_817	Committed to trunk with revision 429550.
__label__love __label__joy	love_joy_73	"Hi Anurag, Thanks for the preliminary peek at this patch. Looks good. I like the way you handled the optional inclusion of the JDBC4-specific classes in the jar file. I recommend adding class and method comments to the test classes so that reviewers will know what these tests are supposed to stress. Thanks for the explanation of why you disabled the SecurityManager and for commenting the property file accordingly. When we do commit this patch, let's leave the JIRA open to remind us to re-enable the SecurityManager after mustang fixes its bug. Cheers-Rick"
__label__neutral	neutral_818	this patch adds rule for hm and rs to the core-site template
__label__love __label__joy	love_joy_74	"Hi Leon, thanks i'll take a look. Anyway i thought of refactoring this parsing mechanism, we can do better :-). Cheers Sascha"
__label__joy	joy_102	I think its a good idea to go ahead and put a patch together so we can discuss it directly.
__label__neutral	neutral_819	"bq. I assumed modules doesn't need to be self-contained like Lucene or Solr. I can fix that by enforcing tools' compilation in that macro... I'll do that. bq. Steve, will you double check again if everything works Yes, everything works for me now, thanks! bq. and commit this in? Is there some reason why you can't do this? IMO committers should commit their own work. bq. I didn't put an entry into CHANGES so you'd have to add it if it qualifies at all to be mentioned there. IMO this definitely warrants a CHANGES.txt entry. This should also be backported to branch_3x. bq. This reminds me of the ""infrastructure tools"" problem we had in Carrot2. We finally decided to simply have them as a stand-alone project living within the same repository space, with a stored, versioned binary artefact updated when tools had to be updated (rarely). This does version a binary file but you don't need to worry about recompiling things over and over. +1 to do this for this and any other Lucene/Solr Ant tasks."
__label__sadness	sadness_108	"Sorry for my delay. I would have answered early but I completely missed the notification mail about Christiano's comment :( @Christiano: I've just tested it again and it seams to work for me: {code} karaf@root> list START LEVEL 100 , List Threshold: 50 ID State Blueprint Level Name [ 42] [Active ] [ ] [ 60] Apache Shiro :: Core (1.2.0.SNAPSHOT) [ 43] [Active ] [ ] [ 60] Apache ServiceMix :: Bundles :: ehcache (2.3.0.1) [ 44] [Active ] [ ] [ 60] Apache Shiro :: Support :: EHCache (1.2.0.SNAPSHOT) {code} Looking into the shiro ehcache pom i found the following: {code} <Import-Package> org.apache.shiro*;version=""${shiro.osgi.importRange}"", net.sf.ehcache*;version=""[2.3, 3)"", * </Import-Package> {code} --> org.apache.shiro.ehcache [70]: Unable to resolve 70.0: missing requirement [70.0] package; (&(package=net.sf.ehcache)(version>=1.4.0)(!(version>=2.0.0))) says that you're using an old snapshot-version of shiro ehcache. This could happen with the snapshots since karaf simply takes what it could find in your local mvn repo. Either simply remove your local .m2/repository/org/apache/shiro folder and let maven grep the latest version or build shiro yourself locally should fix the problem. Sorry again for the delay and kind regards, Andreas"
__label__love	love_485	"Ray, Jacoo, I finally commited it in revision: 485087. Thanks"
__label__sadness	sadness_109	"Sorry, forgot to mention it in issue description. I use commons-net-2.0.jar, i.e. version 2.0. It's because Scott Bjerstedt wrote in VFS-264 that for his patch to work we need to use commons-net 2.0."
__label__neutral	neutral_820	maybe we can replace wsn-http-binding in the future
__label__love	love_486	Great - thanks for the heads up Ben!
__label__neutral	neutral_821	This is a duplicate of QPID-2488
__label__neutral	neutral_822	Attachment FOP_BUG_page-number-citation.fo has been added with description: FO to reproduce bug.
__label__love	love_487	"Oh, well. Many thanks, anyways Oleg"
__label__love	love_488	"Guillaume, Thanks for your commit. It fix this problem and my example works fine now with this fix."
__label__love	love_489	Committed. Thanks Navis
__label__neutral	neutral_823	Dumb user; disregard.
__label__neutral	neutral_824	Created an attachment (id=293) Trivial patch that fixes this bug
__label__neutral	neutral_825	Are you using the latest Agent code? I had verified on with latest kvm agent jar copied to kvm host and tried. It worked without issues. Edision had implemented this with the above commit mentioned. Last Saturday I had verified it and its working . Migrating volume across ZONE/Cluster wide is working perfectly.
__label__joy	joy_103	+1 Looks good to me.
__label__neutral	neutral_826	Reopened for trunk fix.
__label__love	love_490	Thanks. I'll look into this.
__label__love	love_491	"Bruno, you mentioned in a gtalk conversation that you had a patch for this, but I can't find it here in JIRA.. could you attach it please? thanks!"
__label__love	love_492	"Thanks, Andreas, I will check it,"
__label__love	love_493	Thanks for the explanation +1 for the patch.
__label__neutral	neutral_827	Patch commited
__label__love __label__joy	love_joy_75	+1 The patch looks good to me. I will commit this later.
__label__love	love_494	"Thanks RenÃ©, Your patch is in trunk at r1061167, R10.04 at r1061173, R9.04 at r1061174"
__label__sadness	sadness_110	I'm sorry for frequently updating the issue title and contents.
__label__neutral	neutral_828	Committed derby-716-10-datatypesCollation-aa.diff at subversion revision 585710.
__label__love __label__joy	love_joy_76	Thanks Jon. +1. Patch looks good. Minor nitpick I have is that it would be nice to give the test a more relevant name than testAutomaticallyMadeName. Something like testRelationAliasForBinCond. But I am not going to insist.
__label__anger	anger_5	"bq. Here's a patch for the general case, and it also adds a warning that you should set your similarity with Similarity.setDefault, especially if you omit norms. Is there no way to remove this stupid static default and deprecate Similarity.(g|s)etDefault()? Can we not use the Similarity from IndexWriter for the case of NormsWriter?"
__label__love	love_495	Thanks for your review. I've just committed.
__label__neutral	neutral_829	Reopening this to keep track of progress in WTP's Bug 200715.
__label__sadness	sadness_111	"Here is a stronger/generalized version of this patch. Due to a lack to time on my part, this has not been compiled or tested, (sorry). Please test if you can David/Joachim."
__label__neutral	neutral_830	"It's only committed to the trunk at present (you can check this by selecting the ""All"" tab in the ""Activity"" section). @Willem: Anything other to do here? I'm asking because the issue is still in the status open. Any reason not to back port this feature also to our 2.10.x and 2.9.x feature branch?"
__label__love	love_496	Committed. Thanks a lot very much Ashish!!
__label__love	love_497	Thanks Rick for applaying the patch.
__label__neutral	neutral_831	Committed optimization in trunk revision: 1037077
__label__sadness	sadness_112	"Patch is not well formed, cancel patch. Sorry about this."
__label__neutral	neutral_832	There is no close() in FileContext. Users are not supposed to close FileContext.
__label__sadness	sadness_113	"Sorry, I miss. This bug is same STR-2372. I change resolution to INVALID."
__label__neutral	neutral_833	Committed revision 1475954.
__label__joy	joy_104	+1 The patch looks good to me.
__label__love	love_498	"Review request for hive. Changes ------- address Ning's comments. Did the minimum change and the performance is acceptable. We can try to remove empty path check if in future we see the latency is not good. Summary ------- speedup addInputPaths This addresses bug HIVE-2218. https://issues.apache.org/jira/browse/HIVE-2218 Diffs (updated) ----- trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/ExecDriver.java 1135335 trunk/ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java 1135335 Diff: https://reviews.apache.org/r/898/diff Testing ------- yes. Thanks, Yongqiang"
__label__neutral	neutral_834	Just back from vacation. Have updated the code with required changes. It should be good to go now. Pradeep can you or any other committer review it ?
__label__neutral	neutral_835	"[~mbo], yes & yes, IMHO."
__label__love	love_499	"Thanks for your patch and your investigations! I reopen the issue, will apply the patch soon."
__label__joy	joy_105	Patch looks good. +1
__label__neutral	neutral_836	"There is a bug in PayloadNearQuery. If there are multiple top level spans that match the query, only the payloads of the first one are retrieved. This patch fixes this bug by iterating over all the top level spans to get the payloads (see 'setFreqCurrentDoc') > The base explain method can't be abstract. Something like Ah, right. This is included in the patch >The changes don't seem thread safe any more since there are now member variables. It may still be all right, but have you looked at this aspect? I guess that could be said about PayloadTermSpanScorer and PayloadNearSpanScorer, too (payloadScore, payloadsSeen). As for the PayloadFunction classes, they seem lightweight enough to be created with each query. Is there a better pattern? Peter"
__label__love	love_500	"Applied, thanks."
__label__love	love_501	Committed. Thanks Tim
__label__neutral	neutral_837	"This is something that some people have asked for since my CNET days... I thought there was already an open issue for this, but I can't seem to find it (so I guess not!)"
__label__love	love_502	"Committed to trunk. Thanks, Francis!"
__label__love	love_503	"I just committed this. Thanks, Tom!"
__label__sadness	sadness_114	"Sorry, but your testcase doesn't fail on my machine, it gives me two counters in two windows - the second one with a ten second start delay. WinXP + JDK 1.5.0_09 + Tomcat 5.5.20 + T4.0.2"
__label__love	love_504	"Hi Chris, Thanks for your detailed response. Thanks,"
__label__neutral	neutral_838	"bq. I did hit the error while I did that but I will verify again. Ugh. If that's the case then maybe catch the OOM in the read, and fallback to the temp buffer read solution?"
__label__neutral	neutral_839	"> Do you think attached patch is generic? Nothing is generic until it's used in more than one place. The above isn't complete (it needs, e.g., 'read()' and 'seek()' implementations) but it looks like a good start. But the real question is to you: could you use the above? Can you present the data and checksums as input streams that support read(byte[], int, int) and seek(long)? It also assumes a particular checksum implementation, CRC32. If we wish to allow for others, that aspect could be generalized by adding a codec-like interface for checksummers. But I think we should probably skip that this iteration."
__label__neutral	neutral_840	"The proposed solution I outlined above, on github: http://github.com/assaf/buildr/tree/BUILDR-4 But I can't find a way to use this in combination with ArtifactNamespace, so it will have to be one or the other."
__label__sadness	sadness_115	"Hi Simo, sorry for delay. I had a quick check to org.kohsuke.MetaInfServices . It seems to fit all our needs: use the quickest and more standard way to declare plugins in a transparent fashion. I don't have any objection with this patch, for me it is ok. Thanks Mic"
__label__joy	joy_106	+1 patch looks good.
__label__neutral	neutral_841	"So there is another thing here, by deferring the evictions to the background thread you increase the chance that the block will be tenured then it must be collected from CMS space, thus radically increasing the GC complexity of the cache. Originally when the LRU block cache came in, it made my collections 10x as slow until I disabled the block cache for compactions. Unfortunately all these micro-optimizations might be falling under the GC wayside."
__label__love	love_505	"Tim, The fix is good. Please close this JIRA. Thanks a lot."
__label__neutral	neutral_842	Committed revision 1343996.
__label__neutral	neutral_843	Some tests I did with a modified PE. I ran the PE with a number from 10 to 3000 and incremented by 10. The garbage collector was called after each run. Here are the results: {quote} 08/09/17 17:07:21 INFO hbase.ManyPerformanceEvaluation: 470 31961 08/09/17 17:14:17 INFO hbase.ManyPerformanceEvaluation: 480 31968 ... {quote} It seems that 2000 was an overkill. The gain is impressive between 1 and 10 then around 300 we pretty much reduced the RPC call at it's smallest value.
__label__neutral	neutral_844	Please submit an diff against the v2.3.1 branch.
__label__love	love_506	"I just committed this. Thanks, Raghu!"
__label__love	love_507	"Committed to trunk. Thanks, Teddy!"
__label__love	love_508	"I committed this. Thanks, Miki!"
__label__neutral	neutral_845	"Henry, you do need an instance of QCM to get the listener, but you don't need the listener because you're using LE. I'm uploading a patch in which I have commented out some lines of the new test you wrote. This is how I think it should look like. If you agree, please remove those lines and submit a new patch. Note that I have also changed the leader election parameter in the new instance of QuorumPeer in mockServer to 0."
__label__neutral	neutral_846	Why not use getSystemLoadAvg() to make it portable?
__label__love	love_509	Committed. Thanks Ning
__label__love	love_510	Applied to trunk revision 987457. Thanks Bob.
__label__love	love_511	"Done, Thanks chatra"
__label__neutral	neutral_847	Attached a patch that adds a flag for opt-in and adds a test
__label__love	love_512	Fix checked in at revision 648768. Thanks Xu.
__label__neutral	neutral_848	"Hi Ahsan, I noticed that there are some good links to suggestions for writing the best proposal from this page: http://google-opensource.blogspot.com/2013/05/student-proposal-deadline-for-google.html"
__label__love	love_513	Committed to TRUNK. Thanks for review Prakash.
__label__love	love_514	"Knut and Rick, thanks for your feedbacks. I will take care of the comments posted by Knut. Rick, thanks for adding -lint directive, it will be good to see the error from the compiler."
__label__neutral	neutral_849	Closing issue; Oozie 3.3.2 is released
__label__love	love_515	Thanks for raising these documentation issues! I just committed a fix.
__label__neutral	neutral_850	"FWIW, I didn't experience the problem with Karaf commands when using Fuse ESB (based on Karaf 2.2.5), but I did have problems with Aries Blueprint when I tried to instantiate some of our own beans as an OSGi service. Workaround for me was to remove the Aries Proxy 0.3 bundle shipped with Fuse ESB and install Aries Proxy 0.3.1. After I did that and restarted the container, the problem was resolved for me."
__label__neutral	neutral_851	Please re-open if necessary.
__label__love __label__sadness	love_sadness_8	"I am sorry for the delay in responding. If you think the new patch is read for commit can you check patch available and it will get back on the radar. Is derbyall clean as well l? I am not seeing the original path anymore. For future reference, I think it is good in general to keep the old ones there to see what's changed. Thank you so much for all your work on Derby!"
__label__joy	joy_107	"Looks good, thanks!"
__label__neutral	neutral_852	I cannot reproduce this bug on my test machine. Can you produce it reliably? Maybe we should revert HBASE-3899 until the time we can fix it?
__label__love	love_516	"Committed to trunk. Thanks, Gunther!"
__label__neutral	neutral_853	Local test passed. Submit to hudson.
__label__neutral	neutral_854	"Ivan could not reproduce this on the latest build, so closing."
__label__love	love_517	Committed to trunk and branch-0.4. Thanks Rohini.
__label__sadness	sadness_116	A Quickstart for the bug as Eclipse/Maven Project. Sorry for the delay.
__label__neutral	neutral_855	"I don't think there is any sense in this, who cares? We reported this crash to Oracle in plenty of time, and the *worse* wrong-results bug has been open since May 13: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7044738, but Oracle decided not to fix that, too."
__label__neutral	neutral_856	Changes ported to branches/2.1 in rev 656740.
__label__love	love_518	"Thanks for catching this, I have fixed it."
__label__love	love_519	"Thanks Scott, I have committed your last work in svn with rev. 7876"
__label__love	love_520	Committed. Thanks Gang Tim Liu
__label__joy	joy_108	"Thanks very much for your response. I want to thank your team for the great job they've done building a superior open-source solution. Not only do I use but I also promote it everywhere I go. I just did a hands-on lab using JSPWiki to create 'qwiki' WEB apps for 40 people at DEVCON 2007. It got excellent reviews. I promote this as an Enterprise Open-source solution. If a company wanted to purchase a support contract or services for a production implementation of the product who should they contact? Thanks again, Jim Mason https://issues.apache.org/jira/browse/JSPWIKI-24?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel --------------------------------------------------------------------------------------------------------------- __________________________________________________ Do You Yahoo!? Tired of spam? Yahoo! Mail has the best spam protection around http://mail.yahoo.com"
__label__neutral	neutral_857	"Patch that adds this in, along with some extra whitespace removal from that chunk of the javadoc."
__label__sadness	sadness_117	"Hi Andreas, Sorry for my late reply. I haven't looked in to the difference between using the ResponseBuilder#getFilters and using filter's in a normal query. Are there any functional differences between the two ways other than that one of them utilizes Solr's filterCache and the other doesn't?"
__label__love	love_521	fixed in trunk... thanks Henri!
__label__love	love_522	Re font size: sounds reasonable. Thanks.
__label__love	love_523	"Thanks Pi. I do not think there is any special tricks besides those with Linux (such as you will need ant, junit, java, svn, etc). If you want, you can also send me your pig.jar and then I will try it out for you. Best regards, Xu org.apache.pig.impl.logicalLayer.parser.QueryParser.Expr(QueryParser.java:373>> )"
__label__neutral	neutral_858	Committed in revision 1363218.
__label__neutral	neutral_859	The TestFileConcurrentReader failure seems to be happening on a lot of builds. It's caused by the process running out of file handles. Maybe ulimit needs to be changed on the hudson server.
__label__sadness	sadness_118	"Running tests on this. Will commit once it is done. Sorry, this one fell off my radar..."
__label__neutral	neutral_860	Closing all resolved tickets from 2010 or older
__label__joy	joy_109	+1 patch looks good. I have committed this.
__label__love	love_524	Committed. Thanks Jarek
__label__neutral	neutral_861	"The ASF is going to get the document signed this week, will keep you posted."
__label__neutral	neutral_862	"You are right, its the wrong one (an older attempt)."
__label__neutral	neutral_863	"Yes, that's it. Since it fixes the problem, I'll commit the fix."
__label__neutral	neutral_864	We found the root cause of the problem. Will add a patch
__label__neutral	neutral_865	Can the ExtractionRequestHandler go away?
__label__neutral	neutral_866	"â€“ Nexus repository was prepared successfully. -- Configuration has been prepared, now you can: * Deploy snapshot artifacts into repository https://repository.apache.org/content/repositories/snapshots * Deploy release artifacts into the staging repository https://repository.apache.org/service/local/staging/deploy/maven2 * Promote staged artifacts into repository 'Releases' * Download snapshot and release artifacts from group https://repository.apache.org/content/groups/public * Download snapshot, release and staged artifacts from staging group https://repository.apache.org/content/groups/staging"
__label__love __label__joy	love_joy_77	Committed. Thanks Yuntao!
__label__neutral	neutral_867	"Make AMP constants refer to &amp; instead of & and uses the AMP constant instead of ""&amp;"" added additional test case in UrlHelperTest"
__label__joy	joy_110	"Bertrand - nice work. This is a great idea and the patch looks good overall. Couple of points: - Don't forget the Apache header on the new Errors class - Maybe do the grammar corrections on the counter error messages separately? Just so we keep the commits to a single issue each. - I'm not sure we need to retain the delegating ""formatValueList"" method in TestDriver. Something to discuss... As for using Guava to do the string join - I know MRUnit used to have it as a dependency but this was removed in MRUNIT-50. Probably not worth bringing it back for such a simple method."
__label__neutral	neutral_868	same path as ZOOKEEPER-794_4.patch.txt but strip the path prefix added by Git.
__label__love	love_525	Thanks Jacques :)
__label__neutral	neutral_869	"StringBuilder is used because we can't stream JSON row before we have all columns serialized (columns serialized in portions according to PAGE_SIZE), see serializeRow(SSTableReader, SSTableIdentityIterator, DecoratedKey, PrintStream) method. If you have a better idea then using StringBuilder in this case, please share..."
__label__neutral	neutral_870	Closing all resolved tickets from 2010 or older
__label__sadness	sadness_119	"Sorry, I use JDK 1.4.2_06 and not 1.4.1 :)"
__label__love	love_526	"Patch committed to trunk and 0.11 branch. Zhijie, thanks for the patch!"
__label__neutral	neutral_871	"Hi, I have re-based the patch based on the latest master branch. Please review and let me know if any changes are required."
__label__love	love_527	I just committed this to both trunk and MR-279. Thanks Jeffrey!
__label__neutral	neutral_872	OK understood. Can you re-create the patch? It's out of sync with head at the moment.
__label__joy	joy_111	"Looks good. Minor nit, can you change info.wait(0); back to info.wait(); otherwise +1."
__label__neutral	neutral_873	I attached a patch to add one test for plaintext.
__label__love	love_528	"I have committed this. Thanks, Rodrigo!"
__label__love	love_529	"I committed this. Thanks, Jay!"
__label__neutral	neutral_874	"I have added <property file=""framework/base/config/cache.properties""/> <echo message=""NOTICE: deleting ${cache.file.store}.db""/> <delete file=""${cache.file.store}.db"" verbose=""true""/> to the clean task of my local main build.xml. After some more testing/discussion perhaps I will post it as a patch."
__label__neutral	neutral_875	First draft. Refactor code to prepare for work mentioned above. TestLoadIncrementalHFiles passes.
__label__neutral	neutral_876	"The attached patch adds a test case to RestrictedVTITest that shows that the predicate is not pushed in the following query: select s_r, count(*) from table(integerList()) t group by s_r having s_r > 1 Only the rows with s_r > 1 have to be returned by the table function integerList, so pushing the predicate could be useful. Committed the new test case to trunk with revision 943088."
__label__neutral	neutral_877	[~hustlmsp] I've created JIRA BOOKKEEPER-603 for the issue.
__label__joy __label__sadness	joy_sadness_1	"John: first off, i want to apologize for the *extremely* belated patch review ... I know i told you i'd try to look at this months ago, but ... yeah ... life tends to get in the way of patches. on the whole, things seem pretty good -- although you were still using an interface instead of an abstract class. Having the main API for a type of plugin be an abstract class is an important mechanism to help future proof ourselves against possible additions we want to make the the plugin API in the future; if it's an interface we can't really change it once it's released (because we might break people Impls); if it's an abstract class, we can always provide a default impl for people. the biggest concern i have about this patch at the moment is that there are no tests, and no example configs, so it's hard to be sure it's even working at all :) here's what i see as the current todo list for this issue... 1) there are some legacy SolrIndexSearcher constructors that need to delegate to the SolrCore to get indexReaderFactory ... perhaps we should have a helper method that decides which SolrIndexConfig to use based on the ""name"" ? 2) we need tests showing custom IndexReaderFactory getting used (even if it's just a mock IndexReaderFactory thatsets a boolean to show it's being used) ... this will also serve as a test that config syntax works. 3) need commented out example of using a custom indexReaderFactory in example/solr/conf/solrconfig.xml 4) sanity check this against SOLR-465, make sure we aren't painting ourselves into a corner. 5) we should make IndexReaderFactory use the AbstractPluginLoader stuff and remove the guts of SolrIndexConfig.loadIndexReaderFactory. It looks like we'll need to add a ""single item"" version of load to the AbstractPluginLoader to make that work well. #5 is something that can be done after this is committed, but 1-4 are pretty important. If you can update the patch with some configs/tests i'll think about the legacy SolrIndexSearcher constructors and try to figure out a good solution for them"
__label__neutral	neutral_878	"Yes, for create/append"
__label__neutral	neutral_879	Duplicate of HADOOP-3906. Plz comment there.
__label__love	love_530	"Thanks Harsh, good to know."
__label__neutral	neutral_880	I must have clicked the wrong link. I didn't mean to mark this resolved.
__label__joy	joy_112	+1 This looks good.
__label__joy	joy_113	+1. Looks good to me.
__label__joy	joy_114	Looks good to me. Colm.
__label__sadness	sadness_120	Missed 2 new files - sorry !
__label__neutral	neutral_881	commit 8193b5fddbff65e9e747f08ad36bc0ad41015ab0 Author: Bikas Saha <bikas@apache.org> Date: Mon May 13 17:35:57 2013 -0700 TEZ-123. Cleanup package dependencies. (bikas)
__label__joy	joy_115	"Great last enhancements, thanks guys!"
__label__neutral	neutral_882	https://cwiki.apache.org/confluence/display/OFBADMIN/OFBiz+Contributors+Best+Practices#OFBizContributorsBestPractices-HowtoSendinYourContributions%28orhowtocreateandapplypatches%29
__label__neutral	neutral_883	Brock commented two test failed. org.apache.hadoop.hive.cli.TestNegativeMinimrCliDriver.testNegativeCliDriver_mapreduce_stack_trace_hadoop20 org.apache.hcatalog.fileformats.TestOrcDynamicPartitioned.testHCatDynamicPartitionedTable Can you assert that? I cannot reproduce.
__label__neutral	neutral_884	canceling patch to get submit for hudson again.
__label__neutral	neutral_885	Would anybody now if this is fixed in a later release?
__label__neutral	neutral_886	"There are two sections of the diff that don't seem related: {noformat} @@ -178,7 +184,6 @@ <mkdir dir=""${build.webapps}/job/WEB-INF""/> <mkdir dir=""${build.webapps}/dfs/WEB-INF""/> <mkdir dir=""${build.webapps}/datanode/WEB-INF""/> - <mkdir dir=""${build.webapps}/history/WEB-INF""/> <mkdir dir=""${build.examples}""/> <mkdir dir=""${build.anttasks}""/> <mkdir dir=""${build.dir}/c++""/> @@ -274,13 +279,6 @@ </jsp-compile> <jsp-compile - uriroot=""${src.webapps}/history"" - outputdir=""${build.src}"" - package=""org.apache.hadoop.mapred"" - webxml=""${build.webapps}/history/WEB-INF/web.xml""> - </jsp-compile> - - <jsp-compile uriroot=""${src.webapps}/datanode"" outputdir=""${build.src}"" package=""org.apache.hadoop.dfs"" {noformat} This was part of HADOOP-2901, which was recently committed; the patch no longer applies cleanly. Could you regenerate it?"
__label__neutral	neutral_887	"Hi everyone, What's the status of this issue? Have you found and workarounds?"
__label__love	love_531	"I was able to download and extract http://db.apache.org/derby/docs/docs-10.0.tar.gz just fine. Thanks for working on this, Myrna."
__label__love	love_532	Thanks Scott. git formatted patches are fine in my opinion: lets get this fixed
__label__sadness	sadness_121	Dean I am sorry it didn't work out-of-the-box for you. Yes by all means if you have time later and still have issues then open a new ticket.
__label__neutral	neutral_888	Didn't make 1.1
__label__neutral	neutral_889	dupe of SLING-1529
__label__love	love_533	Committed. Thanks Chris!
__label__joy	joy_116	Patch looks good.
__label__neutral	neutral_890	"I commented out the ""jaasTest"" GBean since it seems to work fine without it. If it's necessary then please uncomment it."
__label__neutral	neutral_891	"I think what happens is all bugs are initially internal to Oracle and they need to be ""opened up"" to the public. I presume this is so that critical bug reports don't immediately become available for exploits... but I'm just guessing."
__label__neutral	neutral_892	Committed @revision 1340076 in trunk
__label__love	love_534	Applied the patch into trunk with thanks to Luca after minor refactoring.
__label__neutral	neutral_893	add 1 more reference overhead in the HRegion. Update the patch.
__label__love __label__sadness	love_sadness_9	"Sorry for that ! It's sometimes hard for us to describe a usecase that is so clear for us, but indeed not always for somebody else. Thanks for the time, and we'll try harder to explain in the future. About the jira issue, we'll try with full url's instead. This worked in 1.5.8 and 6.0.0, so we thought it was a bug. But now we know that it's just not supported anymore."
__label__neutral	neutral_894	"this patch is for /branches/2.0.2/plugins/org.apache.geronimo.st.v11.ui/src/org/apache/geronimo/st/v11/ui/sections/CommonGeneralSection.java,thanks."
__label__love	love_535	+1. Just committed this to trunk and branch-0.23. Thanks Jason!
__label__love	love_536	Patch applied. Thanks!
__label__neutral	neutral_895	path of proposed change
__label__joy	joy_117	+1 the new patch looks good.
__label__neutral	neutral_896	"Hi ShengTao, you would think if you follow: 1. Check if the service is there, add if it is not. 2. Then add a bindingTemplate. Then you would not be overwriting a bindingTemplates. You are right though, if you are saving a service it will overwrite the existing one, and it will remove any bindingTemplates if they are there. The current behavior is how the UDDI v3 spec tells us to so it, but we could add a config option to differentiate from the spec. Please let me know if you are following the above strategy and *still* seeing issues. --Kurt"
__label__neutral	neutral_897	Created an attachment (id=7238) 2nd repro.
__label__neutral	neutral_898	"Have a look at current svn head, i have changed the styling stuff of the component, with this approach it should work now. Just specify the ""style"" attribute and give it a width value. I also have had a look at how we can influence the default Dojo styling stuff and have updated the wiki on this: http://wiki.apache.org/myfaces/InputSuggestAjax Can you test it if it works for you?"
__label__neutral	neutral_899	"I didn't know about a Trinidad regex Validator. I've created it from scratch. Didn't look for any Validator code on the internet, because I wanted to make sure it was JSF 2.0 compliant."
__label__joy	joy_118	"+, looks good. Checking this in."
__label__love	love_537	Thanks John for bringing this up and also for providing the patch.
__label__neutral	neutral_900	"----------------------------------------------------------- This is an automatically generated e-mail. To reply, visit: https://reviews.apache.org/r/3401/#review4382 ----------------------------------------------------------- Looks good. Does it overwhelm the status display in the UI? - Lars"
__label__love	love_538	"Hi Aidan, can you review this change please, thanks."
__label__neutral	neutral_901	Duplicate of CAMEL-6918
__label__love	love_539	"committed, thanks Xiao Li!"
__label__joy	joy_119	"Wow, fast. Thanks!"
__label__sadness	sadness_122	"Sorry to be late getting back to this. Been a very busy week -- just got some time this afternoon and evening. The attached ConfigurableSimpleHTTPServer.patch provides facilities to fully configure a SImpleHTTPServer for production use. A new class HttpFactory is introduced that is a) Configurable with the most commonly set parameters, like request core thread pool size, request socket timeout, origin server header, etc., and b) Specializable to supply factory methods to override all the default classes instantiated by SimpleHTTPServer. This is important to achieve things like a bounded request queue. The parameters are also all settable in axis2.xml as part of the http TransportIn config. All axis2 tests pass, plus I've updated my application with a custom specialization of HttpFactory that is heavily configured and it also works properly. I'd like to look this over again tomorrow, and test the axis2.xml feature (not tested yet), but wanted to post this first version now to get comments on the approach. Deepal, Dims suggested you might be the right person to look this over? Also, Oleg, I'd appreciate any thoughts you have. The patch is against my local 1.0 repository, but I expect it will apply against the svn head since simplehttpserver patch applies against 1.0 (with different offset for the hunks in one file). If there are any issues, I'll make sure it applies cleanly against svn head tomorrow. Thanks, Chuck"
__label__neutral	neutral_902	Created an attachment (id=1425) Proposed patch
__label__neutral	neutral_903	Reviewed by Rob. Approve for 0.20.
__label__joy	joy_120	any chance to get a patch also for this? :)
__label__love __label__joy	love_joy_78	Thanks! :-)
__label__neutral	neutral_904	"Ported to branches/2.1 in rev 630315, along with GERONIMO-3840"
__label__love	love_540	Could you see my 2nd patch? :) Thank you.
__label__neutral	neutral_905	Patch 003 for removing the getPlatformPath code was applied at repo revision r818803.
__label__neutral	neutral_906	I mean keep purging that cache asset.
__label__neutral	neutral_907	Patch was commited on May 13 2009.
__label__neutral	neutral_908	Committed revision 1128830 to trunk. I will now backport to 3x.
__label__love	love_541	"Integrated to trunk. Thanks for the patch Francis. Do you want to address Ram's comment about 0.94 patch ? Thanks for the review, Andy and Ram."
__label__love	love_542	Committed. Thanks!
__label__love	love_543	"Jean-Marc, can you review it? Thanks."
__label__neutral	neutral_909	a patch is attached to camel-606 also address this issue.
__label__love	love_544	"I just committed this to trunk and branch 0.20, as they are test cases and no change to functionality. Thanks, Vinod !"
__label__love	love_545	Thanks Avi!
__label__love	love_546	Thanks for the review Andrew!
__label__love	love_547	Committed. Thanks for the patch :)
__label__love	love_548	Thanks Klaus!
__label__love	love_549	committed to trunk. thanks Ning.
__label__neutral	neutral_910	Committed trunk revision: 1206033 Now backporting.
__label__love	love_550	Committed. Thanks Robert!
__label__love	love_551	added in rev 546223. Thanks Will!
__label__neutral	neutral_911	"Hi Erwan, If you don't mind I have re-assigned to you, as you assigned yourself the umbrella task"
__label__neutral	neutral_912	"I am perfectly fine with that. It seems like more overhead, but I am fine either way."
__label__neutral	neutral_913	Replaced J2eeContextImpl.newContext(...) to J2eeContextImpl.newModuleContext(...)
__label__neutral	neutral_914	"Reattaching with ""grant license..."""
__label__joy	joy_121	Looks good. Thanks George.
__label__neutral	neutral_915	"bq. Actually, DIH started as a standalone webapp inside AOL. We changed it because we didn't want to duplicate the schema in two places and also because we wanted to have it available by default in Solr installations. Another web app means you need to procure hardware, plan capacity/failover, create firewall holes etc Even if it were a standalone app, I would still run it on the same hardware that runs Solr, though I might run it on the secondary servers that aren't normally seeing query load. Why would you need to have the schema in two places? My DIH config doesn't mention any field names, because all Solr field names match the MySQL field names. Even if they didn't, I'm not sure why it would be any different than any other SolrJ client, which doesn't need to have a copy of the schema. bq. Talking to multiple collections was never a goal for DIH â€“ I'm not sure what value it will bring. I've got a sharded index; currently production is on version 3.5.0. Full rebuilds are done with DIH because my SolrJ application can't touch it for indexing speed. It does fine for keeping the index up to date with once-a-minute updates, but for indexing millions of documents per shard, DIH beats it handily even though it's only single-threaded. If I could put all the DIH stuff into one central place, it might make it easier to manage. I do intend to look at the DIH code to see how it manages to run so fast, so I can hopefully improve my own code, but I can never find the time."
__label__neutral	neutral_916	Created an attachment (id=228) XML source with one entry that can trigger error
__label__love	love_552	"I just committed this. Thanks, Amareshwari!"
__label__neutral	neutral_917	I've upped the httpd timeout from 5 mins to 30. I didn't see any OutOfMemoryErrors in the logs so hopefully this will fix it. Please give it another try.
__label__neutral	neutral_918	reopened for fixVersion
__label__love __label__joy	love_joy_79	Committed to trunk. Thanks Mathias!
__label__sadness	sadness_123	"Sorry, my bad. Let me upload what I have."
__label__neutral	neutral_919	Would you post saxon error message?
__label__neutral	neutral_920	Committed revision 1504570. Committed revision 1504596. Committed revision 1504597.
__label__neutral	neutral_921	attach a patch fix NPE in debug message.
__label__neutral	neutral_922	"Actually i made a simple test on 2 small linkdb, and i didn't see any improvment. You're right. There is no need to add it."
__label__love	love_553	I just committed this to trunk. Thank you Uma. The patch does not apply to 0.23 branch any more. I recommend it for back porting.
__label__neutral	neutral_923	Committed the 2a patch with revision 1187204.
__label__love	love_554	The v4 changes look good. Thanks
__label__neutral	neutral_924	"1) Yea, we'll need Java 6 for the future stuff. Wasn't sure what the project's posture on that is. 2) Not a problem... documentation is key. However, I don't think this patch should be accepted as-is :-) There is a LOT of duplicate code in my patch. I did this because I didn't want to mess with the QueryRunner code if everyone thought my idea was stupid. However, there are a number of methods in the AsyncQueryRunner are improved from the QueryRunner (see DBUTILS-79). I propose that we create a base or abstract class which both QueryRunner and AsyncQueryRunner extend. Thoughts?"
__label__love	love_555	"Hi Tiago, Thanks for looking at this issue. On visual inspection of the change, your text change looks fine. However, I can't apply the patch. You need to svn diff from the top of the tree show it shows the path staring with java/engine/... You should reopen the issue until it has been committed. Also, just for good measure you should run suites.All and derbyall in case there are any canon updates needed. Thanks Kathey"
__label__neutral	neutral_925	Created an attachment (id=6644) SSL Guide (take 1)
__label__love	love_556	"Thanks a lot for the review, Todd. The test failure is unrelated and is already tracked by another JIRA. I'm going to commit this momentarily."
__label__neutral	neutral_926	"We can get average column size from row size / column count, so we could make it ""If column size > N bytes or sstable is older than gc_grace_period."""
__label__neutral	neutral_927	I just thought of one more thing we should do. We should make the StringInterner as @Public and @Stable. The API is simple enough I don't see much of a problem locking it down.
__label__neutral	neutral_928	Closing all resolved tickets from 2010 or older
__label__anger	anger_6	guys... this is so stupid...
__label__anger	anger_7	"I lost the whole morning cause HBase's RegionServer was dying with no logs, no nothing... how Am I supposed to debug the issue if u do not even generate a core dump?"
__label__anger	anger_8	{quote}You are messing down deep below hbase in dfs.
__label__anger	anger_9	"And I think if we're going to do a sweep up of shit, we should just kill root."
__label__anger	anger_10	"@idiot Yeah, I was on that idiot-path for a good while but commons-lang is a hairball, at least where this hashcode making and equals is concerned."
__label__anger	anger_11	Pull it back in if you think different.
__label__anger	anger_12	i suck.
__label__anger	anger_13	Will still be stuck in the loop though if can't actually close regions.
__label__anger	anger_14	Original edited patch was messed up... stupid sed!
__label__anger	anger_15	Who made this stupid rule?
__label__anger __label__sadness	anger_sadness_0	Sorry but this is just stupid.
__label__anger	anger_16	"But I will quit committing to Hama then, because I'm not going to support ONLY a binary format."
__label__anger	anger_17	This is not what I build a framework for.
__label__anger	anger_18	"Well, damn."
__label__anger __label__sadness	anger_sadness_1	Blooper after blooper - I hate SVN.
__label__anger	anger_19	"This looks reasonable to me... sucks we have to special case handling of "" ""..."
__label__anger	anger_20	You may want to carefully examine your assumption about this.
__label__anger	anger_21	"Ok, wow, welcome to Linux hell..."
__label__anger	anger_22	If I get a chance I may even roll it into our dev environment but I am currently in the middle of mem leak hell.
__label__anger	anger_23	Both equally bad.
__label__anger	anger_24	"Negative, I am against fetch groups in principle."
__label__anger	anger_25	This way lies metadata hell.
__label__anger	anger_26	"Shit, there is an dependency. Please go to Preferences -> LDAP -> Entry Editor and enable the option ""Show operational attributes""."
__label__anger	anger_27	Damn...
__label__anger	anger_28	Damn...
__label__anger	anger_29	Damn !
__label__anger	anger_30	The evil NPE strik back !!
__label__anger	anger_31	Bloody hell !!!
__label__anger	anger_32	Damn time has flown...
__label__anger	anger_33	Damn it !
__label__anger	anger_34	"This was a very bad bug, introduced by me being an idiot."
__label__neutral	neutral_929	"I did try some variations as well, and I have to say I only got confused."
__label__anger	anger_35	"I have stupidly deleted the original test dir, but judging from the suite's output files, no output was created after 3 1/2 hours."
__label__anger	anger_36	damn this was assigned to you since months.
__label__anger	anger_37	Imo all this just doesn't make sense from a pure performance aspect.
__label__neutral	neutral_930	Confused about this.
__label__anger	anger_38	Inserting timestamps automagically would be bad because it would limit a whole swath of use cases.
__label__anger	anger_39	If they do then Suse's cpio works for old ascii but the -c switch is broken.
__label__anger __label__sadness	anger_sadness_2	This is pretty embarassing!
__label__anger	anger_40	When you install a node module globally it goes into /usr/local where you don't have permissions to move shit into unless you sudo.
__label__anger	anger_41	"That being said, I'm not totally opposed to making the limit configurable."
__label__anger	anger_42	"My bad, I screwed up the assertion -> RuntimeException transition."
__label__anger	anger_43	"Well, that sucks."
__label__anger	anger_44	"No, it's not off the table, but it's moot unless we decide we want cqlsh in-tree at all."
__label__anger	anger_45	Ok here is a patch that works. I was stupid enough not to see it...
__label__anger	anger_46	It was a pretty stupid idea to use a static array of instances for QuorumOpMonitor.
__label__anger	anger_47	All I'm trying to say is that it's pretty easy to end up in propagation failure hell here or change something else that blows things up for use cases that are not foreseen.
__label__anger	anger_48	Just to clarify... you made the DTPE handle exceptions the same way as CassandraDaemon by updating it to use NBHS instead of CSLS... Did you just tell me to go fuck myself?
__label__anger	anger_49	"+1 (damn intellij, it's not like patch format hasn't been standard for years)"
__label__anger	anger_50	"Wow, it's like Thrift is going out of their way to make life suck for us this month."
__label__anger	anger_51	Here is quite bad.
__label__anger	anger_52	The samples you gave are different.
__label__anger	anger_53	"I just noticed your public tweet... bq. ""@wilhelmbierbaum True. Fuck the Avro C API."""
__label__anger	anger_54	"if so, can you see if you can git bisect this bad boy?"
__label__anger	anger_55	"It seems some of the wrappers in ink_hrtime.h() might no longer be used either, e.g. ink_gettimeofday() is never used, so lets get rid of that shit."
__label__anger	anger_56	"Heh, that's one hell of a bug, 275 bytes exactly, eh?"
__label__anger	anger_57	What a stupid name I chose for that object... )-:
__label__anger	anger_58	I think it's time to just close this issue.
__label__anger	anger_59	I'm not entering bogus reports for the hell of it ;) Matt
__label__anger	anger_60	I am currently trying to get it into AJDT dev builds but my git push is timing out (damn thing!
__label__anger	anger_61	Stupid Maven
__label__anger	anger_62	Ok. Stupid user Error here.
__label__neutral	neutral_931	Converted from a single FlatFileItemWriter to a database and flatfileitemwriter and didn't register the flatfile one as a stream.
__label__neutral	neutral_932	If using a single FlatFileItemWriter it is enough to register it as an ItemWriter however when using the composite the adding it as a stream is also needed.
__label__anger	anger_63	"Why the hell do they deliver Duration, if they cannot instantiate it :-/"
__label__anger	anger_64	"The defect from hell 666, be scared.."
__label__anger	anger_65	This really sucks!
__label__anger	anger_66	Why the hell is this not a bug?
__label__neutral	neutral_933	I'm confused...
__label__anger	anger_67	What the hell are you waiting for ?
__label__neutral	neutral_934	you can't reopen stuff fixed in the past without upsetting JIRA.
__label__neutral	neutral_935	"I've fixed that locally and am doing a full build, but I'm going to build a test case to duplicate the error and then verify my proposed fix corrects it."
__label__anger	anger_68	"I suspect it has nothing to do with the file system connector or Infinispan connectors, and is simply a (stupid) mistake in the federated join processor."
__label__anger	anger_69	I'm an idiot.
__label__neutral	neutral_936	"The Cenqua licensing section doesn't have a license like this, but the Clover licensing section does have a link to one."
__label__anger	anger_70	It really sucks that there is now way currently to include transitive dependencies.
__label__anger	anger_71	I'm an idiot... there's nothing wrong with the readme.txt.
__label__anger	anger_72	"Crap, forgot to verify that this is inconsistant with MRI, it's not."
__label__anger	anger_73	Please close as this is just me being stupid.
__label__anger	anger_74	"Holy hell, I think I found one problem with turning a bignum into anything else."
__label__anger	anger_75	This sucks *so much*...
__label__anger	anger_76	"Damn, I would close this out from the fix to JBSEAM-3742, except the quartz and seampay examples use a custom XML namespace and the XML schema validator is not happy with that."
__label__anger	anger_77	"*Damn*, I forgot."
__label__anger	anger_78	"Also, your username was stupidly named and confusing, so I deleted it and created a new one more appropriate."
__label__anger	anger_79	"Damn, it seemed it didn't work."
__label__anger	anger_80	"It sucks to lose the code readability, but it seems like a reasonable price to pay."
__label__anger	anger_81	"I don't have to ensure that the classloader knows groovy classes, *you* must do that."
__label__anger	anger_82	"And debugging is hell, because the test environment needs to have the exact same loader setup."
__label__anger	anger_83	who the hell starts using our jira for typing lessons ?!?
__label__anger	anger_84	fuck u
__label__anger	anger_85	"Hell, this is gonna take me a lot of work to raise."
__label__anger	anger_86	"That irritated the hell out of me too, but I didn't realise it was configurable in the .launch file."
__label__anger	anger_87	This sucks badly.
__label__surprise __label__anger	surprise_anger_0	Why on earth does createLink() need a request?
__label__anger	anger_88	Finally closing this bug from hell.
__label__anger	anger_89	I sure as hell don't want to start attaching models for the sake of detaching them directly afterwards.
__label__anger	anger_90	"That sucks, why isn't the escape mechanism working?"
__label__anger	anger_91	I am an idiot - this was a dupe of GUVNOR-84
__label__neutral	neutral_937	That is really confusing.
__label__anger	anger_92	"Sun RI sucks, why the hell is saveState() and restoreState() not called with with javax.faces.STATE_SAVING_METHOD = server???"
__label__anger	anger_93	"Swear to god, I'm not a total idiot."
__label__anger	anger_94	"I don't know how the hell my diff program decided to add seemingly random CR chars, but I've removed them now."
__label__anger	anger_95	"durrrh, that sucks."
__label__anger __label__sadness	anger_sadness_3	Im stuck with IE6 unfortunately.
__label__anger	anger_96	"What the hell, I'll give this a shot."
__label__anger	anger_97	{quote} searcher.getAtomicReader().getSortedDocValues(uniqueKey); {quote} This is a performance killer.
__label__anger	anger_98	"As far as the query shit, i have no idea if solrdispatchfilter or whatever could/should do Thread.currentThread().setName(x) or whatever (and maybe restore after)"
__label__anger	anger_99	BTW: This is one reason why I hate this autoboxing shit since Java 5. I would love to have a way to prevent it in code (forbidden checks should detect this somehow).
__label__anger	anger_100	"Hmm, that sucks."
__label__anger	anger_101	tricky shit man! I think I found the issue!
__label__anger	anger_102	Oh man ... it's a fucking precendence problem.
__label__anger	anger_103	"Ugh, well that sucks."
__label__anger	anger_104	I didn't know we needed to retain backwards config capability across 3.x to 4.x :-( That sucks and it'll make old code stick around longer.
__label__anger	anger_105	bq. this is solr's fault by having a getter that does some heavy duty xml shit.
__label__anger	anger_106	That sounds like some serious buck passing.
__label__anger	anger_107	This whole thing is very distressing to me.
__label__anger	anger_108	I think we all know it just sucks.
__label__anger	anger_109	"though I disagree with a signficant amount of statements you made,I don't think we would ever come to agreement anyway."
__label__anger	anger_110	that's some freaky shit ...
__label__neutral	neutral_938	i could have sworn i clicked the other radio button
__label__anger	anger_111	I think you made mistakes in ivy.xml.
__label__anger	anger_112	This is where it gets confusing.
__label__anger	anger_113	"If I can give you one advice on this one, I'd say this: fuck Derby, use H2 instead as the default embedded database."
__label__anger	anger_114	What the hell?!
__label__anger	anger_115	(Do nothing): Are you serious about that?
__label__anger	anger_116	"@Oleg, please accept that my ""logical"" is different from your ""logical""."
__label__anger	anger_117	"So, I'm fine with your logic, but given that I don't understand it please don't get upset when I ask questions on how I have to use it."
__label__anger __label__sadness	anger_sadness_4	This was my bad.
__label__anger	anger_118	The rest are *totally* unrelated.
__label__anger	anger_119	"Oh fuck :-) Sorry. Not my day, more beer needed!"
__label__anger	anger_120	"Sorry, I guess I'm against ""never computing this shit""... because you guys think returning NaN is ok."
__label__anger	anger_121	"if you want to make these optimizations, fix the APIs so its intuitive, otherwise, no way."
__label__anger	anger_122	"who the fuck is asking for scores, but not the max score, and why does their insanely specialized use case justify all these booleans on a central lucene class."
__label__anger	anger_123	I don't care about code duplication here.
__label__anger	anger_124	"We should not invoke the global synced fieldnumbers shit for every element, only when the setting actually changes"
__label__anger	anger_125	I disagree... and I guess I'm willing to go to bat for this.
__label__anger	anger_126	HOLY SHIT!
__label__anger	anger_127	I think the comments here are a bad sign... I sent us down an unfortunate slippery slope we are a search engine library! don't put shit in the index directory! or we will delete your shit. dead simple.
__label__anger	anger_128	I wholeheartedly agree this API is confusing as hell.
__label__anger	anger_129	"Not only it's the first one in my life I'm seeing multiple ways of closing the same thing, it also conceals programming errors."
__label__anger	anger_130	Sucks to rush a commit when an issue is under discussion.
__label__anger	anger_131	"I'm against such heavy committing myself, without some consensus to do so."
__label__anger	anger_132	I'm confused.
__label__anger	anger_133	> I hated that aspect of working for commercial companies.
__label__neutral	neutral_939	Of course it is.
__label__anger	anger_134	My bad.
__label__anger	anger_135	My bad.
__label__anger	anger_136	"Igor is an idiot, and we *do* need gmake."
__label__anger	anger_137	"Shit, I missed a cast."
__label__anger	anger_138	"But, even if it wasn't it would be totally worthless where it is at."
__label__anger	anger_139	This is clearly bad webserver behaviour.
__label__anger	anger_140	Forget what I made(D8067).
__label__anger	anger_141	PreCommit-HDFS-Build is stuck.
__label__neutral	neutral_940	I am slightly confused by the above.
__label__anger	anger_142	"So, it is stuck somewhere."
__label__anger	anger_143	I don't want one-offs like this to become lost and forgotten.
__label__anger	anger_144	"But now that I think about it, it may crap out when coming back to read even on a recovered file."
__label__anger	anger_145	"@Matt... I'm an idiot, I used the wrong patch. Sigh."
__label__anger	anger_146	I'm however very interested in this feature as it is essential to me.
__label__anger	anger_147	bq. this is solr's fault by having a getter that does some heavy duty xml shit.
__label__anger	anger_148	"Holy complicated-as-shit-algorithm, Batman! The complexity of our implementation vs the complexity of what we're actually doing is starting to worry me here."
__label__anger	anger_149	"It also happens at the very startup after he has loaded only 3 sstables (hence DataTracker likely have 3 sstables, not a shit load)."
__label__anger	anger_150	"Shit, my bad. The posted patch is from a completely wrong branch of my git repo - I had not realized I ran the test-patch against a branch not branch-1."
__label__anger	anger_151	"(In this particular case, Hoss clearly intended to use the no-no word as an intensifier, and not to stir shit.)"
__label__anger	anger_152	Maybe only one of us should play lawyer and the other one play engineer.
__label__anger	anger_153	"I used to be the latter, but then I went to law school and got a degree in this shit."
__label__anger	anger_154	"Then, to make matters worse, since the mid-1990's I've been offering pro bono advice to non-profit foundations whose members insult me regularly and assume I'm an amateur."
__label__anger	anger_155	"Someone, but I'm not sure who, owes me a public apology here. /Larry"
__label__anger	anger_156	"Shit, there is an dependency. Please go to Preferences -> LDAP -> Entry Editor and enable the option ""Show operational attributes""."
__label__anger	anger_157	that's bad Content-Type from gSOAP.
__label__anger	anger_158	Pull it back in if you think different.
__label__anger	anger_159	Hmm ... this is quite bad.
__label__anger	anger_160	You are messing down deep below hbase in dfs.
__label__anger	anger_161	"Damn it, sry lost the orientation."
__label__anger	anger_162	"Oh, my stupid:)"
__label__anger	anger_163	oh ...geez I'm an idiot.
__label__anger	anger_164	@jira - I wish you didn't suck so much.
__label__anger	anger_165	Indeed that would be VERY bad design.
__label__anger	anger_166	My bad.
__label__anger	anger_167	(How bad is this?
__label__anger	anger_168	I'm confused.
__label__anger	anger_169	This is pretty trivial.
__label__anger	anger_170	"Of course, it could... :-) DOH!"
__label__anger	anger_171	Then you're pretty well screwed.
__label__anger	anger_172	"Damn, Chuck is scary."
__label__anger	anger_173	This is bad.
__label__anger	anger_174	"Well, that sucks."
__label__anger	anger_175	Bad memory.
__label__anger	anger_176	"The state stuck at ""Allocated state"", It is a dup of 3788."
__label__anger	anger_177	This is a pretty awful bug.
__label__anger	anger_178	Replaced patch with fix to catch more bad variables
__label__anger	anger_179	Does this suck?
__label__anger	anger_180	"Of course, StrFieldSource is a private class No it's not."
__label__anger	anger_181	CSS is really confusing sometimes.
__label__anger	anger_182	"Django is a fullstack framework, Click is not."
__label__anger	anger_183	My bad.
__label__anger	anger_184	"Credit, of course, goes to Dick."
__label__anger	anger_185	It seems really confusing.
__label__anger	anger_186	+1 for this: my bad.
__label__anger	anger_187	Hell or high water.
__label__anger	anger_188	-1 to jar hell.
__label__anger	anger_189	That would suck.
__label__anger	anger_190	"If so, a test that succeeds with errors is confusing as hell..."
__label__anger	anger_191	If the different segments are somewhat homogeneous then these stats should pretty much be very close anyway.
__label__anger	anger_192	"This is pretty trivial, just adds three asserts to TestPath#testNormalize."
__label__anger	anger_193	I doubt that Squid is so bad at it.
__label__anger	anger_194	It's not too bad once CacheConfig is in.
__label__anger	anger_195	"Not too bad though, since clearing out commitlog segments is easily done."
__label__anger	anger_196	ah - my bad.
__label__anger	anger_197	"My bad, had a typo in the subscription e-mail."
__label__anger	anger_198	My bad.
__label__anger	anger_199	"Yep, my bad."
__label__anger	anger_200	Pull it back in if you think different.
__label__anger	anger_201	Tabs are evil.
__label__anger	anger_202	I looked at our distributed pom.xml and they're pretty obscure.
__label__anger	anger_203	once per every bad disk).
__label__anger	anger_204	"Hell, UnaryFunction might even be faster than all of these calls in a row."
__label__anger	anger_205	This was very bad documented.
__label__anger	anger_206	Damn.
__label__anger	anger_207	Pull it back in if you think different.
__label__anger	anger_208	"Ie, both at are bad."
__label__anger	anger_209	"durrrh, that sucks."
__label__anger	anger_210	My bad.
__label__anger	anger_211	I'm an idiot.
__label__anger	anger_212	Splitting an existing sub-shard gets stuck up.
__label__anger	anger_213	This is bad.
__label__anger	anger_214	"Oopps, bad move !"
__label__anger	anger_215	the recommendation in the wiki is bad.
__label__anger	anger_216	My bad.
__label__anger	anger_217	"I'm starting to think of ""DLL Hell."""
__label__anger	anger_218	#NAME?
__label__anger	anger_219	Fix bad patch
__label__anger	anger_220	Logger on top of Log4J and its abstract base class for supporting other frameworks.
__label__anger	anger_221	My bad.
__label__anger	anger_222	"Well, either you query the database every damn time, and your plugin/tool/code will be super slow."
__label__anger	anger_223	Damn it.
__label__anger	anger_224	Hudson seems to be stuck on this.
__label__anger	anger_225	My bad...
__label__anger	anger_226	which is silly -- bad package encapsulation).
__label__anger	anger_227	My bad.
__label__anger	anger_228	"Oops, had a bad comparator in the TestCLI config."
__label__anger	anger_229	My bad.
__label__anger	anger_230	The food is very bad.
__label__anger	anger_231	"<gmcdonald> , my bad"
__label__anger	anger_232	My bad.
__label__anger	anger_233	My bad.
__label__anger	anger_234	Pull it back in if you think different.
__label__anger	anger_235	"Aaarrggh, how stupid of mine to have a System.out, again!"
__label__anger	anger_236	"Hell, UnaryFunction might even be faster than all of these calls in a row."
__label__anger	anger_237	I always get the same stupid error.
__label__anger	anger_238	Damn maven!
__label__anger	anger_239	"I don't care if everything is pretty or not, but we should at least support basic admin functionality in IE IMO (though I have not used it for years for just about anything)."
__label__anger	anger_240	I've looked at what can be done within the NSIS framework we use to build the Windows installer.
__label__anger	anger_241	"A feature with wrong functionality is as bad as, if not worse than, a bad performance."
__label__anger	anger_242	Doh!
__label__anger	anger_243	Doh.
__label__anger	anger_244	Sounds weird to me... Could you package a (totally!)
__label__anger	anger_245	Am I doing something stupid here?
__label__anger	anger_246	"* Replaced TreeMap with an Array of final 'Segment' objects ** (now very slightly faster than trunk) * Rebased for trunk * Removed the patch renaming SSTableReaderTest to SegmentedFileTest I didn't remove the builder pattern, because the alternative seems pretty ugly (copying the segments array for every append)."
__label__anger	anger_247	"HADOOP-2949: - If tarball is specified, HOD no longer validates for the pkgs directory in gridservice-hdfs or mapred sections as these are not going to be used anyway."
__label__anger	anger_248	It must be lost somewhere.
__label__anger	anger_249	Too bad we can't use position:fixed in IE6.
__label__anger	anger_250	I think the correct resolution is to ensure that the prefix stack mechanism gets reset each time the XMLReader is used.
__label__anger	anger_251	This is always a really bad way to design software.
__label__anger	anger_252	"It may suck, but at least *I* won't be the one bringing in a dumb dependency to a logging library."
__label__anger	anger_253	How on earth is it buggy?
__label__anger	anger_254	"I didn't do that because that seems bad in hive, so I returned ""null"" from the operation."
__label__anger	anger_255	This sucks.
__label__anger	anger_256	"They don't vote, they whine that something (or everything) sucks."
__label__anger	anger_257	Damn dyslexia!
__label__anger	anger_258	Damn it !
__label__anger	anger_259	Doing it at the hackathon you'd have a few fellas at your shoulder to give you pointers should you get stuck.
__label__anger	anger_260	"Ah, that was my bad."
__label__anger	anger_261	My bad.
__label__anger	anger_262	it's my bad.
__label__anger	anger_263	My bad!
__label__anger	anger_264	"Ah, too bad."
__label__anger	anger_265	"Damn, Chuck is scary."
__label__anger	anger_266	Here is quite bad.
__label__anger	anger_267	This name gets confusing with all of our prenamed *Worker* and *Master* classes.
__label__anger	anger_268	* release of the framework.
__label__anger	anger_269	I'm a pretty strong -0 on this.
__label__anger	anger_270	Not pretty.
__label__anger	anger_271	That's pretty unlikely.
__label__anger	anger_272	Pretty much everything that FSNamesystem (ie.
__label__anger	anger_273	Kind of sucks.
__label__anger	anger_274	Since this patch is so damn large already I won't be making anymore changes to this other than critical/blocker bug fixes.
__label__anger	anger_275	But please don't say that my reasoning is bad - because it is not.
__label__anger	anger_276	> We can't let fear of back-compat prevent us from making progress.
__label__anger	anger_277	I really don't care.
__label__anger	anger_278	I am planning to use this framework for some new RPCs I am adding.
__label__anger	anger_279	"Don't hate me, just throwing this out there."
__label__anger	anger_280	Weird.
__label__anger	anger_281	This is weird.
__label__anger	anger_282	Gav...(Hoping I'm not teaching you how to suck eggs :) )
__label__anger	anger_283	For those of us who don't care about ivy in fact lose something - a easy to build hbase.
__label__anger	anger_284	Where on earth are you anyway?
__label__anger	anger_285	My bad.
__label__anger	anger_286	"My bad, this is already done."
__label__anger	anger_287	That is bad.
__label__anger	anger_288	"Filling diags.log is bad mojo, since it's never rotated."
__label__anger	anger_289	How bad is it?
__label__anger	anger_290	My bad.
__label__anger	anger_291	My bad.
__label__anger	anger_292	Bad IE.
__label__anger	anger_293	Bad.
__label__anger	anger_294	Pull it back in if you think different.
__label__anger	anger_295	Stupid user error :)
__label__anger	anger_296	Weird.
__label__anger	anger_297	That's weird.
__label__anger	anger_298	"Actually I don't want to specify the encoding, because I don't care how the data is transported to me."
__label__anger	anger_299	"And boy, hell broke loose ;) So... the biggest issue I'm facing is indeed with Random sharing across threads."
__label__anger	anger_300	I don't care what we do as long as we don't change the attributes in JSP significantly.
__label__anger	anger_301	The Async API in http client 4.x really sucks.
__label__anger	anger_302	Forget the patch for the moment.
__label__anger	anger_303	I'll just put fix in under this issue.
__label__anger	anger_304	"Please forget last comment, it is incorrect."
__label__anger	anger_305	"umm ... call me crazy, but why are we making this public?"
__label__anger	anger_306	"[~cmccabe]: oh, hell no!"
__label__anger	anger_307	Damn...
__label__anger	anger_308	I'd say to hell with windows minority :)
__label__anger	anger_309	"Because, we don't care for this in cases where we there is no node that is down."
__label__anger	anger_310	"The eclipse ui was completly stuck, which was similiar to the other experinces."
__label__anger	anger_311	My bad.
__label__anger	anger_312	"Juhani..my bad, i was mistaken."
__label__anger	anger_313	My Bad.
__label__anger	anger_314	That's my bad.
__label__anger	anger_315	Seeking back is pretty inefficient in DFS.
__label__anger	anger_316	Doh!
__label__anger	anger_317	Hudson is stuck.
__label__anger	anger_318	Weird.
__label__anger	anger_319	Weird.
__label__anger	anger_320	That's weird.
__label__anger	anger_321	"If that would be the case, this would be bad design."
__label__anger	anger_322	This just seems really evil.
__label__anger	anger_323	"It may cause conflicts, but if your intent is to break system security, you probably don't care."
__label__anger	anger_324	"My bad, uploaded the wrong patch."
__label__anger	anger_325	I just hate having no clue what a file is really depending on ;)
__label__anger	anger_326	"Ah, damn, I thought it was fixed :/ Guillaume ?"
__label__anger	anger_327	"I abbreviated the heck out of my arguments and thinking, but damn it thats what I think :)"
__label__anger	anger_328	A stupid bug in a patch that is already applied.
__label__anger	anger_329	"In this case, data would pretty much just silently be lost."
__label__anger	anger_330	This whole thing is really pretty trivial.
__label__anger	anger_331	An output connector should also have a say in what URLs it will accept.
__label__anger	anger_332	"Turning off hints is basically intended as a ""oh shit, something is broken with hints, let's turn it off"" switch."
__label__anger	anger_333	"why on earth would it match anything, you have not even touched the Apache install."
__label__neutral	neutral_941	"Anyway, created a patch ..."
__label__neutral	neutral_942	"Ah, HA!"
__label__neutral	neutral_943	or a log message?
__label__neutral	neutral_944	Until there is a general mechanism Hbase should do something.
__label__neutral	neutral_945	but there is no such limitation in the consistent algorithm behind ZK.
__label__neutral	neutral_946	It will be taken care as part of HADOOP-7642.
__label__neutral	neutral_947	The contribution archive.
__label__surprise	surprise_4	What is convenient for the user to download two archives to run the project (or install maven)?
__label__neutral	neutral_948	+1 for the docs in the SRC though.
__label__neutral	neutral_949	"Okay Edward, you haven't understood how it works."
__label__neutral	neutral_950	Maybe you know it better when I show you some code.
__label__neutral	neutral_951	"If you want to have a binary sequencefile format, then do this."
__label__surprise	surprise_5	What if you want to change this binary format?
__label__neutral	neutral_952	Do you want to recreate every file on the whole planet?
__label__neutral	neutral_953	"You must take care about versioning then, and that is because we need a proxy between the inputformat and our vertex API."
__label__neutral	neutral_954	Contributed by Vinay.
__label__neutral	neutral_955	Previously we are mainly focus on trunk failures.
__label__neutral	neutral_956	"Yea, I think it would be worth distinguishing between the reasons."
__label__neutral	neutral_957	Gimme a few mins to clean this up properly.
__label__surprise	surprise_6	Is the -put command returning non-0 to indicate failure?
__label__surprise	surprise_7	Is it by mistake?
__label__neutral	neutral_958	We should be assigning atleast 50% of it's capacity.
__label__neutral	neutral_959	"pread I mentioned is FSInputStrea.read(long, buf, offset, len)."
__label__neutral	neutral_960	multiple pread invocations hitting contiguous byte ranges is quite tricky.
__label__neutral	neutral_961	I would have hopped that the URI(String) constructor would have decoded things properly (or encoded them as it happens to be here).
__label__neutral	neutral_962	Continue with stupid questions :) Who is sponsor and mentor of project?
__label__neutral	neutral_963	"So, who should create mail lists, bug databases, etc."
__label__neutral	neutral_964	"Fixed bug of <hr />, the siteinfo is always after the rest of the page now."
__label__neutral	neutral_965	batch transition to closed for remaining resolved bugs
__label__neutral	neutral_966	"Hi Vincent, I wasn't aware of that."
__label__neutral	neutral_967	"We are all different"" Crowd ""I'm not"" Dissenter Monty Python's Life of Brian"
__label__neutral	neutral_968	"Turns out that Ubuntu dropped 32 bit support for 'whatever' in 12.04 and now you need to run ""sudo apt-get install ia32-libs"" in order to get older executables to run."
__label__surprise	surprise_8	I wonder why not so many people use Linux?
__label__neutral	neutral_969	On 2009-06-08 19:22:03.496 kjian commented: Localization data error.
__label__neutral	neutral_970	On 2009-06-08 19:22:40.967 kjian commented: Localization issue.
__label__neutral	neutral_971	Will close this as a dup.
__label__neutral	neutral_972	"[rvollmar 3/27/07] There are two bugs that are causing backwards compatibility issues, and I think the emails we've been exchanging have confused them."
__label__neutral	neutral_973	"First, an attempt is made to convert * each argument."
__label__neutral	neutral_974	"It is better to express such things in Java, or in a query language that is designed for that."
__label__surprise	surprise_9	"Why would I want to use XML, when i can use the QBC API, or HQL (HQL can be embedded in the XML, remember), to express this stuff much more naturally?"
__label__neutral	neutral_975	"In addition, in the longterm we will all most likely be using annotations, and the ""fetch group"" notion does *not* work with annotations."
__label__neutral	neutral_976	"It's generally pretty straightforward, but extensibility is not quite clear."
__label__neutral	neutral_977	"I have changed one test to see what will happend if I set the pwdIdle to b > 0, and the test passes."
__label__neutral	neutral_978	What exactly is your configuration ?
__label__neutral	neutral_979	"The more I think about the issue, the more I find it critical."
__label__neutral	neutral_980	"If we remove an entry while someone is doing a search, the search will fail."
__label__neutral	neutral_981	"Also we have some problem during replication, just when we try to replicate some deletion, and it might prefectly explain why we get those issues."
__label__neutral	neutral_982	"(Ok, as expected ...) Waiting for a better log, when you will have installed a new server build from 1.0-trunks, then."
__label__neutral	neutral_983	"What you can do is trying this request with a different browser when the server is suppose to hang, and also try to do another request when the serveur is supposed to be hang to see if it's not a pb with the PDU length ( what I suspect is that when trying to decode this request, the decoder is waiting for more bytes so wait ad vitam aeternam ...) I gonna try to implement the decoding of this PDU as a test case just to check."
__label__neutral	neutral_984	"The search result entry requests does not return the correct DN, because it use the internal representation (byte[]) instead of using the user provided value, which contains escaped values."
__label__neutral	neutral_985	"Here, we have two options : 1) work with the internal value, but escape all the special chars 2) work with the stored UP value."
__label__neutral	neutral_986	"I think the bnest solution is (2), because the UP value is supposed to be valid - it has successfully been parsed when the first request arrived -."
__label__neutral	neutral_987	This will impact two parts : - searchResultEntry - all the response that contains a LdapResult and which returns a MatchedDN.
__label__neutral	neutral_988	"I already have a fix for the first request, but the question is : which version will integrate this modification ?"
__label__surprise	surprise_10	any suggestion ?
__label__neutral	neutral_989	"I just applied the patch, ran tests."
__label__neutral	neutral_990	Then you might switch filter chains to ?
__label__neutral	neutral_991	"However, I don't see any failures."
__label__love	love_557	Thanks!
__label__neutral	neutral_992	We need a proper JUnit test for this!
__label__joy	joy_122	I think we are very close too.
__label__surprise	surprise_11	Thanks for reviewing the patch Mamta!
__label__neutral	neutral_993	"I've been trying to test a patched build with ibm 1.5. on iseries, but have run into trouble: - OOM with suites.All."
__label__surprise __label__sadness	surprise_sadness_0	I've been running with -Xmx1024M -Xms1024M before and that worked in the past...Not sure what's going on now.
__label__neutral	neutral_994	A second run (with 2048M) only got worse (sooner) OOM behavior and after that I had trouble getting rid of my processes - apparent hang with derbyall:lang/wisconsin.java.
__label__neutral	neutral_995	"On rerun I let it go for 20 mins, but apart from the database getting booted (derby.log) nothing at all showed up in any of the output files (i.e."
__label__neutral	neutral_996	.tmp was empty).
__label__neutral	neutral_997	During the 10.5.1.1 test cycle this test took about 5 mins (and passed).
__label__neutral	neutral_998	"So, the original problem appears addressed (as I said, the 3 failing tests now pass), but I will investigate these behaviors, and run on another type of machine just to be safe."
__label__neutral	neutral_999	I think I prefer this approach.
__label__neutral	neutral_1000	I remember that rule for line breaking in Japanese was very different from that of English.
__label__neutral	neutral_1001	In English sentence there exists space between words and that space tells where the line can be breaked.
__label__neutral	neutral_1002	"However, Japanese sentence does not have such a useful space between words."
__label__neutral	neutral_1003	"As I knows, only punctuation tells where the line can *not* be breaked."
__label__neutral	neutral_1004	This may be well known problem in i18n in typography ....
__label__surprise	surprise_12	Can this be closed?
__label__neutral	neutral_1005	derbynetmats had no failures.
__label__neutral	neutral_1006	I too am concerned about the DRDA 255 byte character string limit.
__label__neutral	neutral_1007	You can close this out.
__label__neutral	neutral_1008	plz fix it properly till tomorrow Ort I'll close this for 0.4 again.
__label__surprise	surprise_13	What was the outcome of the discussion?
__label__neutral	neutral_1009	Afair we settled on not implementing this as logging is hell anyway and we do not like to introduce just another logging framework.
__label__neutral	neutral_1010	Also we would need to handle Serialisation which is _only_ implementable in a performant way if you know the underlying logging framework.
__label__sadness	sadness_124	"I almost forgot, as I received the email notification on the weekend."
__label__joy	joy_123	Holy crap that worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
__label__neutral	neutral_1011	I'll open one now so I don't forget.
__label__neutral	neutral_1012	Think you could make a failing test case and/or patch to show the behaviour?
__label__neutral	neutral_1013	But I could join them.
__label__neutral	neutral_1014	"For VMware, we noticed that there are several places requiring cleanup of staging storage object, which requires a generic approach to thoroughly fix them, and cannot make it in 4.2.0."
__label__neutral	neutral_1015	"OK, this solution sucks, and since people are relying on these scripts instead of using tools like ant, we need to give them the ability to upgrade these tools without having to create a new project."
__label__surprise	surprise_14	Any ideas?
__label__joy	joy_124	"I think SSTableDeletingTask is a good spot, I just wasn't sure if that would be appropriate."
__label__surprise	surprise_15	Why is it unsafe to share filter in SelectStatement for NQF?
__label__neutral	neutral_1016	Looks like you need to report this to the high-scale-lib project.
__label__joy	joy_125	Nice try :-) I was Mr I dont believe in magic from the very beginning.
__label__neutral	neutral_1017	I thought that there are some common cases like tail and head caching or exclusion of columns that could be implemented.
__label__neutral	neutral_1018	But never mind - maybe the proposed cache is all greatness.
__label__neutral	neutral_1019	So to prevent a rude awakening for some users it might be cool to provide some means (config or whatever) that works similar as the current version.
__label__neutral	neutral_1020	Or at least schedule this for a release which allows for a downgrade.
__label__neutral	neutral_1021	"Gotta show off the shinies first, of course."
__label__neutral	neutral_1022	So we convert Scanner back into an Iterator over a lazily fetched Slice subclass?
__label__neutral	neutral_1023	Disagree.
__label__neutral	neutral_1024	"For *all* this protocols/endpoints, Camel already offer consumers."
__label__neutral	neutral_1025	Closing all 1.6.0 issues
__label__neutral	neutral_1026	"I'm very, very keen on preserving backwards compatibility."
__label__neutral	neutral_1027	The Calculator sample now works with SimpleAxisServer.
__label__surprise	surprise_16	"Is there any documentation how to use axis2-wsdl2code-maven-plugin, with jibx binding, and how on hell you define xmlns:tns from you binding file"
__label__neutral	neutral_1028	Do you think you can make us a minimal test case which demonstrates the problem?
__label__neutral	neutral_1029	Please close AXIS-2271 if that patch is taken.
__label__joy	joy_126	Are we on the good path...
__label__love	love_558	hi Dan!!
__label__joy	joy_127	"Wow, sure!"
__label__neutral	neutral_1030	"This practice in general seems really confusing to me, this bug is refed in the 1.5.0 release notes tagged in svn."
__label__neutral	neutral_1031	I think all properties and permissions should be maintained.
__label__neutral	neutral_1032	"Well I'm not sure what was happening, but I just upgraded to Spring 1.2 final and this issue does not happen anymore."
__label__neutral	neutral_1033	It really *did* happen in an earlier version though....
__label__neutral	neutral_1034	I disagree.
__label__neutral	neutral_1035	The manual should provide sufficient insight into the important use cases.
__label__neutral	neutral_1036	People tend to review javadoc when things don't go as expected or are unclear.
__label__neutral	neutral_1037	"In my case, I wrote a custom filter, fucked around with the configuration getting it to work, which means you really have to get into it."
__label__neutral	neutral_1038	etc.
__label__sadness	sadness_125	"2,5 hours gone."
__label__neutral	neutral_1039	"I reviewed javadoc but, right or wrong, I didn't come across this."
__label__surprise	surprise_17	Google was also strangely quiet.
__label__sadness	sadness_126	"I'm new to Spring Integration, so forgive me for the stupid things I might say."
__label__neutral	neutral_1040	stupid autoresize option doesn't resize it correctly
__label__neutral	neutral_1041	) - it should be in AJDT in a couple of days.
__label__neutral	neutral_1042	I am sufficiently archaic as to have only a pre-ANSI-C K&R.
__label__neutral	neutral_1043	"You can put *expressions* separated by commas in a for, even back then: for (i=1, j=100; i<j; i++, j--) But I guess that the tweak to allow *declarations* there only has one."
__label__neutral	neutral_1044	I was surprised to see this issue still getting so much commentary.
__label__neutral	neutral_1045	"I'm going to jump back to Robert's initial pushback here: ""1."
__label__neutral	neutral_1046	"I understand job execution creation needs to be atomic, but I don't think it implies the whole logic around creating job execution must be handled by repository."
__label__neutral	neutral_1047	Using technical tricks like automatically appending parameters to create unique JobInstance makes alarm bell ring - we should not be trying to do clever arbitrary things in classes that form the foundation of the framework.
__label__neutral	neutral_1048	If job instance has a lifecycle that ends with first successful execution we should refuse to start the same job instance ever after.
__label__neutral	neutral_1049	"We described before that there are times that operators, for whatever reason, what's to restart a job with the same instance."
__label__surprise	surprise_18	It could be something as stupid as accidentally deleting the output file.
__label__neutral	neutral_1050	So it's like getting a new copy.
__label__neutral	neutral_1051	My bad.
__label__sadness	sadness_127	My apologies for the confusion.
__label__neutral	neutral_1052	Same goes for fontSize and fontWeight and other font styles.
__label__neutral	neutral_1053	"But on the other hand I also think, if the processor has to do this initialization activity (i.e."
__label__neutral	neutral_1054	"Yeah it helps, though I was more questioning whether there's not already a boolean that keeps track of this, but apparently not."
__label__neutral	neutral_1055	Seems a bit restrictive to me that using rich:comboBox with s:convertEntity only displays entity IDs in the combo.
__label__neutral	neutral_1056	"""rich:comboBox is not a select component by nature"" - so what is it then if it's not used for selecting stuff?"
__label__neutral	neutral_1057	Guys this defect is 5 years old now.
__label__neutral	neutral_1058	"If it's a regression, please open a new ticket."
__label__neutral	neutral_1059	"Yeah, I didn't mean to imply that setting a null value was the problem, which is why I changed my comment to denote the problem was actually in the federated connector."
__label__neutral	neutral_1060	It appears to be a simple cast to the wrong type (from a copy/paste error during coding).
__label__neutral	neutral_1061	I'll copy that into a LICENSE.txt file.
__label__love	love_559	Thanks.
__label__sadness	sadness_128	Sorry...
__label__neutral	neutral_1062	The instructions are fine.
__label__neutral	neutral_1063	Not sure how I got that all wrong.
__label__sadness	sadness_129	Sorry again.
__label__neutral	neutral_1064	Note to self: Always check for platform-dependent behavior!
__label__neutral	neutral_1065	"I've tested with Ruby 1.8, Ruby 1.9, JRuby, and even Rubinius, but all on Linux."
__label__neutral	neutral_1066	This lack of proper documentation on the standard Ruby API drives me mad.
__label__neutral	neutral_1067	Should this be raised to Ruby core folks to get the clarification?
__label__neutral	neutral_1068	Someone either needs to write a custom XSD and link it to the document or we need to disable validation for those examples pending another solution.
__label__neutral	neutral_1069	This request is unclear.
__label__neutral	neutral_1070	Why are you asking us for samples?
__label__neutral	neutral_1071	"I'm reopening the issue, and Graeme will attach a new key which should be an OpenSSH SSH2-DSA key hopefully."
__label__neutral	neutral_1072	Crossing fingers...
__label__love	love_560	Looking forward to your patch.
__label__neutral	neutral_1073	Nobody is able to tell what will happen here if something does not work.
__label__neutral	neutral_1074	Additionally... GroovyShell doesn't care about threading.
__label__neutral	neutral_1075	"And even if it would be, who makes sure that the context loader at the time the shell was created is the same as the context loader at the time the shell is used?"
__label__surprise	surprise_19	Can we even be sure that the thread is the same?
__label__neutral	neutral_1076	Logic like that has nothing to do with GroovyShell in my eyes.
__label__neutral	neutral_1077	"If a threaded management is needed, then a new class should be used, that ensures the conditions are fulfilled.... that is at last that the context loader is unchanged."
__label__neutral	neutral_1078	"I know, in your webapp this condition might be fulfilled, but GroovyShell is not special to web applications."
__label__neutral	neutral_1079	"GroovyClassLoader does not know Groovy classes, the parent *must* know them."
__label__neutral	neutral_1080	Because of that the default parent is the same loader as the loader that loaded the class GroovyShell - this loader knows the groovy classes.
__label__neutral	neutral_1081	Setting the context class loader would require a test if the context loader knows Groovy classes and if this class is the same as the expected loader... what do we do if that is not the case?
__label__surprise	surprise_20	Throw an exception?
__label__neutral	neutral_1082	"I don't want to put too much magic in the classloader structure, because it becomes messy as hell in an instant."
__label__neutral	neutral_1083	Maybe first see the results of the discussion at: http://www.nabble.com/Undocumenten-constraints---consistency-of-templates-td21863067.html
__label__love	love_561	Thanks for the info David.
__label__neutral	neutral_1084	I'll make that change and close the issue.
__label__surprise	surprise_21	Woo hoo!
__label__neutral	neutral_1085	Why attach the page?
__label__neutral	neutral_1086	"In other words, using the setGenerateImportedSchemas() setter or not obviously makes a difference, and given the fact that your main XML schema imports/includes the other one, I'd suggest that you change your code generation strategy."
__label__neutral	neutral_1087	That's basically all I am saying.
__label__neutral	neutral_1088	I know this is a closed issue but here goes anyway.
__label__neutral	neutral_1089	"First, there are some backwards compatibility concerns."
__label__neutral	neutral_1090	Clearly you don't understand the goals of Velocity or this is one hell of a humor piece.
__label__neutral	neutral_1091	Is this according to the spec?
__label__surprise	surprise_22	Do I miss something there?
__label__neutral	neutral_1092	"Of course, in the end, I'm not the one you need to convince, as I'm not a maintainer :)"
__label__neutral	neutral_1093	"The ci server does not close issue only comments on them, I closed this issue."
__label__neutral	neutral_1094	"This is a really cool idea, but I don't think this is going to make it into TRUNK before the 0.4 branch gets cut."
__label__sadness	sadness_130	Forgot ASF grant.
__label__neutral	neutral_1095	Duplicated here TAP5-1017
__label__sadness	sadness_131	It was my mistake.
__label__sadness	sadness_132	I'm sorry for making it confusing.
__label__neutral	neutral_1096	Fixed in nightly build 20020623.
__label__neutral	neutral_1097	The reason the tests weren't failing is because i was an idiot and hadn't configured the queryResultCache properly in the test configs.
__label__neutral	neutral_1098	"now that i've made the tests fail, i can finally start trying to figure out why the tests fail."
__label__neutral	neutral_1099	SOLR-5232: SolrCloud should distribute updates via streaming rather than buffering.
__label__neutral	neutral_1100	"Maybe instead of overlays, try configuring maven-war-plugin {{<packagingExcludes>}}: http://maven.apache.org/plugins/maven-war-plugin/examples/skinny-wars.html"
__label__surprise	surprise_23	I wonder if we could do some sort of auto-detect I'll poke -- getStream().mark()/reset() can probably work for XML/JSON but it may break things for javabin
__label__neutral	neutral_1101	"Erick, First of all, anyone upgrading should examine CHANGES.txt which would certainly have a note on this explicitly in the upgrading section of that document."
__label__neutral	neutral_1102	"Secondly, most point-release upgrades people do are ones in which the config stays the same."
__label__surprise	surprise_24	"Thirdly, the scenario you present in which someone copies a subset of their 3.5 schema would only error if that person ALSO chose to omit the defaultSearchField declaration -- but why would they do that?"
__label__neutral	neutral_1103	"Besides, I don't think there should be any expectation of ""it'll just work"" if you copy some arbitrary subset of an old schema into a new example config."
__label__neutral	neutral_1104	"If that's true, it'd be nice if we had a standard way to annotate such code so we can methodically remove the old stuff."
__label__neutral	neutral_1105	"""@deprecated"" isn't enough because it's just at the method/class level, not an internal if branch."
__label__neutral	neutral_1106	{quote} you lost me there ... they can use the exact same configs â€“ that's kind of the point: testing the exact example configs as we ship them (with <lib/> declarations that point at dirs which may or may not contain jars depending on what contribs are built; and request handler / response writer declarations configured that use lazyloading to dynamic load things as needed.
__label__neutral	neutral_1107	Ah - i jumped the gun on you.
__label__neutral	neutral_1108	This has been the history of Lucene and the thing about the project that I admired most - heavy hands where checked at the door.
__label__neutral	neutral_1109	"I'm no angel, and I'm not perfect about this myself."
__label__neutral	neutral_1110	But I still try and police it because I think its important.
__label__love	love_562	That is useful advice (call me biased if you'd like).
__label__sadness	sadness_133	"Honestly, there is no way around this issue - of course we must discuss and come to some solution regarding Lucene/Solr at this point."
__label__sadness	sadness_134	"In the past, I have enjoyed working with everyone here."
__label__neutral	neutral_1111	My personal beef in this issue is not with that though - I simply am very offended by heavy handed reverts and such.
__label__neutral	neutral_1112	I feel the same way about JIRA.
__label__neutral	neutral_1113	Words before action in my book - many words - hard as that can be for all of us sometimes.
__label__neutral	neutral_1114	explanation on SM-623
__label__neutral	neutral_1115	Should this issue be closed?
__label__surprise	surprise_25	Didn't we just do this a month ago?
__label__neutral	neutral_1116	"Thus, the case is closed as non-reproducible."
__label__neutral	neutral_1117	The included things (usually chars or tokens) in the span are represented here as an interval and the end point is excluded.
__label__neutral	neutral_1118	Have a look here: https://en.wikipedia.org/wiki/Interval_(mathematics)#Excluding_the_endpoints
__label__neutral	neutral_1119	"If the dictionary were created with the flag to true, then all entries would use a case sensitive comparison."
__label__neutral	neutral_1120	This JIRA will be closed.
__label__neutral	neutral_1121	I think this is the third one you created in the same day?
__label__love	love_563	"HI Anahita, Your patch tested successfully."
__label__surprise	surprise_26	"Hi Amardeep, Are we sure that this does not introduce any side effects, regressions?"
__label__neutral	neutral_1122	"Hi Jacques, The http*.jar are Release 4.0."
__label__neutral	neutral_1123	So now I have convert again all the head3 to h3 and now seams to me better.
__label__neutral	neutral_1124	"hi charlie, if you request this feature for myfaces-core (the jsf impl itself), you have to file the issue at https://issues.apache.org/jira/browse/MYFACES regards, gerhard"
__label__neutral	neutral_1125	A message is already logged.
__label__neutral	neutral_1126	Continue processing is the right way i think.
__label__neutral	neutral_1127	@ 1.
__label__surprise	surprise_27	It's a feature which seems to be enabled by default.
__label__neutral	neutral_1128	Its implemented in a normal release.
__label__neutral	neutral_1129	@2.
__label__neutral	neutral_1130	"That would be a improvement in trinidad, but that doesn't solve the core problem in MyFaces."
__label__neutral	neutral_1131	@3.
__label__neutral	neutral_1132	I will make the change for 2.2.
__label__neutral	neutral_1133	That's why I need to ask questions now when I want to understand the current logic (as it is not logical for me).
__label__neutral	neutral_1134	If I put my hands in the code to fix stuff myself I will probably introduce something that is illogical for you (e.g.
__label__neutral	neutral_1135	"the logical solution to me was to add the methods to the interface) so I guess I did the right thing opening this bug and asking for your opinion and I can't accept your ""for the sake of sweet Jesus"" in reply."
__label__neutral	neutral_1136	"In many ways, I think that the support for 3rd part performance and health monitoring is already there."
__label__sadness	sadness_135	My misunderstanding.
__label__neutral	neutral_1137	5% seems pretty low.
__label__neutral	neutral_1138	We can use a BlockingQueue to make the patch simpler
__label__neutral	neutral_1139	I think we should distinguish between the two
__label__joy	joy_128	I think this is pretty close to being ready.
__label__neutral	neutral_1140	{quote} viewColumn v.s.
__label__neutral	neutral_1141	{quote} Neither of these produce a copy.
__label__neutral	neutral_1142	it's not a merge setting and I think it's rather confusing today since we take the merge setting and use it for indexing.
__label__neutral	neutral_1143	More tomorrow.
__label__neutral	neutral_1144	"Same for the settings.xml with cleartext password (this caused my initial 401 problem, no way in hell im leaving such a thing around on my computer)."
__label__neutral	neutral_1145	Maybe ant could read the password like it does for GPG and handle this for us?
__label__neutral	neutral_1146	Thats why I think its good to keep them (of course as short and minimal as possible).
__label__neutral	neutral_1147	"I think if you use either LogDoc/ByteSizeMergePolicy, forceMerge also does what it says."
__label__joy	joy_129	It's great to see you've gotten the ball rolling Chris.
__label__neutral	neutral_1148	{quote} I fail to see why that is a bad thing if we're looking at the rare scenario of having to postpone the sorting decision to search time.
__label__neutral	neutral_1149	"If we're so bent on backcompat, I suggest deprecating one of these methods now and removing it in next major release."
__label__neutral	neutral_1150	"The patch also removes FreqProxMergeState, because we don't have to interleave posting lists from different threads anymore of course."
__label__neutral	neutral_1151	"The patch also removes FreqProxMergeState, because we don't have to interleave posting lists from different threads anymore of course."
__label__neutral	neutral_1152	"Easy to say we can come back to this, easy not to."
__label__neutral	neutral_1153	ConstantScoreQuery and FilterQuery need to AND the filters together.
__label__neutral	neutral_1154	It uses a parallel benchmark that roughly models what our real-life benchmark is like.
__label__joy	joy_130	I'll be happy to edit the wiki when I get this resolved!
__label__neutral	neutral_1155	"Too bad we don't have the power to do that... ;-) Here's what I think should be happening: Internally, absolutely everything should be handled UTF-8 for consistency's sake."
__label__neutral	neutral_1156	Nobody has any permissions unless explicitly granted.
__label__neutral	neutral_1157	"While I am not a spokesperson for my employer, by my assessment their interests are aligned with mine -- they sponsor my work, and as a consumer of the products that I contribute to, it would be bad for them if their investment were to be harmed."
__label__neutral	neutral_1158	and close this issue ?
__label__surprise	surprise_28	How should integer division work for decimals and floating point?
__label__neutral	neutral_1159	e.g.
__label__neutral	neutral_1160	should the following be true?
__label__neutral	neutral_1161	4.5 quotient 1.5 => 3 5.9 quotient 1.5 => 3
__label__neutral	neutral_1162	"OFFSET X LIMIT N (slice X _ (top (N ...) (...) )) that is, put a slice over the ""top"" and apply the top to N+X."
__label__neutral	neutral_1163	I will make the change.
__label__neutral	neutral_1164	I think I would be happy with a process where a weinre build is kicked off for every commit to master.
__label__neutral	neutral_1165	"Hi, Could u please change the moderator of this list to, Davanum Srinivas : dims@apache.org Chamikara"
__label__neutral	neutral_1166	"Okay, ""unfortunately"" nothing abnormal there."
__label__love	love_564	"Hi John, I would agree, using object notification is probably a cleaner way to do this."
__label__neutral	neutral_1167	"Otherwise, the constant will be converted to DOUBLE."
__label__neutral	neutral_1168	"{quote} Dear Azuryy Yu, This message acknowledges receipt of your ICLA, which has been filed in the Apache Software Foundation records."
__label__neutral	neutral_1169	Contributed by Ashish Singhi.
__label__neutral	neutral_1170	It will be taken care as part of HADOOP-7642.
__label__neutral	neutral_1171	I think the rename should follow the same pattern.
__label__neutral	neutral_1172	"If so, make the formatting same as it is for rest of codebase on commit?"
__label__sadness	sadness_136	Which API at the thrift client you are referring?
__label__neutral	neutral_1173	Neither is the rest of this.
__label__neutral	neutral_1174	I'll make an updated patch.
__label__neutral	neutral_1175	I think this is what caught me the first time I tried this
__label__neutral	neutral_1176	I'm going to close this out.
__label__neutral	neutral_1177	"Marvin, I've clogged these lists too often today, so I'll just say this to you."
__label__neutral	neutral_1178	Under copyright law there are several potential kinds of damages one can obtain for infringement.
__label__neutral	neutral_1179	The only forms of damage that make practical litigation sense in the FOSS world are *statutory damages* and *attorney's fees*.
__label__neutral	neutral_1180	"To obtain those kinds of damages, a copyright notice is required."
__label__neutral	neutral_1181	"(There are other requirements for these types of damages also, all described in 17 USC 401 et seq.) OTOH, if you want to waste your time proving *actual infringement damages* for free software, don't bother with a notice, but also don't bother trying to find an attorney to argue your case."
__label__neutral	neutral_1182	Forgot to close
__label__neutral	neutral_1183	I forgot to resolve this bug.
__label__neutral	neutral_1184	I think there is enough there to close the issue.
__label__neutral	neutral_1185	sigh.
__label__neutral	neutral_1186	CASE_SENSITIVE boolean=> TRUE 9.
__label__neutral	neutral_1187	"Ummm, did you forget to annex the patch Toby?"
__label__neutral	neutral_1188	You cannot load classes from a bundle after the framework shuts down.
__label__neutral	neutral_1189	"Of course, none that should really matter ."
__label__neutral	neutral_1190	Of course this means that I can't compile/build the code using AxisRC3.
__label__neutral	neutral_1191	"Clearly, one Visitor interface just can't satisfy everyone."
__label__neutral	neutral_1192	This is going to be a big performance hit.
__label__neutral	neutral_1193	Committing shortly.
__label__neutral	neutral_1194	Any objections to committing the security.rb part from the trunk patch to the 0.95 branch now?
__label__neutral	neutral_1195	Like skip.jar.loading= true once ---> Proposed behaviour.
__label__neutral	neutral_1196	Is not really needed I guess.
__label__neutral	neutral_1197	"Then, what's the story for code reuse for different flushers."
__label__neutral	neutral_1198	"""else { this.services.getAssignmentManager().assign(e.getKey(), true); }"" is called for another assignment."
__label__neutral	neutral_1199	OK.
__label__neutral	neutral_1200	It is ok for goog.requires to be missing.
__label__neutral	neutral_1201	It is not ok for the interface reference not be fully qualified.
__label__neutral	neutral_1202	"OK, done, added some more javadocs as well."
__label__neutral	neutral_1203	"), then I'm ok with that as well."
__label__neutral	neutral_1204	Ok.
__label__neutral	neutral_1205	OK to commit to 1.4.4
__label__neutral	neutral_1206	"Also, I find the name ""stillGoodJournals"" confusing, because when a journal was found to be bad, in the ""// do the sync"" block, it isn't removed from the ""stillGoodJournals"" list."
__label__neutral	neutral_1207	With balancer initialy at true: {code} hbase@node3:~/hbase-0.94.3$ bin/graceful_stop.sh --restart --reload --debug node6 Disabling balancer!
__label__neutral	neutral_1208	I just hope it does wait forever on sockets or anything stupid like that... but we'll see.
__label__neutral	neutral_1209	"Unrelated, should the PBImpls be moved from yarn-api to yarn-common (They're private anyway)."
__label__neutral	neutral_1210	"Unrelated, should ApplcaitionTokenIdentifer be renamed to something like AMTokenIdentifier ?"
__label__neutral	neutral_1211	This also seems pretty reproducible.
__label__neutral	neutral_1212	if (!jj_semLA || jj_3R_60()) return true; if (jj_3R_61()) return true; return false; } The simple fix could be to wrap the lookingAhead assignment after the call within finally block.
__label__neutral	neutral_1213	The true usages are found in calls to executeSubstatement now.
__label__neutral	neutral_1214	"But, even if it wasn't it would be totally worthless where it is at."
__label__neutral	neutral_1215	@filipe I forgot the case where includes are in include/js (or mozjs).
__label__neutral	neutral_1216	"audit warning seems to be due to ""hadoop-hdfs-project/hadoop-hdfs-httpfs/dev-support/findbugsExcludeFile.xml"" javadoc warnings also seem to be unrelated."
__label__neutral	neutral_1217	"But, if the expression isgraph(wctob(wc)) evaluates to true (which cannot occur for wc == L' ' of course), then either iswgraph(wc) or iswprint(wc) && iswspace(wc) is true, but not both."
__label__neutral	neutral_1218	"If that's not true, then you can pretty much ignore everything in this particular comment..."
__label__neutral	neutral_1219	It just depends upon how smart the plug in framework and the actual plug in is.
__label__neutral	neutral_1220	"Plus, of course you don't have to hardcode the name of the jarfile."
__label__neutral	neutral_1221	"Currently, we just assume it might be a laggard and thus isSlowTracker() will return true."
__label__neutral	neutral_1222	Rajith: This is actually not true.
__label__neutral	neutral_1223	@ Thomas Your framework is available?
__label__neutral	neutral_1224	The latest patch for SimpleURIResolver and resolver framework.
__label__neutral	neutral_1225	"Matt, what's the cut-off date for providing a patch?"
__label__neutral	neutral_1226	"br, Matt"
__label__neutral	neutral_1227	*.. info.ftl might have confused you :) Divesh
__label__neutral	neutral_1228	> I'm confused.
__label__neutral	neutral_1229	Pretty fancy.
__label__neutral	neutral_1230	"Though it is still a possibility, it is pretty corner-case."
__label__neutral	neutral_1231	I think there were a mistake.
__label__neutral	neutral_1232	Of course this is debatable.
__label__neutral	neutral_1233	"Of course, I have en_US for my locale."
__label__neutral	neutral_1234	For testing purposes of course...
__label__neutral	neutral_1235	True enough....
__label__neutral	neutral_1236	"This is also true for ""ACCT"", ""MLSD"", ""OPTS"" and ""REIN"""
__label__neutral	neutral_1237	That is not true.
__label__neutral	neutral_1238	Default is true.
__label__neutral	neutral_1239	"Therefore Visa.matches() will now return ""true"" for Mastercards, too."
__label__neutral	neutral_1240	"Yes, that's true."
__label__neutral	neutral_1241	True.
__label__neutral	neutral_1242	Definitely true!
__label__neutral	neutral_1243	Pull it back in if you think different.
__label__neutral	neutral_1244	But that's of course completely unrelated to your patch.
__label__neutral	neutral_1245	duplication of such a small amount of trivial code is far less evil than yet another dependency.
__label__neutral	neutral_1246	"This might be a stupid comment but shouldn't ""keyDerivationeterceptor"" be ""keyDerivationInterceptor""?"
__label__neutral	neutral_1247	HttpClient stock code is JDK 1.2 compatible (hell 1.2 is old).
__label__neutral	neutral_1248	The first step is of course selling us through our site.
__label__neutral	neutral_1249	"Brandon's pretty confident, but I'd rather not cram it into a minor release just in case there's something we missed."
__label__neutral	neutral_1250	"I encounter the same NullPointerException in the 4.1.0 source code release, but currently I don't have a git 4.1 environment to verify it."
__label__neutral	neutral_1251	"Matt, are you still working on this?"
__label__neutral	neutral_1252	"But in any case, please keep things simple and stupid :)"
__label__neutral	neutral_1253	"James, I think it is time to do some of the tasks that you have outlined and I'm willing to do the work."
__label__neutral	neutral_1254	I'm fairly convinced that signing is the only way to go without turning the knobs so far up that the AM is pretty useless (no images!
__label__neutral	neutral_1255	Start an app with all network connections off and try to do a console.log(navigator.onLine) and it will return true.
__label__neutral	neutral_1256	Please do not forget about adding the ASL header to all new classes.
__label__neutral	neutral_1257	Matt
__label__neutral	neutral_1258	Matt
__label__neutral	neutral_1259	I will take this into account of course.
__label__neutral	neutral_1260	Ah of course.
__label__neutral	neutral_1261	"Are there other parts of your app that interact with or manipulate the ""course"" bean or its ""labKits"" collection?"
__label__neutral	neutral_1262	"The name for all of them was thus pretty obvious, except for engine.evaluate(...) and #evaluate(...)."
__label__neutral	neutral_1263	Must have been confused.
__label__neutral	neutral_1264	"Of course, that would be a separate bug..."
__label__neutral	neutral_1265	"Of course, I meant 2.1.8 beta, not 2.1.8 dev."
__label__neutral	neutral_1266	This seems backward to me (but of course I'm no expert in this area).
__label__neutral	neutral_1267	Specially the framework.
__label__neutral	neutral_1268	"This may fit for Pregel, but not for our Framework, since our communication is much more expensive."
__label__neutral	neutral_1269	"Patch is pretty trivial, but gives +15% on MT/SerialBench on 2-core Core2."
__label__neutral	neutral_1270	"OK, works for me."
__label__neutral	neutral_1271	Please re-open if I'm confused.
__label__neutral	neutral_1272	I must admit I'm a little confused by this one.
__label__neutral	neutral_1273	You mixing fd and HostComparator confused me.
__label__neutral	neutral_1274	Otherwise the HTable and the HConnection will get very confused.
__label__neutral	neutral_1275	"Of course, there is no NotNullException."
__label__neutral	neutral_1276	"of course, it could be built on the fly..."
__label__neutral	neutral_1277	"Of course, this only applies if someone where to finish 831 and it where accepted..."
__label__neutral	neutral_1278	"Of course if you're writing your own serializer, it's your responsiblity to deal with this appropriately."
__label__neutral	neutral_1279	After a while that .api package will get pretty crowded too.
__label__neutral	neutral_1280	I will post a new patch pretty soon.
__label__neutral	neutral_1281	Framework translations in rev 701679.
__label__neutral	neutral_1282	How about a slightly different take?
__label__neutral	neutral_1283	Damn copy/paste programming.
__label__neutral	neutral_1284	Pretty impressive.
__label__neutral	neutral_1285	"If so, that's a pretty bad admin experience."
__label__neutral	neutral_1286	It seems pretty reliable.
__label__neutral	neutral_1287	"I think the ability to hotswap a valve or even an entire pipeline, real-time is pretty damn kewl!"
__label__neutral	neutral_1288	"Well, your static analysis seems pretty persuasive to me."
__label__neutral	neutral_1289	What mocking framework should be used for the webui?
__label__neutral	neutral_1290	The framework is incomplete without it.
__label__neutral	neutral_1291	"In revision 1064741, the framework is functional and activated for the enhancer."
__label__neutral	neutral_1292	"At least it was intuitive for me, and I am pretty new to all this."
__label__neutral	neutral_1293	Is there a way to stop the hbase with the regionserver dead?
__label__neutral	neutral_1294	"If I am not wrong, the follower that is stuck never accepts the leadership of the Leader in the ensemble, because it is an established ensemble and it sees no quorum in it."
__label__neutral	neutral_1295	The 0.95 branch is dead and defunct.
__label__neutral	neutral_1296	"I'm assuming it's bytes since the variables are named 'buf', as opposed to the 'str' names used in the protocol APIs, but want to double-check."
__label__neutral	neutral_1297	But I didn't get any memory errors.
__label__neutral	neutral_1298	It was confusing for me too.
__label__neutral	neutral_1299	Hmmm... confusing.
__label__neutral	neutral_1300	"Doing things based on an organizationPartyId associated with the user is BAD BAD BAD, and basically kills the multi-organization support in OFBiz."
__label__neutral	neutral_1301	I deleted the original attached files because they contain company informations that I'm not allowed to disclose.
__label__neutral	neutral_1302	So I'm totally +1 for the HBASE-8723 patch.
__label__neutral	neutral_1303	The verification of state over in timeout monitor before acting is another aspect?
__label__neutral	neutral_1304	The number of failed tests is pretty high compared to last time's performance (67 bad vs 3 last time).
__label__neutral	neutral_1305	Too late I'm away to bed and have lost concentration.
__label__neutral	neutral_1306	Converting to a double[ ] is where the precision is lost.
__label__neutral	neutral_1307	"And PayloadTermQuery lost an ""if (includeSpanScore)""?"
__label__neutral	neutral_1308	I'll have to bisect the revision since when it is broken and this could take some time.
__label__neutral	neutral_1309	The CDE is using the base UIMA framework to get the metadata.
__label__neutral	neutral_1310	"However I'd be interested if later, this functionality can also be used by ServiceMix, i.e."
__label__neutral	neutral_1311	It's named .gitignore which may be confusing.
__label__neutral	neutral_1312	The original replica of RUR may in finalized state.
__label__neutral	neutral_1313	I just noticed that!)
__label__neutral	neutral_1314	"volatile prevents the variables from being cached in the registers and creates a memory barrier, so that's not that surprising to see an impact on the performances."
__label__neutral	neutral_1315	The Felix framework does not support exporting/importing the default package.
__label__neutral	neutral_1316	Yep my bad too - I didn't look and was just guessing at what the problem was.
__label__neutral	neutral_1317	"- the computedHashCode() didn't use the a single ""qualifier"", now it does."
__label__neutral	neutral_1318	"Even during the full-blown ""validation"" of the descriptors (done just before ""saving""), the CDE is invoking the base UIMA framework in special mode to prevent instantiation."
__label__neutral	neutral_1319	Move startTime from DecommingStatus to DatanodeDescriptor so startTime could be used to represent either decommissioning or dead start time; 2.
__label__neutral	neutral_1320	"once this error occurs, the route cannot be used any more."
__label__neutral	neutral_1321	However controller passing live brokers minus shutting down brokers as live leaders in the LeaderAndIsrRequest sounds like a premature optimization and a bug.
__label__neutral	neutral_1322	The memory stream transformation core-dump was the same case (rb_tree - erase).
__label__neutral	neutral_1323	"However, the statement still performs a full scan of SUMMA_RECORDS, which sounds sub-optimal."
__label__neutral	neutral_1324	> Actually I just noticed something when trying to commit.
__label__neutral	neutral_1325	Wicket 6 now features an experimental module that integrates the Atmosphere framework (wicket-atmosphere).
__label__neutral	neutral_1326	Then the algorithm gets lost as it did not expect this discontinuity.
__label__neutral	neutral_1327	A single table could be made up of many thousands even hundreds of thousands of regions?
__label__neutral	neutral_1328	"bq.In order to maintain different states at which we are in while creating table should we go for a special node under the table znode or can we add new states to the existing table states like (DISABLING, ENABLING, DISABLED etc) IMO go with separate node."
__label__neutral	neutral_1329	Some further bug tracing shows that pdfbox' RandomAccessBuffer is responsible for the Out of Memory error.
__label__neutral	neutral_1330	#2 wontbe so bad... filters are pretty deep and will be just as efficient as hacking scan query Matcher I think.
__label__neutral	neutral_1331	"Maybe you want to do shuffle in this way: Firstly, copying remote map outputs and store the shuffled segments into memory as usual."
__label__neutral	neutral_1332	The outer read can continue for a much longer period of time.
__label__neutral	neutral_1333	"The fix is only disabled on releases prior to 10.8.2, on the assumption that the fix gets into the upcoming 10.8.2 release."
__label__neutral	neutral_1334	Note that I wouldn't be totally opposed on adding additional support for the dot notation on inserts (provided all fields are indeed given) for symmetry/convenience.
__label__neutral	neutral_1335	I don't know that there's an alternative that would be less invasive than reverse logical time.
__label__neutral	neutral_1336	"I don't quite see why the attached implementation would do more heap operations, but I agree that it could be slower due to lengthier/more complex loops, a few more if statements etc."
__label__neutral	neutral_1337	So what this patch does is totally revamps the makefiles for erlang.
__label__neutral	neutral_1338	"If I get to this first I will make the ""frameworks"" fix as well."
__label__neutral	neutral_1339	Show time since declared as dead on the deadnode web UI.
__label__neutral	neutral_1340	just after the event) is the opposite of the sign just before the event.
__label__neutral	neutral_1341	The times will be grep'ed and used for inspection in Excel.
__label__neutral	neutral_1342	"Unfortunately, the xml parser in use is event based, in the wrong direction(push instead of pull), so the bulk of the change is flipping that around."
__label__neutral	neutral_1343	"2) The ZKVersion used in the <topic,region> map is used to guard against the case different hub-server use the map at the same time (or interleaved)."
__label__neutral	neutral_1344	"html/ext/HtmlInputHiddenTag.java is pretty simple, all of the functionality is in its base class."
__label__neutral	neutral_1345	"Do you have a different desired text change, or is it dead?"
__label__neutral	neutral_1346	"gcc 4.3.1 is out since June 2008, so the workaround is no longer needed."
__label__neutral	neutral_1347	"The KahaDBStore.getDestinations() method looks as though it would be pretty heavy, performance wise."
__label__neutral	neutral_1348	"Tag is documented and demo'd, but does need a Facelets tag."
__label__neutral	neutral_1349	I would rather state that most Java libraries *do* care about Maven.
__label__neutral	neutral_1350	"Shouldn't it have looked at fstime across the directories, seen dir2's higher fstime, and used that one?"
__label__neutral	neutral_1351	> The modified test (below) gets stuck in an infinite loop Your test is buggy.
__label__neutral	neutral_1352	I have tried using Snappy{Input/Output}Stream and they don't work (it just throws EOFException in the middle of the transfer) and causes stream to retry.
__label__neutral	neutral_1353	this is IMO a regression since i am pretty sure it used to throw an InvalidItemStateException in the past.
__label__neutral	neutral_1354	I'll take a look at where the framework should call it.
__label__neutral	neutral_1355	"Similarly, one can use the overview of FD:OCA below and the introductory section of its respective volume and only ** refer to the details of the FD:OCA constructs as needed during implementation."""
__label__neutral	neutral_1356	Didn't see the selector the first time round.
__label__neutral	neutral_1357	This is pretty interesting.
__label__neutral	neutral_1358	Doh!
__label__neutral	neutral_1359	We do not use a framework.
__label__neutral	neutral_1360	doh fixed braces
__label__neutral	neutral_1361	I will appreciate if anyone knows of a way of doing that in junit framework.
__label__neutral	neutral_1362	"If you are stuck with solr 4.0 alpha, here's a patch which may work."
__label__neutral	neutral_1363	This patch also adds the new resource emulation framework to GridMix.
__label__neutral	neutral_1364	We need verify all the links and buttons in console to ensure the fix.
__label__neutral	neutral_1365	"avro-mapred -- we might end up with avro-mapreduce as well for the newer api, so I stuck with the package name of the hadoop api."
__label__neutral	neutral_1366	Sounds reasonable.
__label__neutral	neutral_1367	This sounds reasonable to me.
__label__neutral	neutral_1368	Content-wise the only part that stuck out to me was the inclusion of the many exceptions that users will never see.
__label__neutral	neutral_1369	"It's unfortunate that there's a lot of code duplication, but it might be best that way."
__label__neutral	neutral_1370	Sounds reasonable to me given it's a standalone (debug) utility.
__label__neutral	neutral_1371	"It is a little weird since the multi-core aspect would only be usable programatically, but that will make it possible to easily bat around a 'core manager' and http design."
__label__neutral	neutral_1372	Can't be avoided though given what is going on here.
__label__neutral	neutral_1373	Pretty much the same stack trace.
__label__neutral	neutral_1374	I don't want to pull the whole patch though.
__label__neutral	neutral_1375	"However, the NPE in the framework is still an issue even if it happens when there is a ""user error""."
__label__neutral	neutral_1376	"Moreover, there must be something going wrong in relation to the SPO index, an exception is thrown: ERROR **** Not the root: 11264 com.hp.hpl.jena.tdb.index.bplustree.BPTreeException at com.hp.hpl.jena.tdb.index.bplustree.BPlusTreeRewriter.packIntoBPlusTree(BPlusTreeRewriter.java:78) at com.hp.hpl.jena.tdb.store.bulkloader2.CmdTDBLoader2.createBPlusTreeIndex(CmdTDBLoader2.java:224) at com.hp.hpl.jena.tdb.store.bulkloader2.CmdTDBLoader2.exec(CmdTDBLoader2.java:166) at arq.cmdline.CmdMain.mainMethod(CmdMain.java:85) at arq.cmdline.CmdMain.mainRun(CmdMain.java:47) at arq.cmdline.CmdMain.mainRun(CmdMain.java:34) at com.hp.hpl.jena.tdb.store.bulkloader2.CmdTDBLoader2.main(CmdTDBLoader2.java:95) I don't see why, at the moment."
__label__neutral	neutral_1377	Back-compat Lucene-style and agile design aren't something that marries well.
__label__neutral	neutral_1378	We are currently stuck with this issue?
__label__neutral	neutral_1379	Specifically the existing framework only lets us plug-in custom compress/decompress 'streams' (e.g.
__label__neutral	neutral_1380	"If you really don't want such a link, you could always hide it with CSS."
__label__neutral	neutral_1381	DROP INDEX <INDEX_NAME> making this the only option right now would suck because we don't auto-generate an index name when none is provided.
__label__neutral	neutral_1382	"There are just too many checks there, that Click is not using, and we can't just use them all (many don't make sense to Click at all) :)."
__label__neutral	neutral_1383	"I'm not against fixing the CS, I just want to ensure we do the 'right' fix."
__label__neutral	neutral_1384	"That's why, I'm going to use easymock as SMSC simulator."
__label__neutral	neutral_1385	Downgrading this as it is probably user error (rather than an explicit bug in the framework).
__label__neutral	neutral_1386	This was fixed Cassandra-side for 2.0 in CASSANDRA-5702 but the fix was pretty heavyweight and backporting to 1.2.x is not an option.
__label__neutral	neutral_1387	#NAME?
__label__neutral	neutral_1388	Nothing stops a slightly evil user to use a NoLock to wreak havoc in the index.
__label__neutral	neutral_1389	I pretty much have this working.
__label__neutral	neutral_1390	"Please use git diff to generate patch, because I can't easily apply git patch on a svn tree."
__label__neutral	neutral_1391	Does that sound like a reasonable plan going forward?
__label__neutral	neutral_1392	"I won't intrude on the design discussion, sounds good."
__label__neutral	neutral_1393	It can't have been this way always?
__label__neutral	neutral_1394	Fixed using the new injection framework and xwork configuration design.
__label__neutral	neutral_1395	"Patrick, I can't manage to reproduce this error."
__label__neutral	neutral_1396	"Otherwise we would be storing the bytes-per-checksum field but not actually using it, which would be really confusing."
__label__neutral	neutral_1397	if it gets started at all.
__label__neutral	neutral_1398	"[~jbellis] The weird thing is that although *newSSTables.size() != newSSTablesSize* the assertion doesn't actually cause an error, so no stack trace, but swapping the assertion (as shown below) yields the stack trace below."
__label__neutral	neutral_1399	J-D gave my patch a review and said fine except for some line-lengths which I've fixed.
__label__neutral	neutral_1400	"To be quite blunt guys, your log4net logger methods smell bad."
__label__neutral	neutral_1401	We've been passing builds pretty regular now so if this a problem it should start showing prominently.
__label__neutral	neutral_1402	You just need to remember to put the expected first in the assertion or it gets confusing
__label__neutral	neutral_1403	"That can't be expressed with a static suffix, but it's easily expressed with a regex."
__label__neutral	neutral_1404	I'm not sure this can't be achieved without messing with IR/W guts so much.
__label__neutral	neutral_1405	"2.8.0 is no longer supported so even if there is a bug, it won't be fixed in 2.x.y release series."
__label__neutral	neutral_1406	"In TestCliDriver, create_view.q and udaf_percentile_approx.q are two weird queries."
__label__neutral	neutral_1407	By passing in the section name {{null}} the content of the global section can be retrieved.
__label__neutral	neutral_1408	"I would have checked it in directly, but there were some aspects that I didn't care for but couldn't seem to get around."
__label__neutral	neutral_1409	Submit a patch and I'll play with it.
__label__neutral	neutral_1410	Please play around with it.
__label__neutral	neutral_1411	But I'd have to play with it some to see for certain.
__label__neutral	neutral_1412	"This is to say, that we've a pretty good coverage of IDC ""keyref"" use cases."
__label__neutral	neutral_1413	After moving it to a local disk I can't reproduce it anymore.
__label__neutral	neutral_1414	click the subversion commits tab.
__label__neutral	neutral_1415	I just realized I never really explained the original problem that led me to making these fixes.
__label__neutral	neutral_1416	So this is by design.
__label__neutral	neutral_1417	We can borrow some design techniques etc.
__label__neutral	neutral_1418	+1 For this new design.
__label__neutral	neutral_1419	"I don't know what Lucene's position is on Maven, but am interested pursuing whatever makes sense."
__label__neutral	neutral_1420	"Marcus, that sounds sensible."
__label__neutral	neutral_1421	I think MINA is more of a 'server framework' rather than an 'NIO framework'.. it is so close to being both.
__label__neutral	neutral_1422	"Perhaps this should be item #0, decide whether we want to work with Maven or Gradle."
__label__neutral	neutral_1423	All other log frameworks do this)
__label__neutral	neutral_1424	Is there a way to fetch a pull request?
__label__neutral	neutral_1425	Please pull it up to the release branch.Thank you!
__label__neutral	neutral_1426	Will pull that into the 2.0.4-alpha branch.
__label__neutral	neutral_1427	Maybe something silly is going one.
__label__neutral	neutral_1428	"For the first part, I got stuck on two points."
__label__neutral	neutral_1429	You really shouldn't call one without the other.
__label__neutral	neutral_1430	"filtering hooked up through Solr already and it would be dead simple to bring in here, too, but it would fit nicely in this framework."
__label__neutral	neutral_1431	Every framework will benefit from that!
__label__neutral	neutral_1432	"* Framework for JMS, db access can be reused."
__label__neutral	neutral_1433	:org.osgi.compendium-1.0.1artifact and felix-1.0.4 framework
__label__neutral	neutral_1434	CFS.gRS is a pretty thin layer over RowIterator.
__label__neutral	neutral_1435	this pretty much explains the three imports.
__label__neutral	neutral_1436	It is pretty close to what you are proposing.
__label__neutral	neutral_1437	Oh and not to forget.
__label__neutral	neutral_1438	Jerermy is the sole subscriber/moderator and can take care of adding other subs.
__label__neutral	neutral_1439	Pretty much every deserialization error shows up as an IOException.
__label__neutral	neutral_1440	"Are you planning on doing this (or already have done this), or would you like me to do it?"
__label__neutral	neutral_1441	"Doug, you defined: +public interface NamenodeProtocols + extends ClientProtocol, + DatanodeProtocol, + NamenodeProtocol, + RefreshAuthorizationPolicyProtocol, + RefreshUserToGroupMappingsProtocol { ...} Will this prevent us from putting the DatanodeProtocol in a different port?"
__label__neutral	neutral_1442	But would there be other cases that the writer stuck for different reasons?
__label__neutral	neutral_1443	"However, given the factored out code is pretty trivial I decided to duplicate it in favour of not adding another set of classes along with the additional complexity introduced (e.g."
__label__neutral	neutral_1444	"There is a single directory, ~apbackup/remotelybackedup, and anything symlinked to there gets backed up, as documented in the README."
__label__neutral	neutral_1445	"Jeremy, are you still planning to take a stab at this?"
__label__neutral	neutral_1446	"Nothing gets broken, but we have one more step towards framework independence."
__label__neutral	neutral_1447	We won't find the same group in a different segment.
__label__neutral	neutral_1448	Will commit in a few days (to the heavy committing branch) if no one objects.
__label__neutral	neutral_1449	This patch takes care of the nocommits in the previous patch.
__label__neutral	neutral_1450	I'll take care of this.
__label__neutral	neutral_1451	is anybody taking care of this?
__label__neutral	neutral_1452	There's a TODO which I'll take care of before merging to 4x (there are other renames too).
__label__neutral	neutral_1453	That would take care of most cases.
__label__neutral	neutral_1454	"Yet, now one must care for the relative ordering in between both icons, too."
__label__neutral	neutral_1455	And it also will add a lot of complexity to the framework development/maintenance.
__label__neutral	neutral_1456	Adding a different patch.
__label__neutral	neutral_1457	"However, if the implementation of next is not capable of handling bad records, then it is most likely going to throw an exception, and, the proposal in this jira for handling bad input starts with that assumption."
__label__neutral	neutral_1458	I imagine that if 7-Zip can do this decryption then the encryption mechanism I seek is not forbidden by licensing restrictions.
__label__neutral	neutral_1459	"Also, I won't give you a patch next time, but just the whole new TestTransSystem."
__label__neutral	neutral_1460	"That said, I had to do something similar in configurators, and I did this by adding wrappers to the getInitParameter."
__label__neutral	neutral_1461	"Therefore, it can no longer be used."
__label__neutral	neutral_1462	We have different disk sizes on our DNs.
__label__neutral	neutral_1463	I don't have a problem with a non-component directory in the framework.
__label__neutral	neutral_1464	Patch that changes progress computation to use position in input stream.
__label__neutral	neutral_1465	"I do have a patch, but unfortunately I am not a position to sign the CLA."
__label__neutral	neutral_1466	The same exception happens the I forget to sign my jars.
__label__neutral	neutral_1467	The squeeky wheel gets oiled!
__label__neutral	neutral_1468	This is where the bus gets over lapped.
__label__neutral	neutral_1469	OK The problem is that the o.a.f.bundlerepository doesn't cares about R3 or R4 bundles.
__label__neutral	neutral_1470	"Somehow I forget to move that from SOLR-2524, but it is in the updated patch now."
__label__neutral	neutral_1471	"Closest example that I can recall were questions about ""The Software shall be used for Good, not Evil"" clause from the JSON License."
__label__neutral	neutral_1472	I am planning on doing a round-robin assignment for each partition.
__label__neutral	neutral_1473	"all the key and column name comparisons should be case insensitive (and we force keyAlias to be ascii, so you don't need to worry about it being some weird bytes stuff)."
__label__neutral	neutral_1474	"@Paul Forget the previous patch, it added unneeded complexity for parsing and dealing with multivalue (line) ini file config parameters."
__label__neutral	neutral_1475	Fixed by updating to the new frameworks bridge 1.0.1-dev.
__label__neutral	neutral_1476	"{noformat} set-net-2.0-framework-configuration: [property] Target framework changed to ""Microsoft .NET Framework 2.0""."
__label__neutral	neutral_1477	USE WITH CARE!
__label__neutral	neutral_1478	Beware all ye who venture here: the sea of XSLT is deep and wide and unforgiving.
__label__neutral	neutral_1479	:) > except at much worse performance.
__label__neutral	neutral_1480	What's weird is that this class is in Cocoon's normal classpath.
__label__neutral	neutral_1481	* This is needed since the MappingTool fails if it gets non-persistent capable classes.
__label__neutral	neutral_1482	This might fix broken hudson on trunk
__label__neutral	neutral_1483	Adding directories to removedStorageDirs in original patch is already in branch-1.
__label__neutral	neutral_1484	The source of this problem is master and slave allowing frameworks to register with IDs already used by completed frameworks.
__label__neutral	neutral_1485	"This is introduced by API performance refactoring, the intent is to generate the same response object for both listxxx api and other apis related to the same entity."
__label__neutral	neutral_1486	There may perhaps be some way to use Windows file-locking as a signalling mechanism here.
__label__neutral	neutral_1487	"Alternatively, we could build a variation avro-ipc.jar that shades in avro.jar that could be the smallest unit for OSGi."
__label__neutral	neutral_1488	"Actually, let's just fix the issue you discovered here."
__label__neutral	neutral_1489	we don't have an agreement that it should be active
__label__neutral	neutral_1490	I'm just throwing it out there.
__label__neutral	neutral_1491	"I agree with Sami that this should be contributed to Tika and that we delegate the language identification handling in Nutch to Tika, just as we are doing or planning to for the MimeType and the parsing"
__label__neutral	neutral_1492	Also I looked at first corrupted database that I posted and found the corruption in the index TEST1_IDX_INDCOL2.
__label__neutral	neutral_1493	I could not find any documented limits but if I missed them somewhere I will gladly put them in.
__label__neutral	neutral_1494	"However, I doubt that the same is true for MapContext because it is just a wrapper around a HashMap."
__label__neutral	neutral_1495	"There is no RPC stuck but a lot of ""Connection reset by peer""."
__label__neutral	neutral_1496	"With hampered performance of sstableloader after 1.0, its made the things very difficult for us."
__label__neutral	neutral_1497	I have retested it and I figured out that I have posted the wrong parameters in the bug description.
__label__neutral	neutral_1498	I fixed some bad markup in r1392857 but I can see the error afterwards on the neko stuff.
__label__neutral	neutral_1499	The thing about backwards-compatibility hacks is you tend to get stuck with them.
__label__neutral	neutral_1500	This is part of making Oak OSGi-friendly
__label__neutral	neutral_1501	"However, I'm not a lawyer."
__label__neutral	neutral_1502	It seems to be adding new 'functionality' to coprocessors.
__label__neutral	neutral_1503	Adding sleeps solves it.
__label__neutral	neutral_1504	We're adding endpoint as a new datatype?
__label__neutral	neutral_1505	"Not ideal, but not too bad ;)"
__label__neutral	neutral_1506	"Trunk for patch, pretty much."
__label__neutral	neutral_1507	That'll be pretty awesome to have for 0.6.0
__label__neutral	neutral_1508	+/** + * This class is a refactoring wrapper around the shared + * JDBC40Translation class.
__label__neutral	neutral_1509	Also I'm slightly confused by your description because in section 5.8 of the spec it says that members of code_handler_class_RCN can be null.
__label__neutral	neutral_1510	"Since I screwed up the commit, we voted 2.1.7 down and are working to get 2.1.8 out pretty quickly."
__label__neutral	neutral_1511	A user looking at the set of changes won't care :)
__label__neutral	neutral_1512	Or did you see some other errors or bad weinre behaviour?
__label__neutral	neutral_1513	Typical POST then DOH moment.
__label__neutral	neutral_1514	I'll see if I can find a way; our systems are pretty constrained in that dimension.
__label__neutral	neutral_1515	I think that would be the cleanest solution to prevent bad behaviour with wrong codecs?
__label__neutral	neutral_1516	"Perhaps it would be easier to make ClobLocatorInputStream a wrapper around ClobLocatorReader, and ClobLocatorOutputStream a wrapper around ClobLocatorWriter?"
__label__neutral	neutral_1517	"I like having consistent indenting, but now it is really hard to see the diffs, and it gets confusing."
__label__neutral	neutral_1518	"> Ideally we would move to NIO framework like netty, but that would much larger effort."
__label__neutral	neutral_1519	"Once all the chunks have been uploaded, the Upload Framework can returned a combined file."
__label__neutral	neutral_1520	You don't see '>' replaced because that's not required in this case (though some frameworks do it anyway).
__label__neutral	neutral_1521	Making a blocker.
__label__neutral	neutral_1522	I've reverted this for the moment.
__label__neutral	neutral_1523	and at the moment we dont have that yet.
__label__neutral	neutral_1524	Maybe we're stuck with it until log4j fixes its dependencies?
__label__neutral	neutral_1525	"[~bmahler], it looks like this can be closed since the Python UI is gone."
__label__neutral	neutral_1526	Is that true?
__label__neutral	neutral_1527	seems this is a CDK issue
__label__neutral	neutral_1528	"Mladen, any progress please?"
__label__neutral	neutral_1529	I am transfering my issues so I want to know the current status.
__label__neutral	neutral_1530	Thanks for reporting.
__label__neutral	neutral_1531	Fixed on the master (0d43528e) and the 1.6 (9affb57a).
__label__neutral	neutral_1532	or someother version?
__label__neutral	neutral_1533	"ThriftServer.java and Hbase.thrift patched manually, the other files generated using thrift-0.2.0"
__label__neutral	neutral_1534	I drafted a small benchmark (so far only for android) to demonstrate the issue.
__label__joy	joy_131	> - FOUserAgent.getStream() is cool and very easy to use (now that it's properly > documented).
__label__neutral	neutral_1535	Does it solve your issue ?
__label__neutral	neutral_1536	I'll see if I can arrange for the manifest to contain bundle-manifestVersion.
__label__neutral	neutral_1537	Pushing non-critical issues to the next CR2.
__label__joy	joy_132	"i kinda like the black acctually .. but that may largely be due to my prefering the ""fire"" solr logo over the futuristic magnifying glass (the red/orange contrasts nicely with the black/grey. to my mind, the ""Solr"" ""Sun"" connection has allways been really cool ..."
__label__neutral	neutral_1538	"If you think they are critical for CR1, please re-schedule them."
__label__neutral	neutral_1539	Issue is reproducible at least on Debian 32bit and SLES 10 64bit.
__label__joy	joy_133	Awesome discussion.
__label__neutral	neutral_1540	"So, I also can say ""this is not yield keyword specific problem""."
__label__neutral	neutral_1541	Thank you for reviewing.
__label__neutral	neutral_1542	fixed in revision 478248
__label__neutral	neutral_1543	pushed
__label__neutral	neutral_1544	Supported by external project
__label__neutral	neutral_1545	"And in that case, the first argument could also be changed from OpenBitSetDISI to OpenBitSet."
__label__neutral	neutral_1546	"Until there will be _real_ need of adding new Monoid implementations, I would suggest to postpone the problem and keep *your* version of the patch."
__label__neutral	neutral_1547	"Let's fight with the right weapons when we need, I wouldn't use a katana to kill a fly (unless I am Bruce Willis and I'm in Pulp Fiction :P) best and thanks!"
__label__neutral	neutral_1548	No issue found after noting how it's invoked.
__label__neutral	neutral_1549	And interestingly suddenly this is moved from MAPREDUCE to OOZIE.
__label__neutral	neutral_1550	Running patch through hudson.
__label__joy	joy_134	"Got it, thanks for the explanation."
__label__neutral	neutral_1551	A new issue (https://issues.apache.org/jira/browse/RAMPARTC-140) is created for implementing SupportingToken assertion.
__label__neutral	neutral_1552	v1 fixes the nit
__label__neutral	neutral_1553	Patch committed.
__label__neutral	neutral_1554	Thanks Ankit!
__label__neutral	neutral_1555	"Thanks for the patch, Kim."
__label__neutral	neutral_1556	I will look at those remaining references to NATIVE::LOCAL in the error messages.
__label__joy	joy_135	The patch looks good.
__label__neutral	neutral_1557	"I tripped across one puzzling sentence, but it wasn't something that you changed: In the second, longer paragraph of the BUILTIN bullet, we recommend LDAP and user-supplied schemes as alternatives to BUILTIN, but we don't recommend NATIVE."
__label__neutral	neutral_1558	Did we decide to not recommend NATIVE here or should this be adjusted to include it beside the other safe schemes?
__label__neutral	neutral_1559	Thanks.
__label__neutral	neutral_1560	It could be that this has been resolved already (elsewhere).
__label__neutral	neutral_1561	See attached patch.
__label__neutral	neutral_1562	I'll add docs in Confluence if the example is integrated in Camel's codebase.
__label__neutral	neutral_1563	Closing all issues created in 2005 and before which are marked resolved
__label__neutral	neutral_1564	APIs doc is outdated - thanks
__label__neutral	neutral_1565	"I have committed a fix for this, please close if you are satisfied."
__label__neutral	neutral_1566	Thanks.
__label__joy	joy_136	Cool cool - thanks stack!
__label__joy	joy_137	Awesome! This tool is cool.
__label__neutral	neutral_1567	What % of clients do think were stuck like this?
__label__neutral	neutral_1568	Mind adding your test run results in here?
__label__neutral	neutral_1569	QA test result is recorded above.
__label__neutral	neutral_1570	"Closing, works like charm now."
__label__joy	joy_138	Thanks guys for saving mankind!
__label__joy	joy_139	This looks safe also
__label__neutral	neutral_1571	Stefan: are you sure you had a clean build with my patch applied?
__label__neutral	neutral_1572	Please follow up on the forum: http://www.jboss.com/index.html?module=bb&op=viewtopic&p=4178893#4178893
__label__neutral	neutral_1573	suggested for 3.1.1
__label__neutral	neutral_1574	Might want to correct the misspelling: *remvoed* AllFromInodesFromMap :)
__label__neutral	neutral_1575	Thank you very much Les.
__label__joy	joy_140	I've just tested the shiro trunk with karaf-2.2 release and everything works fine :)
__label__joy	joy_141	Pretty sure this was fixed by the time we released JRuby 1.6.
__label__neutral	neutral_1576	This patch looks pretty good.
__label__neutral	neutral_1577	I think we should apply it.
__label__neutral	neutral_1578	Moved to GA.
__label__neutral	neutral_1579	This appears to be a issue with Hibernate (the default JPA implementation in JBoss AS) rather than a EJB3 issue.
__label__neutral	neutral_1580	Fixed the MAPREDUCE-3028 commit which broke MR1.
__label__neutral	neutral_1581	Contributed by Hitesh Shah.
__label__joy	joy_142	"Interesting, I just replaced my src with the latest in the trunk and did a compleatly clean build and the problem seems to have gone away."
__label__neutral	neutral_1582	I'll close the ticket as it looks like a non-issue.
__label__neutral	neutral_1583	* it is impossible to name a column 1 * it is impossible to name a column alias 1 If order by supports this I do not see group by can't?
__label__neutral	neutral_1584	Do we want to reconsider this?I kinda like the feature.
__label__neutral	neutral_1585	no POM provided here
__label__joy	joy_143	This is Awesome Stefan - thanks a million!
__label__joy	joy_144	This is awesome - works in a one-liner.
__label__neutral	neutral_1586	I resolved the issue via Spring.
__label__neutral	neutral_1587	This is a screenshot from 1.5.3 and that is how I would expect the Directory Studio to behave.
__label__neutral	neutral_1588	"Harsh, will you have a chance to work on a test for this?"
__label__neutral	neutral_1589	Please tell me if you'd like me to help.
__label__neutral	neutral_1590	"Misty, Can you move JBPAPP-7480 to bz and then cross reference the bz number in this Jira and close this one?"
__label__neutral	neutral_1591	"Thanks, Mike"
__label__neutral	neutral_1592	"v3 rewritten to be lots more explicit and save the vendor, arch, and version numbers for later code to use."
__label__neutral	neutral_1593	patch by johano; reviewed by jbellis for
__label__joy	joy_145	Awesome!
__label__neutral	neutral_1594	We just need a possible mentor here... volunteers...?
__label__neutral	neutral_1595	EAR project case is fixed.
__label__neutral	neutral_1596	"Alexey, please verify."
__label__neutral	neutral_1597	Resolving this issue as it is covered by JBQA-5191 and JBQA-5192.
__label__neutral	neutral_1598	"btw, MCLEAN-18-maven-clean-plugin.patch also applied the maven-clean-plugin-dcabasson-MCLEAN17.txt fix."
__label__neutral	neutral_1599	> DistributedHashTable is a good solution but then how are we planning > to acheive let say a Distributed LRU Cache or Distributed Time-limited > or a Distributed Count-Limited Cache.
__label__neutral	neutral_1600	"I am not mandating to use DistributedHashtable directly by plugging it into Castor as it is, but as the base for 'distributable' TimeLimited, CountLimited et alias cache implementations."
__label__joy	joy_146	"Nice, I did not think about using the system tables."
__label__neutral	neutral_1601	I will re-work and submit another patch.
__label__neutral	neutral_1602	Will upgrade to 1.0.10 and check it.
__label__neutral	neutral_1603	Will re-enable assertions too.
__label__neutral	neutral_1604	{{TrivariateRealFunction}} renamed in r1236932.
__label__neutral	neutral_1605	"yeah, I think so."
__label__neutral	neutral_1606	we just used it with CBR (content based routing).
__label__neutral	neutral_1607	Now the JBossESB changed to SwitchYard and we need to ensure it works.
__label__joy	joy_147	You're results are awesome Paul. Great work :) Looking forward to see your new JSON parser in trunk whenever you think is ready.
__label__neutral	neutral_1608	We are restructuring the trunk now from jboss as 4.2 and it's unstable.
__label__neutral	neutral_1609	You should check out and build revision 693 of the trunk.
__label__neutral	neutral_1610	pushed
__label__neutral	neutral_1611	It is not in the requirement.
__label__neutral	neutral_1612	I move it into 2.1-M1.
__label__neutral	neutral_1613	Attaching patch for review.
__label__joy	joy_148	"Awesome, you rock, Drew!"
__label__joy	joy_149	Very cool.
__label__neutral	neutral_1614	"Resolved by changing the meaning of maxRows to be across all code tables with a default of 200000, introduced maxRowPerTable with a default of 10000 to take the place of maxRows, and upped the default for maxCount to 200."
__label__neutral	neutral_1615	I switched to using the JavaSourceLoader and this appears to work fine.
__label__neutral	neutral_1616	Done except for pages.xml imports.
__label__neutral	neutral_1617	"I'm not sure if this is actually a bug, we had it fixed, but then had to revert it."
__label__neutral	neutral_1618	I don't remember why right now though.
__label__joy	joy_150	Awesome speedup! Finally all this work shows great results!!
__label__neutral	neutral_1619	Integrated in Cassandra #63 (See [http://hudson.zones.apache.org/hudson/job/Cassandra/63/])
__label__neutral	neutral_1620	Applied Andrew's patch at r676866.
__label__neutral	neutral_1621	Please check that it was applied as expected.
__label__joy	joy_151	@Subbu: Glad I was able to help.
__label__neutral	neutral_1622	I think nothing is absolute.
__label__joy	joy_152	I believe in relativity :-)
__label__neutral	neutral_1623	This appears to have been fixed
__label__joy	joy_153	Great! It's been good to be able to contribute and I hope to be able to more for this awesome project when I have the spare time.
__label__neutral	neutral_1624	and your comments are very welcome..
__label__neutral	neutral_1625	Marcus we need a fix for this - if you can check in we will test it thanks /sudha
__label__neutral	neutral_1626	Add CRC32C as another DataChecksum implementation.
__label__neutral	neutral_1627	Contributed by Todd Lipcon.
__label__neutral	neutral_1628	Not a SWF issue.
__label__neutral	neutral_1629	Please open with Spring Framework.
__label__neutral	neutral_1630	Issue is also present at JPP 6.0 ER02
__label__neutral	neutral_1631	Fixed with revision 164512.
__label__neutral	neutral_1632	Added org.jboss.test.ejb3.war.deployment.unit.Ejb3WarDeploymentTestCase in r99656.
__label__neutral	neutral_1633	"Also see issues like SOLR-2608 that are ignored, i've been running lucene tests in a loop on and off for periods, and basically gave up on solr tests aswel, they randomly fail all the time"
__label__neutral	neutral_1634	This one... Really.
__label__joy	joy_154	Thanks Uwe!
__label__neutral	neutral_1635	"Alright, I'll put this and HBASE-8453 in through trunk today."
__label__neutral	neutral_1636	"Sorry, I realise now that ""does not work"" was insufficiently specific."
__label__neutral	neutral_1637	Seems to be working just fine.
__label__joy	joy_155	Code looks cool.
__label__neutral	neutral_1638	It looks pretty bad.
__label__neutral	neutral_1639	[~maxandersen] please review
__label__neutral	neutral_1640	Corrected error in comment - please use this one.
__label__neutral	neutral_1641	"hbase org.apache.hadoop.hbase.PerformanceEvaluation --nomapred --rows=250000 randomRead 16 10k regions, 5 RS."
__label__neutral	neutral_1642	I tested HBASE-9609 and it does seem to make a huge difference!
__label__joy	joy_156	Cool - good information to have. Thanks Lance!
__label__neutral	neutral_1643	"I integrated the submitted patch in the new JBW, but did not really test it."
__label__neutral	neutral_1644	"Nobody has complained about it yet, but I don't think it should be ported to older versions at this time."
__label__neutral	neutral_1645	[~saturnism] agreed.
__label__neutral	neutral_1646	# Javadoc in InterDatanodeProtocolServersideTranslator refers to JournalProtocl.
__label__neutral	neutral_1647	Shelly use JBAS-5873 for the matrix tests :)
__label__neutral	neutral_1648	"Sanjay, your patch is missing the AuthenticationFilterInitializer.java file"
__label__neutral	neutral_1649	"The pb is not in ApacheDS, but in the startup delay."
__label__joy	joy_157	Hey very cool.
__label__neutral	neutral_1650	"Thanks, Raymond"
__label__neutral	neutral_1651	I'll try it on our Fedora.
__label__neutral	neutral_1652	"Hi guys, I agree 100% on this."
__label__neutral	neutral_1653	"Just a note, there was a long conversation about this here: https://reviews.apache.org/r/4655/ and this is a dup of FLUME-1089."
__label__joy	joy_158	"Hi, very cool!"
__label__joy	joy_159	I like the elegant parser!
__label__neutral	neutral_1654	"Based on review comment, add ""respBody.hasPublishResponse()"" before returning respBody.getPublishResponse()"
__label__neutral	neutral_1655	using g++ (GCC) 4.1.2 20080704 (Red Hat 4.1.2-48) and cppunit 1.12.1.
__label__neutral	neutral_1656	"Next try, r1475799 in santuario."
__label__neutral	neutral_1657	Here's a patch that adds in support for SGD.
__label__neutral	neutral_1658	Fixed in trunk -r746186.
__label__neutral	neutral_1659	"Carl, can you review?"
__label__neutral	neutral_1660	I haven't fully grok'd the entire issue yet but have a quick comment: 2.0 was released several months ago...it's not 2.0-alpha-5-SNAPSHOT.
__label__neutral	neutral_1661	is it essue still open?
__label__joy	joy_160	Thanks for fixing it so quickly!
__label__neutral	neutral_1662	Bozhidar: I agree with your assessment.
__label__joy	joy_161	Jonathan: over to you :)
__label__neutral	neutral_1663	On 2008-04-03 15:57:26.514 laupark commented: Opened.
__label__neutral	neutral_1664	On 2008-04-04 13:31:57.627 jimurphy commented: fixed rev.
__label__neutral	neutral_1665	196883 On 2008-04-08 08:38:58.599 wichan commented: Still couldn't find the swfUtils.jar in the webtier.war ad flex-for-cf.zip On 2008-04-09 07:51:01.799 ccreanga commented: Fixed - swfutils.jar was not included in the war
__label__neutral	neutral_1666	The code should work.
__label__neutral	neutral_1667	The API need to be checked and those errors (ie PDU has been fully decoded ...) have to be fixed.
__label__neutral	neutral_1668	We wil investigate what's going on.
__label__neutral	neutral_1669	Thanks for the report !
__label__neutral	neutral_1670	This patch should do the trick.
__label__joy	joy_162	"Cool, looks good."
__label__neutral	neutral_1671	A test case is needed too
__label__neutral	neutral_1672	"I suggest, that you have a closer look at the exception."
__label__neutral	neutral_1673	The absolut portion of the path *is always prepended*.
__label__joy	joy_163	Cool. sounds good to me.
__label__neutral	neutral_1674	So any of your suggestions do not help.
__label__neutral	neutral_1675	Assume closed as resolved and released
__label__neutral	neutral_1676	PR https://github.com/SpringSource/spring-integration/pull/621
__label__joy	joy_164	"Hi Carlos, This looks awesome! Lots of cool stuff."
__label__neutral	neutral_1677	I committed patch _c with revision 697897.
__label__neutral	neutral_1678	"Note, that as indicated before, JVMInfo still is part of derbyclient.jar (I assume because of the need to support sysinfo)."
__label__neutral	neutral_1679	Committed to trunk and 0.21 branch.
__label__neutral	neutral_1680	Thanks Amar!
__label__neutral	neutral_1681	An awesome feature of Hive is the rich type system with excellent support for complex data-structures.
__label__joy	joy_165	"Waaaaay cool! I especially like the ""upload file"" option."
__label__neutral	neutral_1682	"Solomon, That is very slick."
__label__neutral	neutral_1683	I tested it and it works fine.
__label__neutral	neutral_1684	Thank you.
__label__neutral	neutral_1685	"Chris, This might be a useful technique to add to the documentation or to a HOWTO on the SJC wiki (when / if there is one) Thanks all."
__label__neutral	neutral_1686	Committed after fixing the typo.
__label__neutral	neutral_1687	One minor point - can you make result a member variable of GenericUDFArrayContains?
__label__neutral	neutral_1688	This will reduce object creation.
__label__neutral	neutral_1689	"The patch needs to be regenerated against the current trunk, but otherwise looks good."
__label__joy	joy_166	"cool stuff! a good candidate to put on myfaces-commons-utils, so the user can just add the resource handler on its webapp faces-config."
__label__neutral	neutral_1690	"Thanks, Kristian."
__label__neutral	neutral_1691	Committed revision 1341814.
__label__neutral	neutral_1692	Deleted spurious 'Added: svn:executable' from the patch.
__label__neutral	neutral_1693	"The .md extension is used for the readme because it's in MarkDown format, used by GitHub."
__label__neutral	neutral_1694	See the following page for an example: https://github.com/seam/examples/tree/master/booking
__label__neutral	neutral_1695	It is completely expected an updatesite.zip for all of devstudio is *bigger* than the installer.jar
__label__neutral	neutral_1696	I presume so.
__label__neutral	neutral_1697	"updating, minor errors in pdf doc"
__label__neutral	neutral_1698	Yup instruction are not correct.
__label__neutral	neutral_1699	"""That said, check out setReadLength in TBinaryProtocol."""
__label__neutral	neutral_1700	I have committed this.
__label__joy	joy_167	"Thanks, Daryn!"
__label__neutral	neutral_1701	Also thanks Matt for the review.
__label__neutral	neutral_1702	"Yup, I'll get it in today."
__label__neutral	neutral_1703	Fixed in r544
__label__neutral	neutral_1704	"Yeah, it looks like there are conflicts with RenderingContentRewriter and one of the guice modules."
__label__neutral	neutral_1705	Committed to Trunk.
__label__joy	joy_168	Thanks for the reviews..
__label__neutral	neutral_1706	Atlassian 3.2 is in Central.
__label__neutral	neutral_1707	Missfire
__label__joy	joy_169	"Wow, thanks Raghu, that's awesome and will save me a ton of time."
__label__neutral	neutral_1708	"closed with no testing, Ian says this is a code-level change."
__label__neutral	neutral_1709	"When the order of methods change, so the rendering of fragments is bellow the definition, then it works fine."
__label__neutral	neutral_1710	Two git commits included.
__label__neutral	neutral_1711	Abandoned; no longer necessary.
__label__joy	joy_170	"So very cool, and so very committed-- thanks Matthias, this is awesome."
__label__joy	joy_171	"Took me a few seconds to get it, but then I realized how awesome it is."
__label__joy	joy_172	"I'm happy to use it as the standard logo (i.e. website, etc.)."
__label__neutral	neutral_1712	I'm giving this up hoping someone confident in Swing would look into it.
__label__neutral	neutral_1713	Have you been able to work on that ?
__label__neutral	neutral_1714	Do you need any help?
__label__neutral	neutral_1715	"Hi Matt, Thank you for fixing this issue."
__label__neutral	neutral_1716	I will use it when it will be included in a future release.
__label__neutral	neutral_1717	Committed the addendum in revision 1414868.
__label__neutral	neutral_1718	Thanks for pointing out this (rather embarrassing) oversight!
__label__neutral	neutral_1719	Fixed for both 2.0 M4 and 1.2.8.
__label__neutral	neutral_1720	"Amila, Could you please check my fix?"
__label__joy	joy_173	"http://svn.apache.org/viewvc?view=rev&revision=468444 Deepal, Thanks!"
__label__neutral	neutral_1721	"Hi Drew, I have upgraded Postage to James3 (see POSTAGE-23) and used your patch at this occasion."
__label__joy	joy_174	Awesome stuff Stephen!
__label__neutral	neutral_1722	Looks like we have already taken care of this.
__label__neutral	neutral_1723	are any changes needed to dd2spring for this?
__label__neutral	neutral_1724	I suggest making a tooltip with the title of the context help article (a popup) when the user hovers the question mark icon.
__label__neutral	neutral_1725	"We'll go with this for now, thanks for the fix!"
__label__neutral	neutral_1726	Ran some benchmarks.
__label__neutral	neutral_1727	"When the modulus is large, which means that number of collisions is small, LightWeightGSet is much better than GSetByHashMap."
__label__neutral	neutral_1728	added fixVersion
__label__neutral	neutral_1729	Rolled over to 0.5.5 to get a stable JavaOne release out
__label__neutral	neutral_1730	Can you expand on the difference between a Prepared Statement and a Logical Prepared Statement?
__label__neutral	neutral_1731	And also on the difference between a Connection and a Logical Connection?
__label__neutral	neutral_1732	Are these already-existing concepts in the client?
__label__neutral	neutral_1733	Or did you introduce these concepts?
__label__neutral	neutral_1734	Thanks!
__label__joy	joy_175	"Thanks Alexei, the patch is fine."
__label__neutral	neutral_1735	how does your application.cfc looks like (ormsettings)?
__label__neutral	neutral_1736	I think Jason has done this already?
__label__neutral	neutral_1737	canceling
__label__joy	joy_176	"Awesome co-op. Thanks, Robert & Mike, for picking this up."
__label__neutral	neutral_1738	We'll take a look for 1.21.
__label__neutral	neutral_1739	"Thanks Matt, Todd and Cos!"
__label__neutral	neutral_1740	"From https://builds.apache.org/job/PreCommit-HBASE-Build/2581/console, it is not clear which test hung."
__label__neutral	neutral_1741	Committed the patch with thanks to Christian.
__label__neutral	neutral_1742	"Sangwon Seo, Thanks for your review."
__label__neutral	neutral_1743	Could you give me more comments?
__label__neutral	neutral_1744	fixed.
__label__neutral	neutral_1745	This obsoletes ~/.m2/maven.properties
__label__neutral	neutral_1746	The last bug I see mentioning a HSQL upgrade was JBAS-1618 which ended up with 1.8 RC9.
__label__neutral	neutral_1747	"However, this bug mentions that we were upgrading from 1.8.0.2 to 1.8.0.7."
__label__neutral	neutral_1748	When did 1.8 RC 9 get upgraded and where is it tracked/documented?
__label__neutral	neutral_1749	Done in Weld and TCK
__label__neutral	neutral_1750	Applied patch.
__label__neutral	neutral_1751	Thanks.
__label__neutral	neutral_1752	And many thanks to you Olivier for applying this so quickly!
__label__joy	joy_177	Cheers!
__label__neutral	neutral_1753	quick patch.
__label__neutral	neutral_1754	What's the operation?
__label__neutral	neutral_1755	I just committed this to trunk and branch-0.23.
__label__neutral	neutral_1756	Thanks Sid!
__label__neutral	neutral_1757	"Thanks for testing, but please don't close it yet."
__label__neutral	neutral_1758	Fixed; trunk r910567
__label__neutral	neutral_1759	For _ExternalSpecifications there is already an issue in the JIRA: MYFACES-2582
__label__neutral	neutral_1760	Thank you.
__label__neutral	neutral_1761	Issue has been resolved.
__label__neutral	neutral_1762	A new patch including some corrected Japanese sentences and a link to Solr Wiki.
__label__neutral	neutral_1763	All log statements should now be surrounded by log guards.
__label__neutral	neutral_1764	Horia Chiorean <hchiorea@redhat.com> made a comment on [bug 1014709|https://bugzilla.redhat.com/show_bug.cgi?id=1014709] https://github.com/jboss-integration/modeshape/commit/d1d97180c957491bee3654743ebd4a6860314ad3
__label__joy	joy_178	Thanks Galder:)
__label__joy	joy_179	"Daryn, the current patch looks good."
__label__neutral	neutral_1765	Thanks!
__label__neutral	neutral_1766	Used the new attribute to move ObjectStoreDir from bin to server/xxx/data/tx-object-store
__label__neutral	neutral_1767	Please also see Glassfish issue 13111: https://glassfish.dev.java.net/issues/show_bug.cgi?id=13111
__label__neutral	neutral_1768	Committed as r1382016.
__label__neutral	neutral_1769	Thanks Sijie.
__label__neutral	neutral_1770	"Joram, notify Jennifer Vennable when you completed this."
__label__neutral	neutral_1771	"Never mind, found it."
__label__neutral	neutral_1772	Changes applied in revision 1369338.
__label__neutral	neutral_1773	Many thanks.
__label__neutral	neutral_1774	Monitor no longer based on protobuf.
__label__neutral	neutral_1775	periodic bulk close of resolved issues.
__label__neutral	neutral_1776	Thank you!
__label__neutral	neutral_1777	It's working like a charm.
__label__neutral	neutral_1778	The b-1.0 patch also applies to branch-1.
__label__joy	joy_180	Sounds good.
__label__neutral	neutral_1779	I too have been busy on other projects.
__label__neutral	neutral_1780	I'll try and test with queryIndexesRebuiltSynchronously false today.
__label__neutral	neutral_1781	fancy applying this patch before 1.3.0?
__label__neutral	neutral_1782	applied patch (thanks) in r1055887
__label__neutral	neutral_1783	"Hi Jaikiran, Didn't you already fix this one?"
__label__neutral	neutral_1784	Thanks!
__label__neutral	neutral_1785	"Dona, Thiru: can one of you (or anyone else) please review this?"
__label__neutral	neutral_1786	05 was committed in r613384
__label__neutral	neutral_1787	committed to TRUNK (m3)
__label__joy	joy_181	This is awesome!
__label__joy	joy_182	v2 Looks good to me.
__label__neutral	neutral_1788	applied.
__label__neutral	neutral_1789	Thanks!
__label__neutral	neutral_1790	"Closing this issue, Jacopo fixed it at r1345528."
__label__neutral	neutral_1791	Thanks Jacopo.
__label__neutral	neutral_1792	Add EnumSetWritable.
__label__neutral	neutral_1793	Contributed by He Yongqiang
__label__neutral	neutral_1794	"I'm closing this for the time being, as we've reopened SPR-368."
__label__neutral	neutral_1795	Applied Rodrigo's suggestions
__label__neutral	neutral_1796	This was found in via JBossWS CXF so once we've pulled it in to JBoss and tested I'll let you know if there's any issues.
__label__neutral	neutral_1797	Thanks for the quick response Colm.
__label__neutral	neutral_1798	Hullo?
__label__neutral	neutral_1799	Could you open a ticket for this (last comment) Tnx micha
__label__neutral	neutral_1800	"Hi Thomas, it's here: https://svn.jboss.org/repos/common/common-old/branches/Branch_1_0/"
__label__joy	joy_183	"Hey, you're right, that idea was probably not the best approach to the problem - 0.6 looks really nice, looking forward to it :)"
__label__neutral	neutral_1801	Indeed!
__label__neutral	neutral_1802	This is actually the case in 2.0.5 already.
__label__neutral	neutral_1803	"Thanks for spotting this, Philipp!"
__label__neutral	neutral_1804	It seems that using {{BufferedOutputStream}} is a better solution since it will also help other operations.
__label__neutral	neutral_1805	"BTW, do you know why there are four one-byte packets?"
__label__neutral	neutral_1806	fixed style
__label__neutral	neutral_1807	Dupe of CASSANDRA-4042 (we'll include the BF fp change there)
__label__neutral	neutral_1808	I think this looks like the same issue as [MFINDBUGS-55|http://jira.codehaus.org/browse/MFINDBUGS-55] Garvin
__label__neutral	neutral_1809	Changed contributed by from Arpit Agarwal to Arpit Gupta.
__label__neutral	neutral_1810	(Revision 1450575) HADOOP-8917.
__label__neutral	neutral_1811	add LOCALE.US to toLowerCase in SecurityUtil.replacePattern.
__label__neutral	neutral_1812	Contributed by Arpit Agarwal.
__label__neutral	neutral_1813	"Marc, you're re-logging your ownn issues :)"
__label__neutral	neutral_1814	Patch now applies cleanly against latest version of trunk.
__label__neutral	neutral_1815	Bounce to Doug as this is a SOA issue.
__label__neutral	neutral_1816	"Thanks, I just committed the patch."
__label__neutral	neutral_1817	"However, I cannot see errors in lucli, can you make a patch for those cases, too?"
__label__joy	joy_184	Thanks for moving so quickly on this guys.
__label__neutral	neutral_1818	Look forward to seeing it resolved in 3.3.2.GA!
__label__neutral	neutral_1819	"On trunk apparently all use of the ""get"", ""put"", and ""delete"" histograms have already been removed from the regionserver, except for the Jamon templates."
__label__neutral	neutral_1820	Since an approach to put back two such HRegionInterface level measurements with a query/mutate distinction has been +1ed on this issue I'm going to put them back on trunk and port back the changes to 0.94.
__label__neutral	neutral_1821	Calling them queryRequestLatency and mutateRequestLatency in RegionServerMetrics.
__label__neutral	neutral_1822	"This blog post speaks briefly about colocation, and how this can be achieved using AtomicMaps."
__label__neutral	neutral_1823	Thanks Daryn!
__label__neutral	neutral_1824	for taking a look.
__label__neutral	neutral_1825	I just committed this.
__label__joy	joy_185	"Thanks, Sanjay!"
__label__neutral	neutral_1826	#NAME?
__label__neutral	neutral_1827	After several retries seems we are unable to proceed with releng team to get supported solution.
__label__neutral	neutral_1828	Will setup mirroring to Brno QA lab.
__label__neutral	neutral_1829	Thanks Claus.
__label__neutral	neutral_1830	If somebody can better formulate my above fragment and place it somewhere in wiki it would be great.
__label__neutral	neutral_1831	"I have throuroughly documented this in the XWorkConverterTest, see testStringToInt, testStringToInteger, testStringToPrimitiveDouble and testStringToDouble."
__label__neutral	neutral_1832	If you feel like adding this to the showcase than go on.
__label__neutral	neutral_1833	"cheers, ./alex -- .w( the_mindstorm )p."
__label__joy	joy_186	"Cool, thanks Daniel, we're actually cool with either updating it to e9ff8c4928 or flipping the write bit and we'll push the delta ourselves - whatever's the fastest to get to writeable:) Thanks, --tim"
__label__neutral	neutral_1834	I think the HttpClients service interface must be exported for it to be used.
__label__neutral	neutral_1835	On the other hand the BundleActivator should not be exported and can as well be moved to the osgi.impl package.
__label__neutral	neutral_1836	Done at revision 1582 - 1585
__label__neutral	neutral_1837	Closing as fixed in trunk.
__label__neutral	neutral_1838	Reopen if I'm mistaken.
__label__neutral	neutral_1839	We have an HTTP discovery agent in activemq-http no other activity on this issue so closing for now.
__label__neutral	neutral_1840	Although the older patch applied fine for me (patch -p1).
__label__joy	joy_187	This is a great suggestion.
__label__neutral	neutral_1841	jBPM already works this way.
__label__neutral	neutral_1842	Thanks Amar!
__label__neutral	neutral_1843	Would your use case be covered by adding a TTL to CF?
__label__neutral	neutral_1844	Because that seems like the natural level of granularity for this to me.
__label__neutral	neutral_1845	Looks like Forge isn't used at companies having a firewall.
__label__neutral	neutral_1846	Attached patch for Myfaces.
__label__neutral	neutral_1847	the repairment to BlueSky official website Downloads.html and MailingLists.html thebluesky group an use the patch freely
__label__neutral	neutral_1848	"adding --rsyncable to our build system, does not seem to be a big task, I am experimenting with it."
__label__neutral	neutral_1849	"seen from my chair, this is a very elegant solution, until we can really split our distribution into smaller files (exe + langauge packs) and have a meta installer that combines what the user want."
__label__neutral	neutral_1850	Regenerated patch with trunk and with an indentation change.
__label__neutral	neutral_1851	Spoke too soon!
__label__neutral	neutral_1852	The SocetException is still there sporadically.
__label__neutral	neutral_1853	This adds testing of the RegionSplitsTracker.
__label__neutral	neutral_1854	I committed the patch to trunk.
__label__neutral	neutral_1855	Thank you Ivan!
__label__neutral	neutral_1856	Thanks Daryn for the review.
__label__neutral	neutral_1857	"If possible, let's schedule to 0.4"
__label__neutral	neutral_1858	"Whoops, yeah, sorry."
__label__neutral	neutral_1859	"Agreed, wildcards (*, ?)"
__label__neutral	neutral_1860	"are enough for this, rather than full blown regexp."
__label__neutral	neutral_1861	It's also easier then to tell a wildcard-based config from a normal one.
__label__neutral	neutral_1862	Feature verification is completed including Upgrade.
__label__neutral	neutral_1863	hence closing the ticket.
__label__neutral	neutral_1864	This issue is being tracked by other JIRAs now.
__label__neutral	neutral_1865	RB at https://reviews.apache.org/r/15607/
__label__neutral	neutral_1866	I just committed this.
__label__neutral	neutral_1867	"Thanks, Scott!"
__label__neutral	neutral_1868	Sonar does not use JavaNCSS at all !
__label__neutral	neutral_1869	The 0.23 patch looks fine.
__label__neutral	neutral_1870	I also tried to resolve merge conflicts and ended up with pretty much the same patch as yours.
__label__neutral	neutral_1871	The only significant code difference seems to be in getBlockLocations().
__label__neutral	neutral_1872	Thanks for the patch.
__label__neutral	neutral_1873	It was applied with minor changes in 2.1.10-dev and 2.2-dev.
__label__neutral	neutral_1874	Please reopen the issue if needed.
__label__neutral	neutral_1875	fixed in 1.8. checking in javadoc fixes momentarily
__label__neutral	neutral_1876	Committed in r14473 on trunk and r14474 on 2.0.x.
__label__neutral	neutral_1877	I know this hasn't been looked at in quite a while.
__label__neutral	neutral_1878	I can't see the current GOP and GKOP being completely replaced but there may well be some areas where your code could be incorporated.
__label__neutral	neutral_1879	It would help considerably if you could explain what the problem was/is with finite sized pools and the current implementation.
__label__neutral	neutral_1880	"Without an explanation of what the issue is, this issue is likely to remain dormant or just be closed as won't fix."
__label__neutral	neutral_1881	"Same in problem in SQLServer, solved with catalog=null and schema=""%"""
__label__neutral	neutral_1882	Done as part of Felix resolver integration
__label__neutral	neutral_1883	Latest commits now include filemgr and workflowmgr integration.
__label__neutral	neutral_1884	The work in progress archetype is now committed in the trunk (http://svn.apache.org/repos/asf/oodt/trunk/mvn/archetypes/radix/).
__label__neutral	neutral_1885	"Bharath, Since all of this work's goal was done - can this be closed?"
__label__neutral	neutral_1886	"Thanks for Paul King's advice, I tried 1.6.3 again with groovy.bat."
__label__neutral	neutral_1887	"groovy.bat don't have this problem, so the problem is from the native launcher."
__label__neutral	neutral_1888	Closing as dupe.
__label__joy	joy_188	"great, thanks Joel."
__label__neutral	neutral_1889	Marek Novotny <mnovotny@redhat.com> made a comment on [bug 883918|https://bugzilla.redhat.com/show_bug.cgi?id=883918] This will be fixed/upgraded to GWT 2.5 in WFK 2.3.
__label__neutral	neutral_1890	"Per DoÄŸacan's comment, we need to reopen this and test out his new patch for it."
__label__neutral	neutral_1891	"Andrzej, I'd be happy if you reassigned to you, however, I will have some time on Tuesday to look at this if you don't until then."
__label__neutral	neutral_1892	latest from RB
__label__neutral	neutral_1893	commit fix http://svn.apache.org/viewvc?rev=729857&view=rev to nmr project http://svn.apache.org/viewvc?rev=729894&view=rev to features project
__label__neutral	neutral_1894	"Robbie, Could you please review and commit the patch?"
__label__neutral	neutral_1895	"Hmm, it did work on monday for me; strange, I'll have a look at it right now"
__label__neutral	neutral_1896	reviewed and committed patch.
__label__neutral	neutral_1897	Thanks Charitha.
__label__neutral	neutral_1898	"Added to portletswap, but not the distro until we have themed groupings."
__label__neutral	neutral_1899	Thanks for reporting.
__label__neutral	neutral_1900	Yeah classloading in JBoss is a bit tricky :)
__label__joy	joy_189	"Thanks for reporting, solved!"
__label__neutral	neutral_1901	Applied slightly modified patch in [r18180|http://fisheye.codehaus.org/changelog/mojo/?cs=18180].
__label__neutral	neutral_1902	Thanks!
__label__neutral	neutral_1903	[~ashutoshc] Thanks.
__label__neutral	neutral_1904	The rpc changes look good to me in the patch (smile)
__label__neutral	neutral_1905	I will rewrite that part.
__label__neutral	neutral_1906	"Scratch that, this fails horribly after the change to unparsing negative numbers as hex."
__label__neutral	neutral_1907	Fixed in next savara release.
__label__neutral	neutral_1908	Some more work towards full SAAJ 1.3 implementation.
__label__neutral	neutral_1909	Patch for 0.96 corresponding to latest trunk patch.
__label__joy	joy_190	it belongs to faces 1.2 :)
__label__neutral	neutral_1910	"Thanks Amit, Your patch is in trunk at r832776, R9.04 r832779"
__label__neutral	neutral_1911	"We decided not to support jdk13 jvms with 10.3, so there's no point in attempting to change anything at this point."
__label__neutral	neutral_1912	OK thanks for the review guys!
__label__neutral	neutral_1913	I'll commit soon.
__label__neutral	neutral_1914	Patch committed.
__label__joy	joy_191	"Ok cool, this is just a matter of adding strings to the various [NotFound()|https://github.com/apache/mesos/blob/0.15.0-rc4/src/files/files.cpp#L160] returns in files.cpp There are a number of error cases in the [browse|https://github.com/apache/mesos/blob/0.15.0-rc4/src/files/files.cpp#L204] and [read|https://github.com/apache/mesos/blob/0.15.0-rc4/src/files/files.cpp#L204] endpoints, I'd imagine one could change the javascript to generate bad requests which should be sufficient to test this :)"
__label__neutral	neutral_1915	Thanks Hari!
__label__neutral	neutral_1916	Ping?
__label__neutral	neutral_1917	Did you manage to create a test program?
__label__neutral	neutral_1918	It looks like there is an unencodable character.
__label__neutral	neutral_1919	JMX support will be implemented with the remoting project.
__label__joy	joy_192	"cool, no worries."
__label__neutral	neutral_1920	As of the new log4j DSL this is not an issue
__label__neutral	neutral_1921	Tested by submitter.
__label__neutral	neutral_1922	I just committed this.
__label__neutral	neutral_1923	"Thanks, Amar - this was a long-drawn affair!"
__label__neutral	neutral_1924	Fixed for exclusion: http://svn.apache.org/viewvc?view=revision&revision=1539249
__label__neutral	neutral_1925	Hi Thanks for your help testing this stuff.
__label__neutral	neutral_1926	I did a review and I found the problem is not on tomahawk.
__label__neutral	neutral_1927	Really it is a side effect of the browser (IE 7 and IE 8).
__label__neutral	neutral_1928	"In few words, onchange event is not published until the checkbox lost focus."
__label__neutral	neutral_1929	"I'll close this issue as won't fix, but anyway I commit the fix on tomahawk examples."
__label__neutral	neutral_1930	89 and 90 look fine.
__label__joy	joy_193	Cool feature! Performance: - It looks like scripts are read from the resource loader and parsed again (eval) for every update request.
__label__neutral	neutral_1931	"Yes, this was fixed through Yecht."
__label__neutral	neutral_1932	"Should be fixed with DOXIA-390, I added your test case."
__label__neutral	neutral_1933	Thanks!
__label__neutral	neutral_1934	all history lost?
__label__neutral	neutral_1935	for example: https://github.com/hibernate/hibernate-core/commits/3.6/hibernate-testsuite/pom.xml https://github.com/hibernate/hibernate-core/commits/3.6/testsuite/pom.xml
__label__neutral	neutral_1936	Review board: https://reviews.apache.org/r/15335/
__label__neutral	neutral_1937	I just committed this.
__label__neutral	neutral_1938	"Thanks, Amar!"
__label__neutral	neutral_1939	patch reviewed and applied by Eoghan with r502283
__label__neutral	neutral_1940	Extra javadoc added
__label__joy	joy_194	"Thanks Ram, That seems like a definite improvement."
__label__joy	joy_195	Interesting that you decided not to detect the error based on finding two similarly-named operations.
__label__neutral	neutral_1941	"I wonder if there are any advantages to your way of doing it over mine, but I think yours will definitely work to detect the error cases I had in mine."
__label__neutral	neutral_1942	Fair enough.
__label__neutral	neutral_1943	"Hello Bhumir, I think Ivan is right - can you try to test your case with the complete version of log4php, not only the files I have mentioned."
__label__neutral	neutral_1944	Thanks for you patience - this is a nasty issue.
__label__neutral	neutral_1945	Cheers Christian
__label__neutral	neutral_1946	committed r1296706.
__label__neutral	neutral_1947	"both patches applied, looks good."
__label__neutral	neutral_1948	This never got into Indigo - pusihing for it to go into Juno.
__label__neutral	neutral_1949	I'm not convinced making GrailsApplication serializable is a good idea.
__label__neutral	neutral_1950	"You ""workaround"" of making it transient is the correct solution."
__label__neutral	neutral_1951	"It applies, thanks."
__label__neutral	neutral_1952	TestMultiColumnScanner has been committed to trunk.
__label__neutral	neutral_1953	it is fixed by r1358 in jbossweb 2.1.x.
__label__neutral	neutral_1954	Unsetting Fix Version on unassigned issues.
__label__neutral	neutral_1955	"Excellent, the performance is much better."
__label__neutral	neutral_1956	Committed.
__label__neutral	neutral_1957	Bulk close for 3.1
__label__neutral	neutral_1958	"[~lfryc], [~bleathem], [~ppitonak] Do you think guys that those page fragments methods which depend on JSON parsing - aka various {{setupFromWidget}} should throw {{UnsupportedOperationException}} till this issue is resolved ?"
__label__neutral	neutral_1959	"IMHO not, as we can quite quickly implement this, right ?"
__label__neutral	neutral_1960	Applied patch with thanks to Oliver.
__label__neutral	neutral_1961	Bulk close for Solr 1.4
__label__neutral	neutral_1962	Hi Oleg Would you be able to review this one?
__label__neutral	neutral_1963	thanks asankha
__label__neutral	neutral_1964	"Yeah, this was a word which somebody had looked up in Dacco."
__label__neutral	neutral_1965	I saw 'acusament de recepciÃ³' in the GDLC but I wasn't certain what it was in English.
__label__neutral	neutral_1966	Perhaps 'acknowledgement slip' would be the most commonly used term in English?
__label__neutral	neutral_1967	Applied the same fix as in issue 25001 http://cvs.apache.org/viewcvs.cgi/jakarta-commons/dbcp/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java?r1=1.10&r2=1.11&diff_format=h
__label__neutral	neutral_1968	Postponed to 2.0.0-RC1
__label__neutral	neutral_1969	fixed by Shane.
__label__neutral	neutral_1970	"Steve, can you clarify?"
__label__neutral	neutral_1971	I'm not seeing how including a dependency would alter the fundamental behavior of createLink() and createLinkTo() requiring a request object.
__label__neutral	neutral_1972	Here are my thoughts about how it can be approached.
__label__neutral	neutral_1973	Fine with me.
__label__neutral	neutral_1974	On the recommendation of Weinan
__label__neutral	neutral_1975	Resolved in commit 5260 (patch by Vladimir Sizikov)
__label__neutral	neutral_1976	Patch submitted.
__label__neutral	neutral_1977	Please review.
__label__neutral	neutral_1978	Thank you.
__label__neutral	neutral_1979	I filed bug # 42715 with ASF Bugzilla about the ant.version issue.
__label__neutral	neutral_1980	Seems fine to me.
__label__neutral	neutral_1981	Thanks for looking after this.
__label__neutral	neutral_1982	I will be working to integrate this when I am back in CA.
__label__neutral	neutral_1983	Thanks Andy.
__label__neutral	neutral_1984	Added as a subtask [HBASE-6157] to this parent jira.
__label__neutral	neutral_1985	Hope that should be fine.
__label__neutral	neutral_1986	I added the PDType1CFont patch in revision 1425301
__label__neutral	neutral_1987	Clocked asyncs are fixed in r19148.
__label__neutral	neutral_1988	"Since we will have another RC, we decided to include this change in 1.5.2."
__label__neutral	neutral_1989	Attaching patch which incorporates Hemanth's comments.
__label__neutral	neutral_1990	Documentation is still a bit lacking
__label__neutral	neutral_1991	Don't absue the ticketing system
__label__neutral	neutral_1992	I committed {{BasicFunctionalityTest.testHTMLStrip()}} to branch_3x - it succeeds for me with no changes required.
__label__neutral	neutral_1993	The per invocation timeout facility has been added for the rmi and sslrmi transports.
__label__neutral	neutral_1994	Unit test: org.jboss.test.remoting.transport.rmi.timeout.RMIPerInvocationTimeoutTestCase.
__label__neutral	neutral_1995	Thanks for the answer Mohammad wrk.
__label__neutral	neutral_1996	Indeed this saved some time.
__label__neutral	neutral_1997	"Looks like this was fixed in HDFS-3966 (For branch-1, TestFileCreation should use JUnit4 to make assumeTrue work)."
__label__neutral	neutral_1998	"I'm envisioning something like `hdfs dfsadmin -fetchimage <local path>' which would use the existing GetImageServlet to download the fsimage over HTTP, saving it at <local path>."
__label__neutral	neutral_1999	I'm kinda dissapointed.
__label__neutral	neutral_2000	I'm using jruby.bat from jruby 0.9 and it works fine.
__label__neutral	neutral_2001	applied Marnix's patch to trunk.
__label__neutral	neutral_2002	"url: https://192.168.124.100/sdk/vimService, username: Administrator, password: C******"
__label__neutral	neutral_2003	"Note, this used to work fine in 2.7, looking at ""git blame"" output it would seem the regression happened as Niels added support for 3D bboxes"
__label__neutral	neutral_2004	patch looks good.
__label__neutral	neutral_2005	+1 thanks Ivan.
__label__neutral	neutral_2006	"Koji Noguchi, I think this was fixed."
__label__neutral	neutral_2007	I don't see the issue on trunk.
__label__neutral	neutral_2008	Just realize that.
__label__neutral	neutral_2009	Thanks!
__label__neutral	neutral_2010	Can you show me which jira fixed this?
__label__neutral	neutral_2011	I should have tested with trunk before creating this jira.
__label__neutral	neutral_2012	I think I even tried with pig-0.11 to confirm the problem.
__label__neutral	neutral_2013	I'm sorry for the confusion.
__label__neutral	neutral_2014	Thanks Ittay.
__label__neutral	neutral_2015	Can you provide a little more context on this please... 1.
__label__neutral	neutral_2016	Under what runtime conditions are you seeing this.?
__label__neutral	neutral_2017	2
__label__neutral	neutral_2018	Would you have a test that we can use to reproduce?
__label__neutral	neutral_2019	Verified.
__label__joy	joy_196	It's OK.
__label__neutral	neutral_2020	Thanks very much!
__label__neutral	neutral_2021	The -branch-18 patch does not apply to Hadoop 0.18.3.
__label__neutral	neutral_2022	"The only definitions of ""OutputStream baseStream"" are in run(), copyBlock(), and readBlock()."
__label__neutral	neutral_2023	"Raghu, am I correct here?"
__label__neutral	neutral_2024	Resolving the issue as the patch was applied to Airavata trunk.
__label__neutral	neutral_2025	"I see FilteringTokenFilter has a similar first token pos incr fixup, so this problem is handled in at least one other filter."
__label__neutral	neutral_2026	I'll take a broader look tomorrow.
__label__neutral	neutral_2027	"Jacques, if you create separate issues for the erros (icluding the logs) I can take a look them."
__label__neutral	neutral_2028	Thanks for your vote.
__label__neutral	neutral_2029	Any other opinions about the patch?
__label__neutral	neutral_2030	+1 for the patch.
__label__neutral	neutral_2031	Committed to trunk.
__label__neutral	neutral_2032	Thanks Arpit!
__label__neutral	neutral_2033	I think your logic is right.
__label__neutral	neutral_2034	This is what I understand.
__label__neutral	neutral_2035	1
__label__neutral	neutral_2036	FileSystemView is the user file system view so it can have canDelete() and canRead() methods ..... this is fine.
__label__neutral	neutral_2037	2
__label__neutral	neutral_2038	FileSystemView can have user object to indicate whose file system view it is representing.
__label__neutral	neutral_2039	3
__label__neutral	neutral_2040	"In that case, caching will be at the FileSystemView level (not at FileObject level)."
__label__neutral	neutral_2041	Logically this is also fine.
__label__neutral	neutral_2042	NativeFileSystemView represents the underlying OS file system view - no more no less.
__label__neutral	neutral_2043	Caching is a specialized function.
__label__neutral	neutral_2044	So if necessary we can add another FileSystemManager implementation which will support caching.
__label__neutral	neutral_2045	But it may not be appropriate to add this in NativeFileSystem classes.
__label__neutral	neutral_2046	"So the action items: 1. canDelete(), canRead() and canWrite() will be moved to FileSystemView from FileObject."
__label__neutral	neutral_2047	Please review and close out if appropriate.
__label__neutral	neutral_2048	This issue has been fixed by the Harmony-5834.
__label__neutral	neutral_2049	The testcase is helpful for ArrayList.
__label__neutral	neutral_2050	Thanks very much for the contribution.
__label__neutral	neutral_2051	The fixing is available in all builds after r658561.
__label__neutral	neutral_2052	solved in subversion repository as of r818942.
__label__neutral	neutral_2053	patch applied with slight changes thanks for the report and thanks for the patch
__label__neutral	neutral_2054	Thanks for the patch Gustavo.
__label__neutral	neutral_2055	I applied to 0.95 and trunk.
__label__neutral	neutral_2056	I thought there was already a (Hibernate specific?)
__label__neutral	neutral_2057	"Some property which points to a ""DDL file""."
__label__neutral	neutral_2058	"It might have meant to create a DB schema, but perhaps you can just use it to do whatever migration activity that you are looking for?"
__label__neutral	neutral_2059	Please apply the attached patch by doing the following: 1.
__label__neutral	neutral_2060	Add the new file modules\java2wsdl\src est\java\org\apache uscany ools\java2wsdl\generate\ExampleService.java 2.
__label__neutral	neutral_2061	Apply the changes in patch1658 3.
__label__neutral	neutral_2062	Unzip ws-void-args-return under the itest directory 4.
__label__neutral	neutral_2063	"Update the pom for itest to include ws-void-args-return This patch fixes TUSCANY-1658 and TUSCANY-1653, and add an itest to verify the fix."
__label__neutral	neutral_2064	It also includes a corresponding change in java2wsdl to handle the two-way void return case correctly.
__label__neutral	neutral_2065	Applied patch.
__label__neutral	neutral_2066	Thanks!
__label__neutral	neutral_2067	"+1, looks good."
__label__neutral	neutral_2068	"One final note, the error handling should have its own JIRA so that it is addressed one day?"
__label__neutral	neutral_2069	"Oh, and that wiki page for the shell is slightly formatted wrong by the looks, it changes to cursive/italics and stays until the end."
__label__neutral	neutral_2070	And the .irbrc sample output has no line breaks and makes it difficult to read it.
__label__neutral	neutral_2071	Fix race conditions in Balancer.
__label__neutral	neutral_2072	Contributed by Junping Du (szetszwo: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1532932) * /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt * /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
__label__neutral	neutral_2073	Applied the patch to implement Workspace.move
__label__neutral	neutral_2074	We pretty much already had the interface we wanted for this (IFixedLocationResourceStream).
__label__neutral	neutral_2075	I only needed to let MarkupResourceStream also implement it.
__label__neutral	neutral_2076	And then MarkupCache uses that interface to checkout what the actual file is I dont think we will get IResourceStream implementation that are not File or URL and if we do then we fallback on the cachekey only approache.
__label__neutral	neutral_2077	"It seems to work fine for me when i test locally, the markup is only created once per fixed location and then access through cachekey -> locationstring -> markup So if locationString doesn't work we get this: cachekey -> cachekey -> markup But i guess that is a very small percentage if there is even 1 on this planet... should we include this into 1.3.2?"
__label__neutral	neutral_2078	Thanks Tatyana - the third patch was applied to BTI branch 2.0 at r552655.
__label__neutral	neutral_2079	Please check that the patch was applied as you expected and close the issue if everything is OK for you.
__label__neutral	neutral_2080	"Sebastian, as Sonar calls the cobertura maven plugin there is not much we can do."
__label__neutral	neutral_2081	"Until the patch gets applied, you might want to use Emma as coverage engine with the Sonar Emma Plugin (or Clover, but it is free only for a month)"
__label__neutral	neutral_2082	"Hi Matt, Encrypting the serialized component tree will not solve the problem of stale view state."
__label__neutral	neutral_2083	The Sun JSF-RI team have implemented a fix for this issue.
__label__neutral	neutral_2084	It will be available in 1.2_05.
__label__neutral	neutral_2085	"See the following link for more info: https://javaserverfaces.dev.java.net/issues/show_bug.cgi?id=612 Thanks, Ian"
__label__neutral	neutral_2086	the configuration in the POM works fine with 2.4.3.
__label__neutral	neutral_2087	"Patch applied on 2.1.x, 2.2.x and trunk"
__label__neutral	neutral_2088	Just an update: # SOLR-1131: aka poly fields is almost ready to go.
__label__neutral	neutral_2089	Please review.
__label__neutral	neutral_2090	# SOLR-1297: sort by function query just needs review and then can be committed.
__label__neutral	neutral_2091	"After that, we can add in the Cartesian Tier indexing and the Cartesian Tier QParserPlugin (after a little re-write)."
__label__neutral	neutral_2092	Then we need pseudo-fields and we likely want to hook in a per request function cache (maybe)
__label__joy	joy_197	"Hi Suran, The new catalogs_b.patch looks very good."
__label__neutral	neutral_2093	It will need another round or two of adjusting but it is definitely looking solid.
__label__neutral	neutral_2094	I have applied the patch and am running regression tests now.
__label__neutral	neutral_2095	I will post my results when the tests finish.
__label__neutral	neutral_2096	I have some comments on the new patch: PermDescriptor o You should remove the permUUID field from this class since it shadows the oid field in the superclass.
__label__neutral	neutral_2097	"In my experience, this kind of shadowing always causes bugs in the future because it is so easy to lose track of which copy of the redundant field is being used."
__label__neutral	neutral_2098	"So the constructor for this class should call setUUID( permUUID ) rather than stuffing the shadowing field via ""this.permUUID = permUUID""."
__label__neutral	neutral_2099	"o Once you do that, you can get rid of the getUUID(), setUUID(), and getObjectID() methods in this class."
__label__neutral	neutral_2100	o I have reservations about the second constructor for this class (the one which is used to create a key descriptor rather than a full-fledged permissions descriptor).
__label__neutral	neutral_2101	"However, I see that you are following the data dictionary patterns for the other permissions descriptors."
__label__neutral	neutral_2102	I think you are right to follow the existing patterns.
__label__neutral	neutral_2103	But we should put a sticky note on our brains to remind ourselves to clean up this pattern in the future--partially initialized data is brittle.
__label__neutral	neutral_2104	This is something we can revisit when we collapse all of the permissions catalogs into the master catalog which you are creating.
__label__neutral	neutral_2105	"Don't worry, that's another project and not part of the sequence generator work."
__label__neutral	neutral_2106	SYSSEQUENCESRowFactory o I think that you should flip the order of the keys in the second index.
__label__neutral	neutral_2107	"That is, the key order should be ( schemaID, sequenceName ) rather than ( sequenceName, schemaID )."
__label__neutral	neutral_2108	This will speed up the check in DataDictionaryImpl.isSchemaEmpty().
__label__neutral	neutral_2109	"But maybe you have a use for an index with key order ( sequenceName, schemaID ) which I'm not seeing."
__label__neutral	neutral_2110	"If so, then I would recommend adding a third index."
__label__neutral	neutral_2111	"Note that if you swap the key order, then you will need to make a corresponding change to DataDictionaryImpl.getSequenceDescriptor(String, SchemaDescriptor) o I think that buildColumnList() should return an array of 10 column descriptors, one for each column in the table."
__label__neutral	neutral_2112	"See, for instance, the corresponding method in SYSALIASESRowFactory."
__label__neutral	neutral_2113	"SYSROLESRowFactory o As with SYSSEQUENCESRowFactory, I think that buildColumnList() should return a larger array, one cell for each column in the table."
__label__neutral	neutral_2114	DataDictionary o The header comment for getPermDescriptor() does not seem to describe the method.
__label__neutral	neutral_2115	"EmptyDictionary o I think that you can remove the stub for dropSequenceDescriptor(String, TransactionController) because you have removed this method from the DataDictionary interface."
__label__neutral	neutral_2116	"DataDictionaryImpl o The header comments on getUncachedPermDescriptor() getPermDescriptor(), and dropAllPermDescriptors() look like they were copied from pre-existing methods, so they should be revised to describe the new methods."
__label__neutral	neutral_2117	"Thanks, -Rick"
__label__neutral	neutral_2118	See previous comments for earlier commit.
__label__neutral	neutral_2119	This one fixes the end-date issue in the comment bean classes: URL: http://svn.apache.org/viewvc?rev=782269&view=rev And that resolves this issue in the trunk.
__label__neutral	neutral_2120	Thanks Greg!
__label__neutral	neutral_2121	"Hey Chris,you just moved the files right?!"
__label__neutral	neutral_2122	"Vinicus patch only includes a single file (the failing junit), all Uwe need to do is to apply the patch to the moved file, is that correct?"
__label__neutral	neutral_2123	Also applies to the 4.x series
__label__neutral	neutral_2124	The behaviour still occurs in the last snapshot using both Mojarra 2.1 or MyFaces.
__label__neutral	neutral_2125	Attribute 'width' works fine.
__label__joy	joy_198	"Nice feature, lars!!"
__label__neutral	neutral_2126	"Would be nice to have a batch/list functionality as well, like we have for deletes/puts."
__label__neutral	neutral_2127	Are there any (future?)
__label__neutral	neutral_2128	plans to have a multi- version of the atomicMutation?
__label__neutral	neutral_2129	It looks like the problem originates in PDFBOX-11.
__label__neutral	neutral_2130	"Many CID mappings are expressed as ranges, which the code explodes into individual Integer->String pairs."
__label__neutral	neutral_2131	This causes pretty big data structures as many of our CMaps cover 65k possible mappings!
__label__neutral	neutral_2132	We should use a more efficient in-memory representation for such range mappings.
__label__neutral	neutral_2133	"In the same pc I have a outlook client and It work fine, the problem is with xplanner, how can I configurate xplanner for send mails ?"
__label__neutral	neutral_2134	Thanks
__label__neutral	neutral_2135	"ok, I'm looking into this."
__label__neutral	neutral_2136	Okay reviewed and tested patch with sqlite3 and bdb on trunk.
__label__neutral	neutral_2137	One minor correction to configure without sqlite3.
__label__neutral	neutral_2138	#NAME?
__label__neutral	neutral_2139	Have a look at hibernate.common.xml
__label__neutral	neutral_2140	"Hi David, This helps me understand what you were talking about - thanks!"
__label__neutral	neutral_2141	"(Things weren't as clear at 2am ;)) Yes, we should probably definitely be removing the ThreadLocal entirely."
__label__neutral	neutral_2142	I'll make those changes as soon as I can.
__label__neutral	neutral_2143	#NAME?
__label__neutral	neutral_2144	Patch applied in trunk.
__label__neutral	neutral_2145	I have added some buttons to help put variables and patterns.
__label__neutral	neutral_2146	Thank you for your contribution.
__label__neutral	neutral_2147	"applies to trunk, too"
__label__neutral	neutral_2148	"Also #3 seems to be fairly simple with a single ""around"" advice in aspectj and a couple of lines for ajc target in build.xml."
__label__neutral	neutral_2149	"Why use an ad-hoc script that's known (according Erik himself) to have false positive that require manual inspection (which is also not part of the version controlled source tree), when you we have a built-in (aspectj*.jars are already included as build/runtime dependencies) tool specifically for such tasks?"
__label__neutral	neutral_2150	You can do this for info messages too for more performance when that is off.
__label__neutral	neutral_2151	There are no extra lines of code or maintenance; it is the simplest solution.
__label__neutral	neutral_2152	"As long as the change is applied at build time, I don't see any real drawback."
__label__neutral	neutral_2153	"Ah, ok ... thanks for the heads up."
__label__neutral	neutral_2154	"There's a note on the main page about these scripts, but you're right: nothing obvious in some of hte ""sub pages"" I'll take a stab at clarifying."
__label__neutral	neutral_2155	"Changes to the test look good, and your method for finding which are right/wrong is correct."
__label__neutral	neutral_2156	I would advise that a good thing to do once you have fixed this issue is to then perform a similar test modification for setting a valid value and using batching.
__label__neutral	neutral_2157	I've started to work towards support for visualising services and cascading configuration.
__label__neutral	neutral_2158	The changes in this patch aren't a complete solution but they're free-standing give basic service visualisation and shared configuration support.
__label__neutral	neutral_2159	I've introduced a decorator framework for relationships so we can draw the service triangles (or package names).
__label__neutral	neutral_2160	The service handling will need to be updated slightly once we're not working from the DummyInfoProvider.
__label__neutral	neutral_2161	Handling of services which aren't consumed and services which are consumed by multiple bundles is pretty weak.
__label__neutral	neutral_2162	I've also started to add cascading configuration.
__label__neutral	neutral_2163	I've added a Theme class and a ComponentAppearance class which takes defaults from the theme and allows them to be over-ridden.
__label__neutral	neutral_2164	ComponentAppearances will also inherit from one another when we have nested components (like a bundle inside an application).
__label__neutral	neutral_2165	"I've only switched the ComponentColorElement (which was the ComponentColorProperty) over to use the new configuration so far, but I'll switch the other elements over to using the new configuration next."
__label__neutral	neutral_2166	"In the new version, elements have two methods - render(), which draws them, and apply() which initialises shared properties like colour."
__label__neutral	neutral_2167	This allows for a two-phase rendering.
__label__neutral	neutral_2168	"Apply isn't the best name but we're already using update(), so suggestions welcome."
__label__joy	joy_199	:) I've renamed ComponentColorProperty to be ComponentColorElement and RelationshipAggregation to TwistieAggregation.
__label__neutral	neutral_2169	I've also moved RelationshipElement to the elements namespace.
__label__neutral	neutral_2170	These are all svn file deletions which will need to be done by hand when applying the hand.
__label__neutral	neutral_2171	Applied patch
__label__joy	joy_200	Looks like this is fixed :)
__label__joy	joy_201	Version 2.2.0RC3 is fine.
__label__joy	joy_202	Sounds like a good idea.
__label__neutral	neutral_2172	Would anyone have time to put together a pull request?
__label__neutral	neutral_2173	"Hi Preben, I just applied the your patch with a minor modification on FtpConsumerWithCharsetTest.testConsumerWithCharset to use UTF_8 charset by default."
__label__neutral	neutral_2174	"For the CAMEL-3787, I think the key should be on the ftp client configure to find out right charset that the server is using."
__label__neutral	neutral_2175	> MultipartEntity entity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE); Use strict mode instead of browser compatibility.
__label__neutral	neutral_2176	936-2 wasn't patching correctly against the latest flume-728 so here's an updated patchfile now that 935 is available.
__label__neutral	neutral_2177	"Tests pass, but there is some weirdness going on with rat failing on licenses because it tries to examine the surefire reports..."
__label__neutral	neutral_2178	Thanks for supplying the patch.
__label__neutral	neutral_2179	I have applied it in Rev.
__label__neutral	neutral_2180	"Please close this bug, if this is ok for you."
__label__neutral	neutral_2181	"I showed my interest on this idea, in the dev-mailing list, and currently started to explore the requirements and a design."
__label__neutral	neutral_2182	Applied Patch..
__label__neutral	neutral_2183	Thanks
__label__neutral	neutral_2184	"OK, will open the issue with Solr/Lucene."
__label__joy	joy_203	Many thanks for your help.
__label__neutral	neutral_2185	This patch has been around for a while.
__label__neutral	neutral_2186	Does this applies to 0.22 trunk or 0.23 trunk?
__label__neutral	neutral_2187	Thanks.
__label__neutral	neutral_2188	I found the note in the manual about @Resource and that fixes it.
__label__neutral	neutral_2189	At this point I'd suggest peppering the docs with references to @Resource wherever it discusses autowiring things or about collections.
__label__neutral	neutral_2190	"E.g., ""note: if you're trying to auto wire a collection with annotations you'll need to use @Resource instead of @Autowired""."
__label__neutral	neutral_2191	"patch committed in rev 942983, thanks!"
__label__neutral	neutral_2192	I looked at all the TODO's in uimaj-core and found only one Sofa-related exception that needed update.
__label__neutral	neutral_2193	Fixed it's foot.
__label__neutral	neutral_2194	Patch applied.
__label__joy	joy_204	Thank you!
__label__neutral	neutral_2195	"boisvert@sixtine:~/svn/buildr-trunk$ svn commit -m ""BUILDR-283: Misleading documentation on env."
__label__neutral	neutral_2196	"variables (Alexis Midon)"" Sending doc/settings_profiles.textile Transmitting file data ."
__label__neutral	neutral_2197	Committed revision 816738.
__label__neutral	neutral_2198	"The attached patch fixes two problems: * the first one which happen when the class is loaded from the boot classloader (in which case, we now use the system classloader to load the enclosing class) * the second one which is the fact that all kind of linkage errors can happen when loading the class and this would really disturb the classloader correct behavior"
__label__neutral	neutral_2199	Could you please verify and/or adapt your patch against the current version at http://svn.apache.org/repos/asf/commons/proper/jcs/branches/generics-interface I was not able to apply your patch there.
__label__neutral	neutral_2200	"A potentially legitimate use case of a {{set}} without an {{apply}} is a builder class that should not be accessed until the building is complete, at which point the internal state will be accessed directly to produce the final result of some type."
__label__neutral	neutral_2201	Such a class does not really need an {{apply}} method.
__label__neutral	neutral_2202	"However, as a tactical decision imposed by the implementation of the typechecker, we will require a matching {{apply}} method for every {{set}} method, and will reassess this issue later in the context of a possible typechecker redesign."
__label__neutral	neutral_2203	Pull request available here: https://github.com/SpringSource/spring-roo/pull/8 The changes are minor.
__label__joy	joy_205	I've tested them out and everything is fine.
__label__neutral	neutral_2204	I discovered that it works fine with command line.
__label__neutral	neutral_2205	But it does not work when I try it using maven integration plugin for eclipse.
__label__neutral	neutral_2206	I have open a ticket on their side: http://jira.codehaus.org/browse/MNGECLIPSE-1054
__label__neutral	neutral_2207	I would rather not have specific vendor JDK names listed in there if can be avoided anyway.
__label__neutral	neutral_2208	Not sure when it was added.
__label__neutral	neutral_2209	worth investigating.
__label__neutral	neutral_2210	"Committed to branch-2.1-beta, branch-2, and trunk."
__label__neutral	neutral_2211	Thanks for the patch AndrÃ©!
__label__neutral	neutral_2212	+1 the branch-1 patch looks good.
__label__neutral	neutral_2213	"This reviewable, and I think also committable."
__label__neutral	neutral_2214	Thanks for the patch.
__label__neutral	neutral_2215	Committed to 0.8 after reverting the change in system_test/ (the consumer property file there is used for an 0.7 consumer).
__label__neutral	neutral_2216	"Verified, patch applied as expected."
__label__neutral	neutral_2217	"Dyre, thanks for your comments."
__label__neutral	neutral_2218	"I have made a new patch, derby-2108-v4.diff, which have incorporated (most of) your commets."
__label__neutral	neutral_2219	I think I'm ready for commit soon.
__label__neutral	neutral_2220	I did a change to BULIDING.txt adding ${j14lib}/security.jar to java14compile.classpath in the description of how to build with IBM JDK.
__label__neutral	neutral_2221	I have not verified that it works and hope someone would confirm that it's correct.
__label__neutral	neutral_2222	"Jacopo, Thanks for diving in a pointing Scott at the appropriate screens."
__label__neutral	neutral_2223	"David, I completely agree that providing more intelligence in the PO creation process would be very helpful, especially for larger businesses."
__label__neutral	neutral_2224	"I can just about cope with the amount of manual intervention required, but in the not too distant future I can see the need for some of the rules you suggest."
__label__neutral	neutral_2225	"The idea of consolidating POs (or SOs, I guess) came mainly because I end up having multiple small POs for some of my suppliers."
__label__neutral	neutral_2226	"However, I also run into the opposite problem."
__label__neutral	neutral_2227	"For my larger suppliers, I will often have a 100 or more requirements built up."
__label__neutral	neutral_2228	"Since the ""Approved Requirements"" screen paginates the requirements, I'll end up generating multiple orders for the same (large) supplier, simply because the application operates a page at a time."
__label__neutral	neutral_2229	This annoys my suppliers a bit.
__label__neutral	neutral_2230	"I guess the obvious thing to do is to go in and reconfigure the pagination so it doesn't (paginate), but if we had the ability to add items to existing POs then you could still use the pagination mechanism and build up the PO page-by-page (quite handy if your working through your POs during less busy times of the day)."
__label__neutral	neutral_2231	This should have been fixed by commit 26a5b76ee6b77909a7b8d5b00924f12e1671373d.
__label__neutral	neutral_2232	"Verified on my vmware setup, extract volume is working fine now."
__label__neutral	neutral_2233	"I did that first, but then remembered that when I did that in the past, people were unable to apply my patches, w/o doing the svn move themselves."
__label__neutral	neutral_2234	"Anyway, for this file it's not really important I think - a very simple and tiny file, w/ no history to preserve?"
__label__joy	joy_206	Is that ok for this file (b/c I have no idea how to do the svn move now ... after I've made all the changes already) :)
__label__neutral	neutral_2235	"Please keep this open until reverse tests are configured, as we might have new issues coming from them."
__label__neutral	neutral_2236	+1 on patch.
__label__neutral	neutral_2237	@Andrei: Please re-attach patch using --no-prefix option.
__label__neutral	neutral_2238	HadoopQA uses -p0 to apply patches.
__label__neutral	neutral_2239	"Ok, got it, thanks for the explanation."
__label__neutral	neutral_2240	"In any case, the code for the toBytes method is written now, so it should be a simple thing to move it to the PType implementation classes."
__label__neutral	neutral_2241	"It would probably also be worth having optimized versions for primitive values, instead of writing them to an Avro/Writable first to get the bytes representation."
__label__neutral	neutral_2242	"But yeah, that's for another JIRA."
__label__neutral	neutral_2243	An example patch.
__label__neutral	neutral_2244	"Was unable to run the unit test I wrote (because my setup is being a jerk), but I'm more looking for input on the design."
__label__neutral	neutral_2245	"Thanks for the reviews, committed the patch to trunk"
__label__neutral	neutral_2246	"Zdenek, Thank you for working with these components."
__label__neutral	neutral_2247	"I seem to be having trouble applying the patches, though, and I'd hate for all these corrections and improvements to be lost."
__label__neutral	neutral_2248	Do you think you could submit a new patch in a single file (perhaps named with the current date) based on the current SVN head ?
__label__neutral	neutral_2249	That would really help a lot.
__label__joy	joy_207	Thanks once again.
__label__neutral	neutral_2250	Rest of Ender's patch was applied.
__label__neutral	neutral_2251	"It is good to know that pluto has a problem here, but I realy need servlets integrated pluto."
__label__neutral	neutral_2252	@Arnaud: My key looks exactly the same and was generated with Cygwin's ss-keygen.
__label__neutral	neutral_2253	The file has Unix line endings though ... @Lukas: scpexe works for me with M2 despite the fact that it insists on a key even if an agent is running (WAGON-27).
__label__joy	joy_208	bq. OK w/ the latest patch all tests pass for me! Great Awesome! :)
__label__neutral	neutral_2254	Do the same tests work fine on 1.5.0dev?
__label__neutral	neutral_2255	"One of the things I changed in jnr-posix, was to make stat and fstat use stati64 and fstati64 respectively, instead of stat64 and fstat - the last may be why its breaking with jna-posix."
__label__neutral	neutral_2256	"Look in WindowsLibCFunctionMapper.java for the fstat mapping - it may all magically work if you change fstat to map to _fstat64 (note: no 'i' in the name - uses stat64 struct instead of stati64 ... they have different sized atime, ctime, mtime fields)."
__label__neutral	neutral_2257	"Otherwise, the WindowsFileStat structure looks ok, apart from the st_blocks and st_blksize fields at the end, which are not part of the windows stat64 struct, so will probably be filled with either zero, or garbage."
__label__neutral	neutral_2258	Awesome. Thats great to hear!
__label__neutral	neutral_2259	"{quote} Hmm, looks like the backport blew away scrubtest on 1.2 as well."
__label__joy	joy_209	"Great! Awesome! thanks, Dims"
__label__neutral	neutral_2260	Oversight?
__label__neutral	neutral_2261	"{quote} Yes, was an oversight."
__label__neutral	neutral_2262	"Just for clarification, skipBloomFilters is old."
__label__neutral	neutral_2263	#1 and #2 are incorrect.
__label__joy	joy_210	"Great! Awesome work, Nick, and thanks for the clarification, Bill."
__label__neutral	neutral_2264	1: The skipBloomFilters gets called on the index file in RowIndexEntry line 104.
__label__neutral	neutral_2265	"2: In 2.0, the skipBloomFilters will be called on a 1.2 sstable; also, the skipBloomFilters currently is called against any sstable when scrubbing."
__label__joy	joy_211	Great work...this is awesome stuff.
__label__neutral	neutral_2266	I made a preliminary patch to share the idea how this can be fixed.
__label__neutral	neutral_2267	"- This fix works if I run a ""mahout"" from command line against a Hadoop cluster."
__label__neutral	neutral_2268	"A unit test case doesn't work; -Dkey=value is not parsed in ToolRunner but passed through to SparseVectorsFromSequenceFiles, resulting in a parse error."
__label__neutral	neutral_2269	Did I make any mistake?
__label__neutral	neutral_2270	Maybe because a JUnit doesn't really mimic a real hadoop env?
__label__joy	joy_212	great. awesome job sergey!
__label__joy	joy_213	Awesome - great stuff Maria. Thanks!
__label__neutral	neutral_2271	#NAME?
__label__neutral	neutral_2272	"IMHO, Configuration should be the first or the the last arguments."
__label__joy	joy_214	Thanks for doing that Uma.
__label__neutral	neutral_2273	"It looks like there is something about the build scripts that is causing it, because hdfs.proto, where NameSpaceInfoProto is defined, is more or less identical between trunk and branch-2."
__label__joy	joy_215	Wow!
__label__neutral	neutral_2274	Looking forward to using it.
__label__neutral	neutral_2275	I just committed this.
__label__joy	joy_216	Thanks Bryan!
__label__neutral	neutral_2276	Please submit new issues for the other aspects of this that remain unfixed.
__label__neutral	neutral_2277	+1 Patch looks nice.
__label__neutral	neutral_2278	Probably worth adding a third case in testDataDirectories for a URI that includes an authority (file://localhost/path).
__label__joy	joy_217	Patch looks good to me.
__label__neutral	neutral_2279	I've committed this.
__label__joy	joy_218	"Thanks, Jeff!"
__label__neutral	neutral_2280	Resolving as fixed.
__label__joy	joy_219	It is good to have the test.
__label__neutral	neutral_2281	I ran it on current trunk.
__label__neutral	neutral_2282	"It successfully gets the expected exception, but then fails to close FSNamesystem with NPE."
__label__neutral	neutral_2283	So yes it fails but not where you wanted it to.
__label__neutral	neutral_2284	Please open using the JIra workflow and fill in the details.
__label__neutral	neutral_2285	"we improved hash handling in Railo, but we get not the same result with non ascii characters as ACF (with ascii characters everything is fine)."
__label__neutral	neutral_2286	"we cannot find a problem in our implementation anymore, perhaps there is a problem in he ACF implementation that force a other resultat."
__label__neutral	neutral_2287	This looks like it might be a blocker for release.
__label__neutral	neutral_2288	I didn't see anything in subversion?
__label__neutral	neutral_2289	"new version of 01 ""minifies"" type classnames for the standard o.a.c.db.marshal types"
__label__neutral	neutral_2290	"Ok, thanks."
__label__neutral	neutral_2291	Fixed in r1146573
__label__neutral	neutral_2292	"Hi Christian, Jacopo, Not sure if adding ""-Duser.language=en"" is the better way to go, sounds like a camouflage to me."
__label__neutral	neutral_2293	I just committed this.
__label__joy	joy_220	"Thanks, Owen!"
__label__neutral	neutral_2294	Closing issue as per Luis.
__label__neutral	neutral_2295	Added support for the QueryElevationComponent and test case.
__label__neutral	neutral_2296	Or do we act like we always had it?
__label__neutral	neutral_2297	Thanks for the feedback and thanks for taking a stab at this.
__label__neutral	neutral_2298	won't fix.
__label__neutral	neutral_2299	"Hi Robbie, Please could you review this patch?"
__label__neutral	neutral_2300	cheers Keith.
__label__neutral	neutral_2301	"<danielsh> dns done (thanks for the hostname), tb build underway"
__label__neutral	neutral_2302	Committed to trunk.
__label__neutral	neutral_2303	"Marco, I've fixed some minor issues in your patch (including the one you have pointed out) and I've committed it."
__label__joy	joy_221	Thanks!
__label__neutral	neutral_2304	"Hi Guys, I am pretty new to this site."
__label__neutral	neutral_2305	I am wondering when this patch can be accepted?
__label__neutral	neutral_2306	"Thanks, Kevin"
__label__neutral	neutral_2307	Applied the patch into trunk.
__label__neutral	neutral_2308	I just committed this.
__label__joy	joy_222	"Thanks, Dhruba!"
__label__neutral	neutral_2309	Violated again in r960471.
__label__neutral	neutral_2310	I'll take a look at this for the next release (after 1.5.11).
__label__neutral	neutral_2311	Committed to trunk (0.12).
__label__neutral	neutral_2312	Thanks Viraj and Cheolsoo.
__label__neutral	neutral_2313	[~maysamyabandeh] Got time to look at this today.
__label__neutral	neutral_2314	"There are tests in Mahout-integration that are using DummyRecordWriter - TestConcatenateVectorsJob and RegexMapperTest, and are failing with this patch."
__label__neutral	neutral_2315	I'll take a stab at this again but could you verify this patch against the present trunk?
__label__neutral	neutral_2316	patch applied.
__label__neutral	neutral_2317	Thanks!
__label__neutral	neutral_2318	How about a slightly different take?
__label__neutral	neutral_2319	Please take a look at the patch and let me know if it fixes the problem for you.
__label__neutral	neutral_2320	Vadim you're keeping us busy :).
__label__joy	joy_223	Patch applied with thanks!
__label__neutral	neutral_2321	"Hello, I see Uwe has commented on SOLR-1657 that he would help convert tokenstreams to the new api, but he needs this patch (the tests) applied first."
__label__neutral	neutral_2322	Is it possible for someone to take a look at this patch to get things moving along?
__label__neutral	neutral_2323	"its only tests, no source code changes."
__label__neutral	neutral_2324	"Leo, thanks for the patch - applied at r488522."
__label__joy	joy_224	Looks quite perfect after solving PDFBOX-490.
__label__neutral	neutral_2325	I did translate some Labels to german language.
__label__neutral	neutral_2326	fPIC rings a bell on amd64.
__label__neutral	neutral_2327	"What are the disadvantages to adding -fPIC (a) for amd64 only, (b) for all platforms?"
__label__neutral	neutral_2328	This is fixed in V2 and an automated regression case has been created.
__label__neutral	neutral_2329	Closing
__label__neutral	neutral_2330	Thanks Sanjay for the review.
__label__neutral	neutral_2331	I have committed this.
__label__neutral	neutral_2332	(My 0.8 checkout was on the 0.8.6 tag when I reported that CliTest worked completely.)
__label__neutral	neutral_2333	I committed this.
__label__joy	joy_225	"Thanks, Ashish!"
__label__neutral	neutral_2334	Patch checked in.
__label__joy	joy_226	"Many thanks, Neeme."
__label__neutral	neutral_2335	Thanks for the patch.
__label__neutral	neutral_2336	It has been applied to the trunk.
__label__neutral	neutral_2337	I'll commit this soon unless there are objections.
__label__neutral	neutral_2338	Thanks for the patch Glen.
__label__neutral	neutral_2339	I'm gonna review it and apply.
__label__neutral	neutral_2340	Can this be closed Martijn?
__label__joy	joy_227	Thanks for the help BJ!
__label__neutral	neutral_2341	Committed to trunk 1384014
__label__joy	joy_228	thanks Tomas!
__label__neutral	neutral_2342	"Resolved, fixed!"
__label__joy	joy_229	Thanks!
__label__neutral	neutral_2343	Please review this for me!
__label__neutral	neutral_2344	Thanks!
__label__neutral	neutral_2345	This is not a Camel issue but a CXF.
__label__neutral	neutral_2346	committed.
__label__neutral	neutral_2347	"(looks like these were introduced in CASSANDRA-1714, fwiw, so i'm going to tag affects-version to 0.7.1)"
__label__neutral	neutral_2348	"Released with GEP 221, so I close this JIRA."
__label__neutral	neutral_2349	Untar this to populate the position_hints table.
__label__joy	joy_230	Applied patch with thanks to Scott.
__label__neutral	neutral_2350	Change the summary to match the real issue.
__label__neutral	neutral_2351	You are absolutely right.
__label__neutral	neutral_2352	There must be some side effect in my project that circumvented this problem until 6.8.0.
__label__neutral	neutral_2353	Sigh .... Do you think that is something that can be fixed in Wicket or some kind of IE8 madness that i should look to solve on my side?
__label__neutral	neutral_2354	Edison can you check on this issue looks like the fix is not working
__label__neutral	neutral_2355	Committed with rv800094
__label__neutral	neutral_2356	Patch for aggressive GC test
__label__joy	joy_231	Enjoy!
__label__joy	joy_232	thanks to Ernst Fastl for adding this.
__label__neutral	neutral_2357	OK to close?
__label__neutral	neutral_2358	"Oracle 7u40 runs just fine on Debian, I can't imagine it wouldn't work on Ubuntu."
__label__neutral	neutral_2359	Tested with both JBoss EAP 5.x and Geronimo 2.2.x
__label__neutral	neutral_2360	Fixed in 426832.
__label__neutral	neutral_2361	"you seem knowledgeable, what not submit a patch."
__label__neutral	neutral_2362	Applied to trunk.
__label__joy	joy_233	Thanks for the patch Mubarak.
__label__neutral	neutral_2363	I just committed this.
__label__neutral	neutral_2364	"Thanks, Jothi!"
__label__neutral	neutral_2365	I've just committed this.
__label__joy	joy_234	Thanks Koji!
__label__neutral	neutral_2366	resolved in r950171
__label__neutral	neutral_2367	If possible can you make sure the patch is checkstyle compliant?
__label__neutral	neutral_2368	Resolved in 1.0.1-SNAPSHOT.
__label__joy	joy_235	Long Life MyFacesssssssssss!
__label__joy	joy_236	"Looks good, thanks Laura!"
__label__neutral	neutral_2369	Committed to trunk with revision 447502.
__label__neutral	neutral_2370	Will leave open until merged to 10.2
__label__neutral	neutral_2371	Committed to 3.4.6 and trunk.
__label__joy	joy_237	Thanks Ashish!
__label__joy	joy_238	"Thank you, guys!"
__label__joy	joy_239	Thanks Ashutosh and Gunther for your help!
__label__neutral	neutral_2372	This patch has been improved a lot.
__label__joy	joy_240	I really appreciate your comments and I really enjoy our discussions:)
__label__neutral	neutral_2373	What classes were changed for this fix?
__label__neutral	neutral_2374	Would like to pick up this fix with the stable release if possible.
__label__neutral	neutral_2375	"My testing turns up not issues, so , once again, thanks for finding this Rick, I'd gone blind to the problem and it was driving me mad!"
__label__neutral	neutral_2376	"Enis/Ashutosh, we can try coming up with the testcase."
__label__neutral	neutral_2377	"But, in the meanwhile, can I upload a patch which reverts this ?"
__label__neutral	neutral_2378	"dead branch, no sure which code generator it's talking about"
__label__joy	joy_241	Awesome work: this is a great first cut!
__label__neutral	neutral_2379	Patch is committed to trunk.
__label__joy	joy_242	Thanks to Edward and Brock for the reviews.
__label__neutral	neutral_2380	"Btw, I only get this error in LDAP Studio."
__label__neutral	neutral_2381	Not in LDAP Browser 2.8.2 or MS AD Explorer.
__label__neutral	neutral_2382	Thanks.
__label__joy	joy_243	Looks good.
__label__neutral	neutral_2383	TestSkewedJoin finishes when you give it enough time (a mere 49 minutes) and the other tests I ran passed as well.
__label__neutral	neutral_2384	"Milinda, patch applied !"
__label__neutral	neutral_2385	Zhenxiao I left comments on Phabricator.
__label__neutral	neutral_2386	"Hi Sergey, thanks for the patch."
__label__neutral	neutral_2387	But why have you added testPropertyChangePropertyChangeEvent test?
__label__neutral	neutral_2388	Or at least has some relation to above problem?
__label__neutral	neutral_2389	I will revert tomorrow if less-hacky alternative suggested above continues unaddressed.
__label__neutral	neutral_2390	Your explanation sounds reasonable and the patch looks safe to me.
__label__neutral	neutral_2391	+1 for the patch.
__label__joy	joy_244	"Thank you, Ivan!"
__label__neutral	neutral_2392	After talking with Steve B. we decided that the DAS should insist that datagraph root is passed to the ApplyChanges command.
__label__neutral	neutral_2393	An error is now thrown if this is not the case.
__label__neutral	neutral_2394	The fix for test_no_extension was merged in PIG-2505.
__label__neutral	neutral_2395	So this is ready for merging?
__label__joy	joy_245	:D
__label__neutral	neutral_2396	This is now resolved in ActiveMQ 4.0 as we have a DemandBasedForwardingBridge which only forwards messages to another broker when there is a consumer for it
__label__neutral	neutral_2397	"Jacques, Why concatenate the patches?"
__label__neutral	neutral_2398	"Thanks guys, Bharat your patch is in trunk at revision: 754834 ."
__label__neutral	neutral_2399	I only review as Pranay tested successfully.
__label__joy	joy_246	"Thanks to both of you, and to Deepesh for the initiative."
__label__neutral	neutral_2400	Should we close this one now that we went a different route (zero javadoc warnings?)
__label__neutral	neutral_2401	Thanks for the clarification.
__label__joy	joy_247	Cool.
__label__joy	joy_248	Sounds like a good idea.
__label__joy	joy_249	"Cool, that's all good news too! Thanks guys. One less on my radar."
__label__joy	joy_250	cool man it looks good. we need a changes entry but from my side this looks good. we can tackle the todos on trunk
__label__joy	joy_251	Looks pretty cool. Fresh and minimalist. Love it :-) Good work.
__label__joy	joy_252	"Cool, will do! Thanks for the review and good questions... and the whole idea! :)"
__label__joy	joy_253	This looks good to me.
__label__joy	joy_254	Automatic location selection is very cool.
__label__neutral	neutral_2402	Patch applied in SVN revision 743258
__label__love	love_565	Thanks Tony.
__label__neutral	neutral_2403	Patch applied to LUNI module at repo revision r494822.
__label__neutral	neutral_2404	Please check that the patch was applied as you expected.
__label__love	love_566	Thanks for providing the patch.
__label__neutral	neutral_2405	I have applied it in Rev.
__label__neutral	neutral_2406	Patch applied.
__label__love	love_567	Thank you!
__label__neutral	neutral_2407	"+1, if the test is problematic, we can always either comment out the new test, or @Ignore it, and add a note."
__label__neutral	neutral_2408	The changes look good.
__label__neutral	neutral_2409	+1 for commit.
__label__love	love_568	Thanks Laura.
__label__neutral	neutral_2410	I think allUserRegionsOffline should be declared inside {code} } else if (this.stopping) { {code} block.
__label__neutral	neutral_2411	Have you run test suite ?
__label__neutral	neutral_2412	The piece of cake was bigger than my mouth... Postponed.
__label__love	love_569	Thanks Kathey.
__label__neutral	neutral_2413	Please look at this patch (d962_javadoc.2.diff.txt) I ran javadoc and did clobber and ant all ok.
__label__neutral	neutral_2414	Thanks.
__label__neutral	neutral_2415	Applied patch with thanks to Dan :)
__label__neutral	neutral_2416	Changed the patch as per Thejas's suggestion.
__label__love	love_570	"Thanks Adrien for looking into this, nice explanation!"
__label__love	love_571	"Super, I'll commit shortly -- thanks Yonik!"
__label__neutral	neutral_2417	"Thanks, patch applied"
__label__neutral	neutral_2418	"Added comment before ""Path getPath()"" to address Todd's comment."
__label__love	love_572	"Thanks a lot, Jon for signing up this."
__label__neutral	neutral_2419	Actually I thought to take a look on this weekend.
__label__neutral	neutral_2420	Unfortunately I may not be able to look on this weekend as came out of station.
__label__neutral	neutral_2421	Thanks for taking this:-)
__label__neutral	neutral_2422	Committed to master.
__label__love	love_573	"Thanks, Sravya!"
__label__neutral	neutral_2423	"Hi Myrna, Are you recommending that we commit this patch but that additional work be put into analyzing LocalizedDisplay.sql and LocalizedConnectionAttribute.sql?"
__label__love	love_574	I like Richards update as well :) What I did was out of pure anger so it may not have been the sexiest.
__label__neutral	neutral_2424	"Jason, I checked...you have karma as you are in the ""jira-administrators"" group."
__label__neutral	neutral_2425	Please go ahead and create it.
__label__neutral	neutral_2426	"thanks, dims"
__label__neutral	neutral_2427	"Patch applied, thanks."
__label__neutral	neutral_2428	Vote is here: http://markmail.org/thread/yg6n646zurlpdmvy
__label__neutral	neutral_2429	"Thanks, is that everyone has to create an account and then you will link them to Pig Confluence?"
__label__neutral	neutral_2430	I just committed this.
__label__love	love_575	Thanks [~cnauroth] & [~tomwhite] for the reviews!
__label__neutral	neutral_2431	The patch looks fine.
__label__neutral	neutral_2432	I'll commit once hudson +1s it.
__label__love	love_576	Thanks for being patient Devaraj!
__label__love	love_577	"Hi Bruno, I like it, seems to work well at 1st glance Thanks!"
__label__neutral	neutral_2433	I just committed this.
__label__love	love_578	"Thanks, Adrian!"
__label__neutral	neutral_2434	"that what WebRenederendingServices are for, not sure WebDescriptionProvider could be declared to be a WebRenderingService."
__label__neutral	neutral_2435	OK You are correct about that.
__label__neutral	neutral_2436	I ran it from the base and it looks good.
__label__neutral	neutral_2437	Thanks +1
__label__neutral	neutral_2438	"Adrian, I cannot find the listVisualThemes.ftl file in your last patch."
__label__neutral	neutral_2439	From your comments I guess you changed it.
__label__love	love_579	Thanks Bob your patch is in trunk at r932317
__label__love	love_580	thanks again Uwe
__label__neutral	neutral_2440	"Hi, Would you please try my patch?"
__label__neutral	neutral_2441	The patch also fixes a typo in StreamHandlerTest.java.
__label__neutral	neutral_2442	Thanks!
__label__love	love_581	"Best regards, Andrew"
__label__neutral	neutral_2443	Better to have the samples run on the fly :-) .
__label__love	love_582	"Thanks, Alexei!"
__label__neutral	neutral_2444	Now it works as expected.
__label__neutral	neutral_2445	"Looks fine, Sreekanth."
__label__neutral	neutral_2446	"Leo, patch applied at revision r438040, thanks a lot for this enhancement, please verify that the problem is fully fixed as you expected."
__label__love	love_583	"Thanks, Myrna."
__label__neutral	neutral_2447	Applied patch with thanks to Christian.
__label__neutral	neutral_2448	Patch d1544-patch2-v2.diff committed revision 429036 - Thanks Deepa
__label__neutral	neutral_2449	Committed.
__label__love	love_584	Thanks Tom!
__label__neutral	neutral_2450	So returning an empty string in such case.
__label__neutral	neutral_2451	This irritates me on a weekly basis.
__label__neutral	neutral_2452	I'm often running ad-hoc analysis in grunt with snippets taken from some heavier scripts I've written and I get bitten ALL the time.
__label__neutral	neutral_2453	Hi Mario Ivankovits Pls give some suggestion on above comment
__label__neutral	neutral_2454	"HI Harry, I am new to JSPWIKI and based on the error I chose the Security issue."
__label__neutral	neutral_2455	You can choose to ignore or modify it.
__label__neutral	neutral_2456	I am still not able to run JSPWiki in Oracle Jdeveloper 10.1.3.3.0.
__label__love	love_585	"Thank you, + Harit Himanshu"
__label__neutral	neutral_2457	"Hi Subramanyam, Any updates on this issue yet?"
__label__love	love_586	"Thanks, Arvind"
__label__love	love_587	Committed a slightly cleaned up version of the patch in revision: 1464605 Thanks for your help Todd.
__label__neutral	neutral_2458	Fixed in http://svn.eu.apache.org/viewvc?view=rev&revision=707319 Many thanks to Ulhas for providing the patch!
__label__neutral	neutral_2459	Hi Andrus I cleaned up for one of our projects successfully the comments and could import it into CayenneModeler - great!
__label__neutral	neutral_2460	Attach patch v2.
__label__neutral	neutral_2461	Consolidate all error handling in KafkaServerStarble.
__label__neutral	neutral_2462	The patch looks fine .
__label__neutral	neutral_2463	I was sure It's in CVS already.
__label__neutral	neutral_2464	Let's commit it .Thanks!
__label__neutral	neutral_2465	"@Stack, @Ted Can u people have a look at the patch pls?"
__label__neutral	neutral_2466	"Namit, what do you by ""describe div""?"
__label__neutral	neutral_2467	There is a test udf_divider.q in the patch.
__label__neutral	neutral_2468	Do you mean more test cases?
__label__neutral	neutral_2469	"Hi Pepijn, Can you please take a look at r1215075 ?"
__label__neutral	neutral_2470	Thanks!
__label__neutral	neutral_2471	"It works perfectly with the latest 2.7.8-SNAPSHOT, thanks !"
__label__neutral	neutral_2472	Done at rev.
__label__love	love_588	897392 Thanks Sharan !
__label__love	love_589	Thanks Karthik.
__label__neutral	neutral_2473	The latest patch looks good to me.
__label__love	love_590	"Thanks Andrew, committed in rev."
__label__neutral	neutral_2474	fixed in svn r344339.
__label__love	love_591	thanks edgar for finding this one!
__label__neutral	neutral_2475	"Tony, in native codes, I think the hymem_allocate/free_memory is preferred than malloc/free?"
__label__love	love_592	Thanks Ilya.
__label__neutral	neutral_2476	Patch applied to TEXT module at repo revision r450026.
__label__neutral	neutral_2477	Please check that it was applied as you expected.
__label__neutral	neutral_2478	"Patch looks good to me & has been committed, thanks!"
__label__neutral	neutral_2479	Fixed at revision 936652.
__label__neutral	neutral_2480	Applied patch from Keheliya Gallaba.
__label__neutral	neutral_2481	Fix applied to master (6d1d23b7d0eba4de3c4097907adc37b09191196e).
__label__neutral	neutral_2482	1
__label__love	love_593	Thanks Jimmy.
__label__neutral	neutral_2483	"+1 before committing, do you mind combining the new test with one of the existing ones?"
__label__neutral	neutral_2484	Trying to keep the test suite at under 24 hours :)
__label__love	love_594	Thank you Jing for the review.
__label__neutral	neutral_2485	I've committed the patch.
__label__neutral	neutral_2486	+1 I committed this.
__label__love	love_595	"Thanks, Ravi!"
__label__neutral	neutral_2487	Leaks file handles via IW.getReader()
__label__neutral	neutral_2488	+1 I just committed this.
__label__love	love_596	Thanks Sandy.
__label__neutral	neutral_2489	I can't apply 0002 cleanly to trunk.
__label__neutral	neutral_2490	"Thanks,"
__label__love	love_597	"Hello Leo The patch has been applied at revision r479576, thanks a lot for this enhancement, please verify that the problem is fully fixed as you expected."
__label__neutral	neutral_2491	"Yes, we could enable junit's fork mode."
__label__neutral	neutral_2492	I will have a look at this.
__label__neutral	neutral_2493	But it would be better if you could provide a patch ;-) Thanks again.
__label__love	love_598	"Best regards, Richard"
__label__neutral	neutral_2494	"Hi Uwe, I updated the patch, now it uses TermRangeQuery and does not cast anymore getAttribute"
__label__neutral	neutral_2495	On 2009-11-18 04:47:59.970 dloverin commented: Revision 11926.
__label__neutral	neutral_2496	I committed the patch to branch-1 as well.
__label__love	love_599	Thank you Jing.
__label__neutral	neutral_2497	"+1, patch looks good to me."
__label__neutral	neutral_2498	I'm going to commit this momentarily.
__label__neutral	neutral_2499	All the regression tests ran cleanly with client-imports.diff.
__label__neutral	neutral_2500	Committed revision 946641.
__label__neutral	neutral_2501	Daryn - did you get a chance to review the latest patch for this?
__label__neutral	neutral_2502	Fixed in rev 1137251 and 1137252.
__label__love	love_600	Thanks for your work on this Allen!
__label__neutral	neutral_2503	Patch submitted.
__label__neutral	neutral_2504	Please review.
__label__love	love_601	Thank you.
__label__love	love_602	Forgot to mention: Thanks to Alejandro and his team for pointing this one...
__label__neutral	neutral_2505	PIG-1912-3.patch address Santhosh's review comments
__label__neutral	neutral_2506	Okay.
__label__neutral	neutral_2507	Anyone else want to chime in?
__label__neutral	neutral_2508	"If no other objections, let's commit Clint's patch since it works for him."
__label__neutral	neutral_2509	Thanks for the patch.
__label__neutral	neutral_2510	I polished and fixed CS as well.
__label__neutral	neutral_2511	I updated the wiki doc for the sqs component as well.
__label__love	love_603	Thanks Karl.
__label__love	love_604	Please contact me if you need any clarifications.
__label__neutral	neutral_2512	Thanks.
__label__neutral	neutral_2513	I just committed this.
__label__love	love_605	Thanks Tom!
__label__neutral	neutral_2514	"This behaviour is correct, as this is a test for pluto and not a generic JSR 168 test."
__label__neutral	neutral_2515	"Hi Anil, Did you get chances to review and test?"
__label__neutral	neutral_2516	Go for it (provided it works ;-) Will need to test XSP samples and make a note somewhere in the docs.
__label__neutral	neutral_2517	i've attached a libs.zip that contains bookkeeper and zookeeper libraries.
__label__neutral	neutral_2518	i suggest that we commit this ASAP and then do the work to fix the build once the code is in subversion.
__label__love	love_606	thanks for the explanation.
__label__neutral	neutral_2519	I will try your suggestions
__label__neutral	neutral_2520	"Patch was applied, analyzers can now be instantiated by writing some javascript to be executed on the server side."
__label__love	love_607	"Thanks Oliver, that's fixed it."
__label__neutral	neutral_2521	"Patch applied, thanks"
__label__neutral	neutral_2522	New 2.0.5 and 2.1 snapshots are deployed that contain the fixes.
__label__neutral	neutral_2523	Can you give them a try and make sure it's all OK?
__label__neutral	neutral_2524	Thanks!
__label__neutral	neutral_2525	"reviewed, looks good."
__label__neutral	neutral_2526	Applied patch in r637925
__label__neutral	neutral_2527	"Alejandro Abdelnur, sorry I don't get it, what history you want to keep?"
__label__neutral	neutral_2528	and how can I verify the history is not lost?
__label__neutral	neutral_2529	Sounds like JavaScript samples are now being done in TUSCANY-287
__label__neutral	neutral_2530	"Jacopo & Anil, Here is the patch for this issue."
__label__neutral	neutral_2531	I'd say last Sun JDK 1.5 as it's still the one recommended for OFBiz (even if I guess most of us use 1.6)
__label__neutral	neutral_2532	Committed the patch to trunk (revision 63660) and branches/2.1 (revision 636606).
__label__love	love_608	Thanks a lot!
__label__neutral	neutral_2533	Excellent!
__label__neutral	neutral_2534	Looks we all ran into the same issue with TCK.
__label__neutral	neutral_2535	Good verification.
__label__neutral	neutral_2536	Sorry about your signal :-(
__label__neutral	neutral_2537	"> Attached is d1644_combined_v3.diff, a patch proposal which combines the two previous code change patches."
__label__neutral	neutral_2538	I will try to review the latest patch sometime today...
__label__love	love_609	"Adrian, thanks for the patch: rev."
__label__neutral	neutral_2539	540843 I'm leaving this issue open because a similar patch should be applied to the ecommerce/includes/language.ftl file Jacopo
__label__neutral	neutral_2540	Just updated and ran through a few test runs -- haven't seen this since.
__label__neutral	neutral_2541	Sorry that this patch seems to have slipped through the cracks.
__label__neutral	neutral_2542	"Hi, Corinne, did you attach the wrong patch?"
__label__neutral	neutral_2543	"Yes, it seems that in some cases the exceptions are swallowed and e.printStackTrace() is heavily used."
__label__love	love_610	"thanks, nandana"
__label__neutral	neutral_2544	"Yes, You are right [~jiannan], If the {{bkActiveLedgersSnapshot}} contains ledgers which are > {{lRange.end()}}, then there is no chance of being gc'ed in the current gc call."
__label__neutral	neutral_2545	"But if one more ledger is created, then on next gc call, all ledgers deleted ( which are having lesser ledgerId than latest created) will be gc'ed."
__label__love	love_611	"Thanks for review and test case, Knut."
__label__neutral	neutral_2546	Committed revision 642996.
__label__neutral	neutral_2547	(Both the patch and the JUnit tests).
__label__neutral	neutral_2548	"Yes, that makes perfect sense to me."
__label__neutral	neutral_2549	Committed.
__label__love	love_612	Thanks Suresh.
__label__neutral	neutral_2550	Patch looks very good.
__label__neutral	neutral_2551	1
__label__neutral	neutral_2552	"@Jon, +1 the patch looks good."
__label__love	love_613	Thanks for your patience.
__label__neutral	neutral_2553	Committing now..
__label__love	love_614	"Hi Atul, that looks good at a first glace."
__label__neutral	neutral_2554	I'll have a deeper look this evening.
__label__neutral	neutral_2555	:-) Cheers
__label__neutral	neutral_2556	I committed the patch.
__label__love	love_615	Thank you Ravi.
__label__love	love_616	"+1, thanks Tom!"
__label__neutral	neutral_2557	I had a look at the rpm side and it looks ready to commit.
__label__neutral	neutral_2558	Thanks for the patch!
__label__neutral	neutral_2559	Hi Kevin - Any update on this.
__label__neutral	neutral_2560	Thanks
__label__neutral	neutral_2561	+1 on patch.
__label__neutral	neutral_2562	It looks like what was applied to trunk.
__label__neutral	neutral_2563	Is that so Ram?
__label__neutral	neutral_2564	aim to merge patches and publish for review by this coming weekend
__label__neutral	neutral_2565	"some tests are still problematic, at least on windows..."
__label__neutral	neutral_2566	"I think perhaps some of the crazier ones like DiskFull, TestCrash, anything that has to disable MockDirectoryWrappers's checks because they must create corrupt indexes or other scary things."
__label__neutral	neutral_2567	Hi Jeremias.
__label__neutral	neutral_2568	Looks fine to me.
__label__neutral	neutral_2569	"Applied, thanks!"
__label__neutral	neutral_2570	Can I get a +1 from someone else.
__label__neutral	neutral_2571	Should be a quick review.
__label__neutral	neutral_2572	Thanks.
__label__neutral	neutral_2573	Thanks for the reviews everyone.
__label__neutral	neutral_2574	"Jan, I looked that the logic again I think your are right."
__label__neutral	neutral_2575	When I did a quick glance last time I only saw the isolated patch and didn't see enough context to see the existing retry logic.
__label__neutral	neutral_2576	(review board is helpful).
__label__neutral	neutral_2577	Mind adding some comments explaining why this is ok to retry?
__label__neutral	neutral_2578	(We are retrying once and if we fail twice we give up).
__label__neutral	neutral_2579	It seems strange to me that we are retrying something that throws a DoNotRetyIOException.
__label__neutral	neutral_2580	Anyone else have any comments?
__label__neutral	neutral_2581	ok... i will change it then and keep in mind in case we run into odd issues permission wise.
__label__love	love_617	"Thanks, Joseph!"
__label__neutral	neutral_2582	Patch committed.
__label__neutral	neutral_2583	Patch committed to trunk.
__label__neutral	neutral_2584	Applied jackrabbit-core patch in revision: 949724
__label__neutral	neutral_2585	This newest patch applies cleanly and tests all pass.
__label__neutral	neutral_2586	"Personally, I'm +1 to commit."
__label__neutral	neutral_2587	I'd like for Stack or Jim to take a look at it before we commit it.
__label__love	love_618	"Thanks again for this really great patch, Andrew."
__label__neutral	neutral_2588	You've knocked out a really ambitious bit of work here.
__label__love	love_619	Hi Edward Thanks for spotting it.
__label__neutral	neutral_2589	Committed to master.
__label__neutral	neutral_2590	Everything is ok.
__label__neutral	neutral_2591	Thanks.
__label__neutral	neutral_2592	Verified at revision 473588.
__label__neutral	neutral_2593	"Hi Uma, thanks for taking a look."
__label__neutral	neutral_2594	h2108_20110727b.patch: fixed DatanodeManager constructor and activate(..).
__label__neutral	neutral_2595	Unable to apply cleanly.
__label__neutral	neutral_2596	Patch applied in revision 889133.
__label__love	love_620	Thanks Andrew - the patch was applied to SQL module at r525019.
__label__neutral	neutral_2597	Please check that the patch was applied as you expected.
__label__love	love_621	"Thanks for taking care of this, Alejandro."
__label__neutral	neutral_2598	combined patch against 1.0
__label__neutral	neutral_2599	"Screens too big to attach: https://www.dropbox.com/s/p2e2gvi87vw772n/cordova_screens.psd Eventually this should go on the Cordova website, and not the repo, I think."
__label__love	love_622	"Fixed in svn revision 533916. thanks, dims"
__label__love	love_623	Thanks Oliver.
__label__neutral	neutral_2600	Verified.
__label__neutral	neutral_2601	All the changes are correct.
__label__neutral	neutral_2602	New patch looks good (nice comment on why NODELAY).
__label__neutral	neutral_2603	Let me test it.
__label__neutral	neutral_2604	Subversion dump file.
__label__neutral	neutral_2605	I found the same issue about unparkSuccessor with the latest snapshot also.
__label__neutral	neutral_2606	Please take a look and see what else needs to be fixed.
__label__love	love_624	Thanks a lot for your help!
__label__neutral	neutral_2607	"+1, the latest patch looks good to me."
__label__neutral	neutral_2608	I'm going to commit this momentarily.
__label__neutral	neutral_2609	The patch looks good.
__label__neutral	neutral_2610	1
__label__neutral	neutral_2611	"Hi Claus, Please find the attached patch and zip files containing the changes you recommended."
__label__neutral	neutral_2612	I will check-in this version...
__label__love	love_625	"Cheers, Ashwin..."
__label__love	love_626	Thanks Martina.
__label__neutral	neutral_2613	I will look at applying this later today.
__label__neutral	neutral_2614	I just committed this.
__label__love	love_627	Thanks Christian.
__label__neutral	neutral_2615	"+1, the latest patch looks good to me."
__label__neutral	neutral_2616	"Allen, has Jon addressed all of your concerns?"
__label__neutral	neutral_2617	"If so, I'll go ahead and commit this patch."
__label__neutral	neutral_2618	Please let me know.
__label__neutral	neutral_2619	Committed r1463555.
__label__love	love_628	"Thanks for taking a look, Jiannan"
__label__neutral	neutral_2620	"Alejandro, we are in a middle of the release right now, but I'll work on that over the weekend, perhaps."
__label__love	love_629	"@mahadev - I would love to help test a patch :) I'm currently using 3.3.1 + ZOOKEEPER-744 + ZOOKEEPER-790, applied in that order."
__label__neutral	neutral_2621	This patch fixes the issue: # Short circuits the MUST_PASS_ONE case just like it is done in the MUST_PASS_ALL case.
__label__neutral	neutral_2622	# filter.filterRow() is called *after* filterKeyValue in the normal flow of things.
__label__neutral	neutral_2623	This makes the test do the same where it matters.
__label__neutral	neutral_2624	I am quite skeptical about this.
__label__neutral	neutral_2625	+1 (subject to hudson)
__label__love	love_630	"Thanks Atul, Your patch is in trunk at r933169 I just added some ""mod for OFBiz layered lookups"" comments around changes as suggested Sascha"
__label__love	love_631	Thanks for you work on this Jayachandra.
__label__neutral	neutral_2626	verified by Paulex
__label__neutral	neutral_2627	"Ashu, Please take a look at http://cvs.apache.org/viewcvs.cgi/xml-xerces/java/src/org/apache/xerces/dom/DeepNodeListImpl.java (mentioned by jongjin) -- dims"
__label__neutral	neutral_2628	This issue is fixed.
__label__neutral	neutral_2629	Fixing this issue led to the next issue.
__label__neutral	neutral_2630	"(will commit after Hudson +1s, that is)"
__label__love	love_632	"Thanks Areek, new patch looks great; I'll commit shortly."
__label__neutral	neutral_2631	"HI Christian, I've applied your patches to trunk."
__label__neutral	neutral_2632	Looking good.
__label__neutral	neutral_2633	Thanks.
__label__neutral	neutral_2634	Could you verify the fix against the next nightly snapshot?
__label__neutral	neutral_2635	"Updated patch to work with the latest shindig revision, that is, subversion revision 727075."
__label__neutral	neutral_2636	Are there snapshots of the volumes belonging to the VM?
__label__neutral	neutral_2637	"Thanks, rev."
__label__love	love_633	"Thanks a lot, Kiran for the patch."
__label__neutral	neutral_2638	Changes looks good.
__label__neutral	neutral_2639	"@Ivan, could you please add your comments?"
__label__neutral	neutral_2640	"if you like, please push this in."
__label__neutral	neutral_2641	"When I put this patch it did not have this issue,Let me update the patch."
__label__neutral	neutral_2642	Thanks for finding this out.
__label__love	love_634	"Thanks, Mayank"
__label__neutral	neutral_2643	+1 for the patch.
__label__neutral	neutral_2644	I committed it.
__label__love	love_635	Thank you Thejas for the patch and Ivan for the review.
__label__neutral	neutral_2645	I'm not very familiar with ant but i'd think it's just a wildcard for a classpath.
__label__love	love_636	Thanks Alejandro .
__label__neutral	neutral_2646	I misunderstood your comments.
__label__neutral	neutral_2647	Thanks for the clarification.
__label__neutral	neutral_2648	"It make sense, I am attaching the updated patch."
__label__love	love_637	"Thanks, Mayank"
__label__neutral	neutral_2649	I've tried this and Can't seem to find any problem.
__label__neutral	neutral_2650	Can you attach the WSDL /XSD files that created the problem ?
__label__neutral	neutral_2651	"Wow, that was quick!"
__label__neutral	neutral_2652	Thanks for the solutionhints.
__label__neutral	neutral_2653	Works fine and the way i (and w3c) wants it now.
__label__neutral	neutral_2654	"No problemo, Close is fine for me."
__label__neutral	neutral_2655	"Thanks, correctly applied the patch and updated working copy."
__label__love	love_638	"I would love it in 3.3.2, will upload a patch for that version."
__label__love	love_639	"Thanks, Mike!"
__label__love	love_640	Thanks Ravi.
__label__neutral	neutral_2656	"Yea, this fixes the other tets."
__label__neutral	neutral_2657	I'll re-run the whole suite on branch-20-security for sanity before committing.
__label__neutral	neutral_2658	"Patch applied, thanks Nils"
__label__neutral	neutral_2659	Wrong JIRA...please ignore my previous comment.
__label__neutral	neutral_2660	Committed revision 543344 in sandbox.
__label__neutral	neutral_2661	"Jason, thanks for the patch."
__label__neutral	neutral_2662	"Thanks for the review, Sidd."
__label__neutral	neutral_2663	Attaching the patch for branch-0.23.
__label__love	love_641	"Sweet! Git, I love git! :)"
__label__love	love_642	Thanks Sijie.
__label__neutral	neutral_2664	1
__label__neutral	neutral_2665	"OK, we'll leave it with Atlassian"
__label__love	love_643	Thank you for the patch Sergey.
__label__love	love_644	I love a solution that's simpler and easier to understand than the original.
__label__neutral	neutral_2666	"how about changing to ERROR for org.apache.zookeeper.server, and leaving as it is for the rest?"
__label__neutral	neutral_2667	"Hi, Thanks for your comments."
__label__neutral	neutral_2668	It is supposed to be handled as part of http://issues.apache.org/jira/browse/OPENJPA-907 There is a patch attached to it (I was a bit liberal with the RegEx).
__label__neutral	neutral_2669	"I will correct it and ask for commiting the patch, once I am done with this."
__label__neutral	neutral_2670	"Regards, Ravi."
__label__love	love_645	"Hi Henry, Thanks for checking it out."
__label__love	love_646	"In fact, if you happen to know why ObserverHammerQuorumTest is failing with this latest patch, I'd love to hear."
__label__neutral	neutral_2671	I have committed this.
__label__love	love_647	"Thanks, Jing!"
__label__neutral	neutral_2672	Applied the patch with revision 169493 -- thanks.
__label__neutral	neutral_2673	This a patch submitted by Ankur Goyal.
__label__love	love_648	That sounds like a plan. I love peer-reviews... :-)
__label__neutral	neutral_2674	I will apply and verify it.
__label__neutral	neutral_2675	Junit test.
__label__love	love_649	"Thanks for the very clear explanation of the needed change, Dag."
__label__neutral	neutral_2676	"I have attached DERBY-3084.diff and the corrected file, rrefsqlj31580.html."
__label__neutral	neutral_2677	Please let me know if any further changes are needed.
__label__love	love_650	"Thanks for reminding me; I agree, I'll do it."
__label__neutral	neutral_2678	Committed to trunk.
__label__love	love_651	"Thanks, JinJie!"
__label__neutral	neutral_2679	"Yeah, I know."
__label__neutral	neutral_2680	Just noticed when trying to vote for 1.3.0.
__label__neutral	neutral_2681	"Qian, Does seem like something wrong with hudson."
__label__neutral	neutral_2682	Pat and myself are taking a look at it .
__label__neutral	neutral_2683	thanks
__label__neutral	neutral_2684	"Committed to trunk and flume-1.4, rev: c0c4947."
__label__love	love_652	Thanks Brock!
__label__neutral	neutral_2685	Submitting it for Hudson to run the tests.
__label__neutral	neutral_2686	Can someone review the patch in the meanwhile?
__label__neutral	neutral_2687	"Looks good, I'll commit."
__label__love	love_653	Thanks Thomas!
__label__neutral	neutral_2688	Hi Knut I am interested in taking up this task.. Is that fine and kindly direct me on where to start off here.
__label__love	love_654	"Thanks Divesh, Your patch is commited at revision: 762863"
__label__love	love_655	"Hi Sagara, Thank you very much for looking into this."
__label__neutral	neutral_2689	I will investigate this issue and update the patch.
__label__neutral	neutral_2690	"Thanks, -Suresh"
__label__love	love_656	A pleasure :>.
__label__neutral	neutral_2691	"Cheers, Berin"
__label__love	love_657	Thanks Tom.
__label__neutral	neutral_2692	I updated the indentation and doc/build.xml.
__label__neutral	neutral_2693	I think that the problems are not related.
__label__neutral	neutral_2694	I think that Henry Zongaro should open a new defect for the local-name problem.
__label__neutral	neutral_2695	Fix for the gererate-id() problem seems to be correct.
__label__neutral	neutral_2696	Thanks Andrew.
__label__neutral	neutral_2697	Patch applied to PACK200 module at repo revision r611862.
__label__neutral	neutral_2698	Please check it was applied as you expected.
__label__love	love_658	I would love to have it right now for storm too. If you want me to sign up as a use case I am happy to.
__label__neutral	neutral_2699	"patch to add DynamicAttributesHandler and update SimpleTheme, AbstractCommonAttributesTest, and AbstractTest"
__label__neutral	neutral_2700	"re: ""should remain"" - yes, I vote it should remain, but be more flexible"
__label__neutral	neutral_2701	"+1, committed, thanks"
__label__neutral	neutral_2702	The changes to LazyBoolean.java look good.
__label__neutral	neutral_2703	+1 to what Esteban said.
__label__neutral	neutral_2704	Committed.
__label__love	love_659	Thanks for the patch Erik (and Jon)
__label__neutral	neutral_2705	Committed.
__label__neutral	neutral_2706	Thanks Edward
__label__love	love_660	"Thanks for figuring this one out and providing the patch, Jamie!"
__label__neutral	neutral_2707	Fixed in http://svn.eu.apache.org/viewvc?view=rev&revision=702423
__label__love	love_661	@Ashutosh: thanks a lot for the comments.
__label__neutral	neutral_2708	updated patch submitted at: https://reviews.facebook.net/D4455
__label__neutral	neutral_2709	"Hi Yuval, could you please attach a sample project showing the error?"
__label__neutral	neutral_2710	"Or even better, do you have a patch?"
__label__neutral	neutral_2711	Created an attachment (id=12292) corrresponding patch for LocalStrings.properties - will provide more as I encounter them
__label__love	love_662	Thanks for the quick patching Donald!
__label__love	love_663	"Thanks Bilgin, it is working fine now."
__label__neutral	neutral_2712	"Hello Paulex, The fix is fine."
__label__neutral	neutral_2713	Thanks!
__label__neutral	neutral_2714	"Best regards, Jimmy"
__label__neutral	neutral_2715	A test suite that shows the issue
__label__neutral	neutral_2716	> Eagerly awaiting faster mirroring with github.
__label__neutral	neutral_2717	See INFRA-4641 for some thoughts on how we could/should achieve that.
__label__neutral	neutral_2718	Input welcome!
__label__neutral	neutral_2719	I just committed this.
__label__love	love_664	Thanks henry and pat... we'll have to re submit all the PA's so trigger hudson.
__label__neutral	neutral_2720	Thanks for Confluence update Francis
__label__neutral	neutral_2721	"Svetlana, Fixed in LUNI java.net.DatagramPacket at repo revision 376009."
__label__neutral	neutral_2722	Please check this fully resolves your problem.
__label__neutral	neutral_2723	@Matt It would if I submitted the patch... Ugh Lets see.
__label__neutral	neutral_2724	Patch applied.
__label__love	love_665	Thanks senaka for the patch.
__label__neutral	neutral_2725	Thanks [~bikassaha] addressed your comments.
__label__neutral	neutral_2726	Attaching a new patch.
__label__love	love_666	"Thank you very much, Richard."
__label__neutral	neutral_2727	The fix looks fine at r517575.
__label__neutral	neutral_2728	The patch looks fine.
__label__neutral	neutral_2729	Thank you
__label__neutral	neutral_2730	On 2010-03-01 15:37:55.688 jchuang commented: AIR bug is fixed.
__label__neutral	neutral_2731	Can you please submit a patch?
__label__neutral	neutral_2732	"thanks, dims"
__label__neutral	neutral_2733	Thanks!
__label__neutral	neutral_2734	Patch applied in revision 885311.
__label__love	love_667	"Thanks for the patch Niall, +1"
__label__neutral	neutral_2735	I just committed this.
__label__love	love_668	thanks henry!
__label__neutral	neutral_2736	Shawn committed the fix in rev 1159269 & rev 1164330
__label__neutral	neutral_2737	my xsltmark tests now run the docbook test without a problem.
__label__neutral	neutral_2738	Thank Morris.
__label__neutral	neutral_2739	Patch applied at 472664.
__label__neutral	neutral_2740	Please check that it was applied as expected.
__label__neutral	neutral_2741	why do we need normalmappedsegment as well as native?
__label__neutral	neutral_2742	could we get rid of normal?
__label__neutral	neutral_2743	Patch d2087_try2.diff Committed revision 499100 - Thanks Julius
__label__neutral	neutral_2744	Patch applied in r710027.
__label__neutral	neutral_2745	Thanks!
__label__neutral	neutral_2746	The rest of the TODO has been postponed to Camel 2.0 in CAMEL-971.
__label__neutral	neutral_2747	"Thanks Jacopo, this is in SVN rev 7808."
__label__neutral	neutral_2748	"Yup, it does the trick."
__label__neutral	neutral_2749	I've ran the tests are both seems to be running fine now.
__label__neutral	neutral_2750	+1 on the patch.
__label__neutral	neutral_2751	"As I know this is working , [I didnt not test with JSR 181] , but I have tested with POJOs and it worked fine for me Thanks Deepal"
__label__neutral	neutral_2752	Patch applied in rev 586231
__label__neutral	neutral_2753	"If tablet unloads were to use the normal compaction queue, may want to prioritize unload related compactions on the queue."
__label__love	love_669	"Taking it over Thanks, Mayank"
__label__neutral	neutral_2754	"Thanks Ivan, I commit the code according to your suggestion."
__label__neutral	neutral_2755	Committed revision 1298668. thanks for the suggestion Antony
__label__neutral	neutral_2756	"Verified at r495393, thanks Tim."
__label__neutral	neutral_2757	"Hi Jacopo, no problem."
__label__love	love_670	":) Best regards, Fabian."
__label__love	love_671	Thanks Rishi Solanki to review the patch.
__label__neutral	neutral_2758	I agree.
__label__neutral	neutral_2759	Thanks for looking.
__label__neutral	neutral_2760	Patch committed.
__label__love	love_672	Thanks Hari!
__label__neutral	neutral_2761	Thanks for the patch Ferdy.
__label__neutral	neutral_2762	"Lets see if someone else votes that they want it and if so, then we'll commit?"
__label__neutral	neutral_2763	"Hello Ruth, The patch has been committed at revision r502513."
__label__neutral	neutral_2764	Thanks a lot for this enhancement.
__label__neutral	neutral_2765	Please verify this issue is fixed as you expected.
__label__love	love_673	"Best regards, Richard"
__label__neutral	neutral_2766	"So, i'm going to make a patch that does 1G regions and 128M flushes (with the multiplier still of x2 so we'll grow to 256M before the barrier comes down)."
__label__neutral	neutral_2767	Any objections?
__label__neutral	neutral_2768	(A 2GB memstore flush is fine when lzo is on but we want something for default).
__label__love	love_674	"Hello George, The fix looks fine, many thanks!"
__label__love	love_675	"Best regards, Andrew"
__label__neutral	neutral_2769	"Updated patch, so that the needed values from uiLabelMap can be accessible in ftls too."
__label__neutral	neutral_2770	I have applied your patch http://svn.apache.org/viewvc?view=rev&revision=757162 Thanks Pierre-Arnaud!
__label__neutral	neutral_2771	See https://issues.apache.org/jira/browse/HBASE-5151?focusedCommentId=13412056&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13412056 for one reason we need versioning in patch filenames.
__label__neutral	neutral_2772	"When versioning is in play, the above regex wouldn't pick up all the patches."
__label__neutral	neutral_2773	Does this belong to http://issues.apache.org/jira/browse/DAYTRADER too?
__label__neutral	neutral_2774	Committed revision 1058592. thanks uwe for the review
__label__neutral	neutral_2775	I committed the patch.
__label__love	love_676	Thank you Brandon.
__label__neutral	neutral_2776	Ilene Seeleman has agreed to review patch.
__label__neutral	neutral_2777	"Hi Areek, yes, I'm reviewing your patch."
__label__neutral	neutral_2778	It is just taking more time than I thought it would.
__label__love	love_677	I really like what I am seeing so far.
__label__love	love_678	This is quality work.
__label__neutral	neutral_2779	Committed revision 901901 to trunk.
__label__love	love_679	Thanks Dianne!
__label__love	love_680	Thanks Elena.
__label__neutral	neutral_2780	Fixed in LUNI module at repo revision r598681.
__label__neutral	neutral_2781	Please check that this resolves the issue for you.
__label__neutral	neutral_2782	belongs to cactus project?
__label__neutral	neutral_2783	+1 Committed.
__label__love	love_681	Thanks Suresh
__label__neutral	neutral_2784	Applied combined patch from Shiva and BJ at r692233.
__label__love	love_682	Thanks to both for these usability enhancements !
__label__love	love_683	"Thanks a lot for the reviews, Todd."
__label__neutral	neutral_2785	I've just committed this to trunk and branch-2.
__label__neutral	neutral_2786	Looks good.
__label__love	love_684	Thanks Stepan.
__label__neutral	neutral_2787	+1 Looks good to me.
__label__love	love_685	Thanks Doug for the change.
__label__neutral	neutral_2788	"As far as I understand the specification, [/jcr:system/jcr:versionStorage/17/66/ea/1766eaef-f0f5-4cf6-95ef-a1d7290257f9] is not a legal name: http://www.day.com/specs/jcr/2.0/6_Query.html#6.7.4 Name Name ::= '[' quotedName ']' | '[' simpleName ']' | simpleName ::= /* A JCR Name that is also a legal SQL identifier 10 */ 10 See the SQL:92 rules for <regular identifier> (in ISO/IEC 9075:1992 Â§5.2 <token> and <separator>)."
__label__neutral	neutral_2789	Too bad :( What ff we could check C-heap lock state before forking and possibly switch to an alternative way?
__label__neutral	neutral_2790	"Because of this and HADOOP-4972, it may makes sense to acquire namesystem locks in getBlockLocationsInternal."
__label__neutral	neutral_2791	"However, it may leads to significant performance degradation"
__label__neutral	neutral_2792	Typo: surfix -> suffix
__label__neutral	neutral_2793	Who knows what evil lurks in the heart of Solr?
__label__neutral	neutral_2794	The shadow maven build knows...
__label__love	love_686	Great investigations Doron!
__label__neutral	neutral_2795	Personally I'm more concerned with (1) than (2).
__label__neutral	neutral_2796	Was the fix for one issue more responsible for the performance loss than the other?
__label__neutral	neutral_2797	"I'm no pom expert, but it seems that unqualified pom variables can cause this problem."
__label__neutral	neutral_2798	Attached is a patch to support those variables.
__label__neutral	neutral_2799	correct build status capture echo's exit code
__label__neutral	neutral_2800	"Paulex, the original patch seems to be out-of-date."
__label__neutral	neutral_2801	Thanks
__label__neutral	neutral_2802	I tend to doubt there's anything we can do about this if the problem is at a lower level.
__label__love	love_687	Thanks for your patience.
__label__neutral	neutral_2803	This file demonstrates the problem described in this bug.
__label__neutral	neutral_2804	The expected behavior would be to see the following messages on stdout.
__label__neutral	neutral_2805	This script renames the files like follows: cd modules/lang-management/src/test/impl/java/org/apache/harmony/lang/management svn move DynamicMXBeanImplTest.java DynamicMXBeanImplTestBase.java svn move SingleInstanceDynamicMXBeanImplTest.java SingleInstanceDynamicMXBeanImplTestBase.java svn move MultiInstanceDynamicMXBeanImplTest.java MultiInstanceDynamicMXBeanImplTestBase.java Run it please from classlib base directory.
__label__neutral	neutral_2806	I respectfully disagree with your interpretation even though in most of the cases it corresponds to what the majority of users may expect to see (including myself).
__label__neutral	neutral_2807	"This said, HttpClient is a general purpose HTTP agent and as such should follow the letter of the specification rather than make informed guesses."
__label__neutral	neutral_2808	We are not supposed to invent stuff.
__label__neutral	neutral_2809	Nowhere in the spec 'circular redirects' are mentioned.
__label__neutral	neutral_2810	"The spec states that an HTTP agent should avoid infinite loops, which is not the same thing as circular redirects in my opinion."
__label__neutral	neutral_2811	I saw this recently when using a custom built ActiveMQ (5.0.0.9-fuse) with ServiceMix (3.2.1).
__label__neutral	neutral_2812	"I think the language in snowball must be English, not en."
__label__neutral	neutral_2813	I'll have a look at mime4j and try to use it in Tika
__label__love	love_688	Thanks Ivan.
__label__neutral	neutral_2814	Your patch was applied at 553723.
__label__neutral	neutral_2815	"Please, verify."
__label__neutral	neutral_2816	"Looks fine, thanks."
__label__neutral	neutral_2817	That was a pain!
__label__neutral	neutral_2818	Thanks!
__label__neutral	neutral_2819	svn rev 503448
__label__neutral	neutral_2820	Do you want me to tweak the patch to rename the alternate body header tag andif move it to the MailConstants?
__label__neutral	neutral_2821	"If you have any other things you don't like about it, let me know and I can work on it tomorrow."
__label__neutral	neutral_2822	Cancelling patch until we get a consensus on Carl's comment.
__label__neutral	neutral_2823	Makes sense to me.
__label__neutral	neutral_2824	"We have equalsIgnoreCase, so having that ability for EqualsBuilder (and therefore HashCodeBuilder) seems apt."
__label__neutral	neutral_2825	Setting fix version for 3.0 - ie) won't be looking at applying this until after 2.3 gets released.
__label__love	love_689	"Hi Sandy, Thanks so much to give me such comments, that's really helpful, I will update this later."
__label__love	love_690	"ahhh sweet, i'm guessing you have an IDE that does this? If the tests pass commit, this kinda crap goes out of date too fast!"
__label__neutral	neutral_2826	Sending to IRB.
__label__neutral	neutral_2827	On 2011-10-26 14:27:36.512 chiedozi commented: This would be a very simple change to make.
__label__neutral	neutral_2828	I would just need to retrieve the backgroundAlpha style before calling drawRect in its updateDisplayList.
__label__neutral	neutral_2829	The problem is that we use this draw call to also draw the thin divider.
__label__love	love_691	I want to integrate the sweet sweet logo Andrew crafted.
__label__neutral	neutral_2830	"On 2011-10-26 15:16:22.394 jsaracin commented: IRB -- opening to Chiedo, priority B, Ultra."
__label__love	love_692	"Thanks, Oliver!"
__label__neutral	neutral_2831	The patch is fine.
__label__love	love_693	Thanks to Fabrizio for the patch.
__label__neutral	neutral_2832	I'm almost done w/ a conversion.
__label__love	love_694	Regex is your friend.
__label__neutral	neutral_2833	[~ikelly] are you trying the right patch?
__label__neutral	neutral_2834	the new patch already put the #resolveConflict after checking ensemble.
__label__neutral	neutral_2835	"oh, I looked closely to see if you flipped args or did a compare w/ a presumption that hadn't been testing a statement or two earlier and it all looks right to me."
__label__love	love_695	Thanks Awdesh - Done at r821748.
__label__neutral	neutral_2836	"I had a quick look at the ab patch, and nothing jumped at me."
__label__neutral	neutral_2837	"Two small nits, though: * the count variable in requireAtLeastOneProperty() is never used * couldntSetProperty() reinvents Property.toString() (or actually Hashtable.toString() which is inherited by Property)"
__label__love	love_696	"Thanks Richard, Patch applied to NIO_CHAR module java.nio.CharsetEncoder at repo revision 389784."
__label__neutral	neutral_2838	Please check that the patch was applied as you expected.
__label__neutral	neutral_2839	+1 Looks good I just committed this.
__label__love	love_697	"Thanks, Tom"
__label__love	love_698	"Thanks for your comments, Konstantin."
__label__neutral	neutral_2840	I addressed all of them in a new version of the patch.
__label__neutral	neutral_2841	do we really need this?
__label__neutral	neutral_2842	the current command is modeled after the export shell command.
__label__neutral	neutral_2843	export x=y sets the variable.
__label__neutral	neutral_2844	export with no args prints all the current settings.
__label__neutral	neutral_2845	we are missing an equivalent of export -n (to unset stuff).
__label__neutral	neutral_2846	if this is not a good model - then we should switch it with something different altogether.
__label__neutral	neutral_2847	"Well, 4762 is going nowhere fast, should we push this to 2.1 as well?"
__label__neutral	neutral_2848	This should have been fixed already.
__label__neutral	neutral_2849	EventListeners and CacheLoaders are documented.
__label__neutral	neutral_2850	Only peerProviders and some tutorial left to do.
__label__neutral	neutral_2851	XW-172 already talked about number conversion and localization.
__label__neutral	neutral_2852	Sorry I didn't see that before creating this issue.
__label__neutral	neutral_2853	thanks to Christian Kaltepoth for provide this patch
__label__love	love_699	"Marcelo, thanks for pointing out this; it is now fixed in rev."
__label__neutral	neutral_2854	"Hi, did you check the snapshot?"
__label__neutral	neutral_2855	+ http://tomee.apache.org/datasource-config.html explains that IgnoreDefaultValues can be used to avoid it
__label__neutral	neutral_2856	"fixed in revision 413841 Boris, please check that it was applied as expected"
__label__neutral	neutral_2857	At the very least the exception could explain what the problem is rather than what the state of an obscure private variable is.
__label__neutral	neutral_2858	"On 2008-02-25 15:37:45.766 jchuang commented: This is an AIR issue, the AIR team has been notified."
__label__neutral	neutral_2859	On 2010-03-01 16:52:26.625 jchuang commented: Correctly resolved external
__label__neutral	neutral_2860	Thanks for updating the dependency.
__label__neutral	neutral_2861	Checked in the patch (see revision 1295288).
__label__neutral	neutral_2862	"+1, thanks Henry Committed revision 779716."
__label__neutral	neutral_2863	"I don't this its specific to HyperV, as the mgmt server has to take care of reservation of IP address."
__label__neutral	neutral_2864	Can you verify with other hypervsisors and update .
__label__love	love_700	"looks fine, thank you."
__label__love	love_701	"Thanks for spotting this, fixed at r487519"
__label__love	love_702	"Thanks Areek, patch looks good!"
__label__neutral	neutral_2865	Do more modern version of the Flash player work 11.3- 11.6?
__label__neutral	neutral_2866	"i agree, i think there is no wsdl into jms sample component."
__label__neutral	neutral_2867	"one is could be provided, isn't it?"
__label__love	love_703	"Hi James, This patch has been applied by chirino in the revision 576522 at Sep 17."
__label__neutral	neutral_2868	"Hmmm... it's not collisions then, it was worth a try."
__label__neutral	neutral_2869	I still find the difference puzzling -- I can't justify your version being 3x faster.
__label__neutral	neutral_2870	"But we know a lot about docids, and extra hashing should just lead to an average-case slowdown."
__label__neutral	neutral_2871	Ok.
__label__neutral	neutral_2872	"Hi Jamie, I can not access the mirror, get a 404, have you moved/removed it, do you still want it adding ?"
__label__neutral	neutral_2873	Thanks.
__label__neutral	neutral_2874	"blindly changing the oak security provider to private SecurityProvider securityProvider = new SecurityProviderImpl(); gives Tests run: 706, Failures: 0, Errors: 122, Skipped: 13"
__label__neutral	neutral_2875	Thx for your investigations Chet.
__label__neutral	neutral_2876	Have you got a link regarding the classpath exception and ASL2 compatibliity?
__label__neutral	neutral_2877	"For the authentication issue, it's recorded in JAMES-1418 (I will try to look at it this weekend)."
__label__neutral	neutral_2878	Thank you.
__label__love	love_704	This patch really helped.
__label__neutral	neutral_2879	"So, I added a comment out on UnInvertedField."
__label__neutral	neutral_2880	For the second issue: Consider long tailed distribution as shown on http://en.wikipedia.org/wiki/Long_tail (In case of network traffic.
__label__neutral	neutral_2881	The biggest 90% data volume comes comes from less then 10% of connections.)
__label__neutral	neutral_2882	In this case we have extremely wide spread __important__ values with only ___single_ occurrences.
__label__neutral	neutral_2883	If we want to generate similar variable (for ex.
__label__neutral	neutral_2884	larger sample) we'll get fixed values for all this bins in the long tail.
__label__neutral	neutral_2885	It signifies 10% of generated values will be __fixed_ values - their respective bin means!
__label__neutral	neutral_2886	Last Issue: I would question usage of Gaussian Kernel at all.
__label__neutral	neutral_2887	"Without having a mathematical prove, I nevertheless suppose it could disturb parameters of generation if we have non Gaussian empirical data."
__label__neutral	neutral_2888	(for ex.
__label__neutral	neutral_2889	"Pareto, Tweedie, ..) Why we don't stick with triangular or uniform distribution as default for Kernel within the bean?"
__label__neutral	neutral_2890	"The apache vhost has been setup, but still needs some work."
__label__neutral	neutral_2891	Right now it will proxy to port 80 of the httpd instance running on the current VM.
__label__neutral	neutral_2892	Is this sufficient?
__label__neutral	neutral_2893	Does nexus check for https connections for anything?
__label__neutral	neutral_2894	Does it care at all?
__label__neutral	neutral_2895	"[~sershe], please bear with me - (1) could you please upload a rebased patch."
__label__neutral	neutral_2896	The patch is horribly out-of-date.
__label__neutral	neutral_2897	(2) HDFS-4979 introduced RetryCache in the NameNode.
__label__neutral	neutral_2898	Not sure if it is reasonable - is it possible to use the classes from HDFS-4979 here.
__label__neutral	neutral_2899	Committed to branch.
__label__neutral	neutral_2900	An email snafooey caused us to update our JIRA instance to 6.1 before we had a chance to test the import on our test instance (it didn't work properly for those who tried to whack at it).
__label__neutral	neutral_2901	"We have a guy looking into getting it in shape now, but it will require you to update your current JIRA instance to 6.1 before doing another export for us."
__label__neutral	neutral_2902	"I'm truly sorry for this inconvenience, but JIRA is really strict about the versions being equal when doing an import."
__label__neutral	neutral_2903	"So, good news is we finally have a chance of testing the exports very soon, bad news is, it will require an update on your side to be able to transfer the spark JIRA data."
__label__neutral	neutral_2904	"I hope you can figure out how to upgrade, and if you have any questions or need help, feel free to reach out to us."
__label__neutral	neutral_2905	"Soundararajan, Ning - Yes I am planning on working on it starting next week."
__label__neutral	neutral_2906	I expect this to take at least upto mid to late in the week in order to get a patch available for this.
__label__neutral	neutral_2907	"However, if that schedule does not work for you, please feel free to take this issue into your queue and go ahead."
__label__love	love_705	It will be great if you could confirm it either way first.
__label__neutral	neutral_2908	"Alexei, this patch is quite out of date (sorry about that)."
__label__neutral	neutral_2909	Please can you provide an updated patch?
__label__neutral	neutral_2910	Thanks Tim
__label__neutral	neutral_2911	"If regionnames were made of tablename+endrow instead of tablename+startrow, then in the metatables, doing a search for the region that contains the wanted row, we'd just have to open a scanner using passed row and the first row found by the scan would be that of the region we need (If offlined parent, we'd have to scan to the next row)."
__label__neutral	neutral_2912	"If we redid the meta tables in this format, we'd be using an access that is natural to hbase, a scan as opposed to the perverse, expensive getClosestRowBefore we currently have that has to walk backward in meta finding a containing region."
__label__neutral	neutral_2913	This issue is about changing the way we name regions.
__label__neutral	neutral_2914	"If we were using scans, prewarming client cache would be near costless (as opposed to what we'll currently have to do which is first a getClosestRowBefore and then a scan from the closestrowbefore forward)."
__label__neutral	neutral_2915	"Converting to the new method, we'd have to run a migration on startup changing the content in meta."
__label__neutral	neutral_2916	"Up to this, the randomid component of a region name has been the timestamp of region creation."
__label__neutral	neutral_2917	"HBASE-2531 ""32-bit encoding of regionnames waaaaaaayyyyy too susceptible to hash clashes"" proposes changing the randomid so that it contains actual name of the directory in the filesystem that hosts the region."
__label__neutral	neutral_2918	"If we had this in place, I think it would help with the migration to this new way of doing the meta because as is, the region name in fs is a hash of regionname... changing the format of the regionname would mean we generate a different hash... so we'd need hbase-2531 to be in place before we could do this change."
__label__neutral	neutral_2919	The two machines do not share the filesystem.
__label__neutral	neutral_2920	"There is an embedded Tomcat running in the same JVM, but according to the logs, the database is not booted twice."
__label__neutral	neutral_2921	"The only reasons for the failure I can think of were the failed network connections, the OutOfMemoryError or the 4000+ simultaneous connections together with lock timeouts."
__label__neutral	neutral_2922	"Ah and I am running 10.2 SVN 540841, as this fixes DERBY-2549."
__label__neutral	neutral_2923	#NAME?
__label__neutral	neutral_2924	Dojo [0] and Ext.js [1] take both a different approach (which i personally don't really like).
__label__neutral	neutral_2925	"just wanted to mention it, as it's not about my personal preference, but rather what is considered most useful for everybody."
__label__neutral	neutral_2926	[0] http://dojotoolkit.org/~dylan/dojo/tests/widget/demo_DatePicker.html [1] http://extjs.com/deploy/ext/examples/form/dynamic.html (3rd form)
__label__neutral	neutral_2927	"Aaron: I completely agree the parser needs to be changed, but I don't currently have the time available."
__label__neutral	neutral_2928	My goal here is a very small/quick change to revert how every FsShell command (except count) to how it used to work.
__label__neutral	neutral_2929	"If you're ok with that, I think another jira should switch the parser."
__label__neutral	neutral_2930	Todd: I suppose it comes down to whether hadoop should favor posix or gnu extensions?
__label__love	love_706	"Thanks Todd, glad to be on board!"
__label__neutral	neutral_2931	can we apply the jarjar solution only to commons-csv?
__label__neutral	neutral_2932	"I tested this again on Ubuntu 10.04, This works with the new Tomcat instance and then when I tried the 2nd time it is not working."
__label__neutral	neutral_2933	But when i delete the file which was created at <tomcat-home>/bin/search-index/write.lock it works fine but I'm not sure whether this creates other implications?
__label__neutral	neutral_2934	Further I think the tags are not saved any ware because after redeploying I found the tags I added are missing.
__label__neutral	neutral_2935	Is this due to the deletion of write.lock
__label__neutral	neutral_2936	"From the logs, it is clear that the reducers could not fetch the output for map attempt attempt_200905051023_1155_m_000036."
__label__neutral	neutral_2937	Both the reducers (and possibly everybody else) is waiting on these.
__label__neutral	neutral_2938	There is something mysterious going on here.
__label__neutral	neutral_2939	"If attempt id 1 was speculative, the framework would not have killed it as the original attempt was a failure."
__label__neutral	neutral_2940	"If it was not, was the attempt Id 1 killed explicitly?"
__label__neutral	neutral_2941	"In any case, why did not the framework try and re execute this map somewhere else?"
__label__neutral	neutral_2942	Could you let us know if speculative execution was turned on?
__label__neutral	neutral_2943	"If, by any chance, you have the logs for the task attempts attempt_200905051023_1155_m_000036_0 and attempt_200905051023_1155_m_000036_1, could you attach them to this Jira?"
__label__love	love_707	"Sweet, I will review and apply."
__label__neutral	neutral_2944	Attaching the 10 findbugs reports for common and the various hadoop-tools projects and hadoop-auth.
__label__neutral	neutral_2945	Common has 100 or so warnings and there's a couple dozen spread out around the others.
__label__neutral	neutral_2946	"Probably makes sense to do these like HDFS-4014, sensitive changes get their own patch and the general new classes of warning can be handled in bulk in a small set of patches."
__label__neutral	neutral_2947	I just committed this.
__label__love	love_708	"Thanks, Amar!"
__label__neutral	neutral_2948	-1 overall.
__label__neutral	neutral_2949	Here are the results of testing the latest attachment http://issues.apache.org/jira/secure/attachment/12501038/MAPREDUCE-3209.patch against trunk revision .
__label__love	love_709	Thanks for sweet patch Erik.
__label__neutral	neutral_2950	+1 @author.
__label__neutral	neutral_2951	The patch does not contain any @author tags.
__label__neutral	neutral_2952	-1 tests included.
__label__neutral	neutral_2953	Please justify why no new tests are needed for this patch.
__label__neutral	neutral_2954	Also please list what manual steps were performed to verify this patch.
__label__neutral	neutral_2955	+1 javadoc.
__label__neutral	neutral_2956	The patch passed contrib unit tests.
__label__neutral	neutral_2957	"martin-g :i think do this in 6.0 and do 4327 in 1.5.x as its very easy to do 4327,if you do 4327,there will not be any need to mock AjaxRequestTarget but if you do do 4327 also add getters for prependscripts and appendscripts in ART ;)"
__label__neutral	neutral_2958	I believe the notifications are now scheduled properly.
__label__neutral	neutral_2959	created: 2005-09-18 23:36:49.000 resolved: 2007-06-04 10:08:18.657 updated: 2011-05-10 16:51:30.000
__label__love	love_710	"Owen, thanks for the slides."
__label__neutral	neutral_2960	"I don't see a direct relation between this issue and the issue of simplifying the implementation of efficient map-side joins (MAPREDUCE-1183, more or less)."
__label__neutral	neutral_2961	"Am I missing the connection, or is this a distinct issue?"
__label__neutral	neutral_2962	File formats are forever.
__label__neutral	neutral_2963	"More variations add significant, long-term compatibility burdens to the project."
__label__neutral	neutral_2964	We badly need to add support for a higher-level object serialization system than Writable.
__label__neutral	neutral_2965	But I'm not convinced its wise to add such support to the exisiting Java-only container file formats.
__label__neutral	neutral_2966	So I'm all for a more generic serialization API that can be used by MapReduce applications.
__label__neutral	neutral_2967	"I don't however see that it follows that we should provide implementations of file formats with a large number of different serialization systems, as that invites multiplicative long-term support issues."
__label__neutral	neutral_2968	I'd prefer that we instead direct users towards a single preferred high-level serialization system and a single preferred container.
__label__neutral	neutral_2969	Historically that's been Writable and SequenceFile.
__label__neutral	neutral_2970	"We now need to migrate from these to a more expressive, language-independent serialization system and container file."
__label__neutral	neutral_2971	"Our APIs should be of course be general enough that it's possible to incorporate different serialization systems and different file formats, but we needn't provide implementations of all combinations of these, but should rather direct folks towards a primary implementation."
__label__neutral	neutral_2972	Google benefits tremendously by having a single standard serialization system and container file format.
__label__neutral	neutral_2973	The Dremel paper (http://sergey.melnix.com/pub/melnik_VLDB10.pdf) argues that this is an essential enabler of their wide variety of interoperable systems.
__label__neutral	neutral_2974	The further we depart from this the harder we make it to build systems like Dremel that multiply the utility of stored data.
__label__neutral	neutral_2975	Changing serialization systems or file formats is a major imposition for many applications.
__label__neutral	neutral_2976	They cannot afford to do it frequently.
__label__neutral	neutral_2977	"We should provide a clear path forward from Writable+SequenceFile to a new system that's easier to use, less fragile, and language-independent to better facilitate a rich ecosystem of tools."
__label__neutral	neutral_2978	Fixed TestCompositeService to not depend on test-order and thus made it pass on JDK7.
__label__neutral	neutral_2979	Contributed by Thomas Graves.
__label__neutral	neutral_2980	@Andy I have some thing which is similar to this and sorry if am diverting the current JIRA title.
__label__love	love_711	I'm glad we were able to resolve this issue.
__label__neutral	neutral_2981	May be i have the current PUT with me and from which i form the new PUTs to be added thro coprocessor hooks to a new region.
__label__neutral	neutral_2982	"Assume the PUT(and related things) that i created in preBatchPut is also needed while i use the preWALWrite, is there any way i can carry it in one flow?"
__label__neutral	neutral_2983	"Assume the PUT(and related things) that i created in preBatchPut is also needed while i use the preWALWrite, is there any way i can carry it in one flow?"
__label__neutral	neutral_2984	Hope am not missing anything?
__label__neutral	neutral_2985	If you feel this can be done may be we can file an Improvement JIRA.
__label__neutral	neutral_2986	Please provide your suggestions
__label__neutral	neutral_2987	How about renaming leftResults as remainingResults ?
__label__neutral	neutral_2988	Please prepare patch for trunk.
__label__neutral	neutral_2989	Thanks
__label__neutral	neutral_2990	How about fixing WHIRR-337 before?
__label__neutral	neutral_2991	It should simplify things.
__label__neutral	neutral_2992	"+1, in my mind, the -ROOT- table is very important of routing the right RegionServer of .META."
__label__neutral	neutral_2993	The whole system could be out-of-service in case the Region of SequenceFile of the -ROOT- can NOT be opened.
__label__neutral	neutral_2994	"Thus, i quite agree that we put the .META."
__label__neutral	neutral_2995	directly into Zookeeper to reduce this.
__label__neutral	neutral_2996	We can avoid one case of failure.
__label__neutral	neutral_2997	Note: the attached patch does not break the existing API
__label__love	love_712	"Megan, Glad to be of service : )"
__label__neutral	neutral_2998	Executing /stop on a running EC2 instance will terminate the instance.
__label__neutral	neutral_2999	There is a JIRA logged to request that 'stop' and 'terminate' be two different available actions ... see https://issues.apache.org/jira/browse/DTACLOUD-100 - also https://issues.apache.org/jira/browse/DTACLOUD-111
__label__neutral	neutral_3000	Fresh copy of the example configs?
__label__neutral	neutral_3001	{{PreTestTarget}} is a garbage I have missed out.
__label__neutral	neutral_3002	Removed.
__label__neutral	neutral_3003	The target {{inject-system-faults}} is defined in src/test/aop/build/aop.xml
__label__love	love_713	Thanks Andi.
__label__neutral	neutral_3004	What would you think of just exposing incRef() & decRef() as expert public methods?
__label__neutral	neutral_3005	#NAME?
__label__neutral	neutral_3006	We would just add ensureOpen() to those methods and make them public.
__label__neutral	neutral_3007	I don't agree to including the javadoc sources in the release.
__label__neutral	neutral_3008	The zip is already large and contains all code.
__label__neutral	neutral_3009	Using maven you can easily generate the docs yourself.
__label__neutral	neutral_3010	Or even better: use the maven repository to automatically attach the sources-jar to your eclipse/idea/netbeans project.
__label__neutral	neutral_3011	You can also download them by hand and attach them manually.
__label__neutral	neutral_3012	The comparison with 1.2.6 is not valid as we use a different setup now and ship everyting in one zip instead of a zip per project..
__label__love	love_714	"Hi Daniel, thanks in advance for your support."
__label__neutral	neutral_3013	"I send you a simple eclipse CXF webservice project using spring, and a simple eclipse CXF client project."
__label__neutral	neutral_3014	With this client project i can't get connect with the webservice published in a Apache-tomcat-5.5.25.
__label__neutral	neutral_3015	"The curious thing is that with a c#.net client i can connect with that webservice, but not with a java generated client."
__label__neutral	neutral_3016	I don't know what i'm doing wrong!
__label__neutral	neutral_3017	Any help would be appreciated.
__label__neutral	neutral_3018	The client stubs were generated with wsdl2java command of CXF distribution.
__label__neutral	neutral_3019	"I send you a list of all .jars at present i use in both projects, there are many libraries but i test even with the minimal jars with the same results."
__label__neutral	neutral_3020	created: 2006-11-08 15:55:12.000 resolved: 2007-06-04 10:08:36.132 updated: 2011-05-10 16:12:23.000
__label__neutral	neutral_3021	Fixed in SVN now.
__label__neutral	neutral_3022	If it's never ok to pass null for the path (ie a bug in the code) then you can assert path != null or throw an AssertionError.
__label__neutral	neutral_3023	"If it's OK sometimes and not others than IllegalArgumentException seems appropriate, seems like it should never be legitimate to create a FileStatus w/o a path unless using the no argument constructor."
__label__love	love_715	Thanks Hairong!
__label__neutral	neutral_3024	I learned much the issue progress of hadoop here.
__label__neutral	neutral_3025	And I think I will do more next time.
__label__neutral	neutral_3026	created: 2009-09-01 05:38:20.000 resolved: 2009-09-22 18:54:05.051 updated: 2011-04-15 15:06:27.000
__label__neutral	neutral_3027	Cleanup MR staging directory on completion.
__label__neutral	neutral_3028	Contributed by Mahadev Konar.
__label__neutral	neutral_3029	Created an attachment (id=10304) test.xml
__label__neutral	neutral_3030	FilterExprWalker.detach() calls DescendantIterator.detach() and set DescendantIterator.m_traverser to null for $exceptions[1]/@name.
__label__neutral	neutral_3031	I would appreciate if any commiter review the patch.
__label__neutral	neutral_3032	I am going to repurpose HIVE-538 to clean up the implementation of the getSchema call.
__label__neutral	neutral_3033	Glad to see people are interested in this.
__label__neutral	neutral_3034	This should (and can) be automated.
__label__neutral	neutral_3035	Could you verify if there is still an issue with a 5.6 snapshot.
__label__neutral	neutral_3036	My suspicion is that it will be resolved.
__label__neutral	neutral_3037	Hadrian I wonder if we can add a _warning_ to the 2.0 release notes about the missing hash and sign files.
__label__neutral	neutral_3038	Nobody would download and use 2.0.0 release where there is 2.4.0 or better.
__label__neutral	neutral_3039	I would like to see this reopened.
__label__neutral	neutral_3040	"As i wrote to the list, it does not work for me."
__label__neutral	neutral_3041	Apache Karaf 2.1.1 is now available for download :)
__label__neutral	neutral_3042	I've checked the repository myself and everything seems fine to me.
__label__love	love_716	Thank you very much for your effort David.
__label__neutral	neutral_3043	I've pinged PMC group to have another eyes look around to be sure that everything is fine.
__label__neutral	neutral_3044	I'll ping here once this will be done.
__label__neutral	neutral_3045	Modified YarnRemoteException to be not backed by PB and introduced a separate SerializedException record.
__label__neutral	neutral_3046	Contributed by Siddharth Seth.
__label__neutral	neutral_3047	Updated MR App to reflect YarnRemoteException changes after YARN-634.
__label__neutral	neutral_3048	Contributed by Siddharth Seth.
__label__neutral	neutral_3049	"Er, sorry, paste didn't work -- here's the full bug text: ===== The following dependency relies on the sun."
__label__neutral	neutral_3050	"* packages, meaning that Xerces-J 2 is not 100% Pure Java (it depends on a specific aspect of specific versions of *Sun* JVMs)."
__label__neutral	neutral_3051	Found when attempting to compile Xalan-J 2 with gcj.
__label__neutral	neutral_3052	org/apache/xml/serialize/EncodingInfo.java:0: error: cannot find file for class sun.io.CharToByteConverter
__label__neutral	neutral_3053	Fixed classpath for chukwa core jar file.
__label__neutral	neutral_3054	Fixed in 1.2 branch as well.
__label__neutral	neutral_3055	What is the right process to deprecate this behavior in 3.x?
__label__neutral	neutral_3056	Is it just a note in the CHANGES.txt?
__label__neutral	neutral_3057	We could also try to detect the behavior and log a warning... but i'm not sure that is worth much.
__label__neutral	neutral_3058	"Changes appeared in 10.8.1 documentation, so closing."
__label__neutral	neutral_3059	retrospectively setting fix version in preparation for SDO M3
__label__neutral	neutral_3060	"Solution looks as follows: when doing a cluster sync, whether it is for reading or writing, always acquire the version manager's read lock first."
__label__neutral	neutral_3061	Patch adds javadoc for the newly added tests.
__label__neutral	neutral_3062	"Right, and right after that is the section I was referring to."
__label__neutral	neutral_3063	I think the licensing on that one might be complicated.
__label__neutral	neutral_3064	"The source files appear to have various licenses, including GPL."
__label__neutral	neutral_3065	"Hi Andreas, as we are a bank, we can't provide you with the normal documents as they are internal documents."
__label__neutral	neutral_3066	Therefore we will prepare a special document with a single checkbox will shows the error.
__label__neutral	neutral_3067	It will come eiither today or tomorrow.
__label__love	love_717	Thanks in advance Jens
__label__neutral	neutral_3068	The patch went in a few days ago: http://svn.apache.org/viewvc?view=rev&revision=499521
__label__neutral	neutral_3069	Test code added as part of HDFS-2131
__label__neutral	neutral_3070	I've attached the output of dblook as db.sql and a simplified creation script as sample.sql that includes the relevant tables and columns with sample data.
__label__neutral	neutral_3071	I also verified that the bug still occurs in 10.6.1.0
__label__neutral	neutral_3072	Could you supply also a webapp sample?
__label__neutral	neutral_3073	"It's easy, look in the scratchpad/webapp/mount how it is done."
__label__neutral	neutral_3074	This could get many trying it and getting involved.
__label__neutral	neutral_3075	"If I commit it as-is, we could miss some help."
__label__neutral	neutral_3076	Patch to address the issue.
__label__neutral	neutral_3077	I have found the source of the problem - yet I completely don't understand why such an unrelated thing breaks navigation.
__label__neutral	neutral_3078	Probably it is way deeper problem.
__label__neutral	neutral_3079	As soon as I remove wicket enclosure or add some text node inside - the navigation toolbar starts properly counting pages (it was showing 0 of 0 before because it thinks it is not visible in hierarchy).
__label__neutral	neutral_3080	"Thanks, Hari"
__label__neutral	neutral_3081	This has been fixed by check in for CHUKWA-274.
__label__neutral	neutral_3082	"This patch adds the RelativeTest.java file which is a conversion of the jdbcapi/testRelative test, to the same package as the latter."
__label__neutral	neutral_3083	Also adds the tests to the _Suite class.
__label__neutral	neutral_3084	Please review and comment if anything is lacking or incorrect.
__label__neutral	neutral_3085	Bulk close for 3.1
__label__neutral	neutral_3086	Mailing Lists to be set up before this cab be done.
__label__neutral	neutral_3087	"I've modified the patch to name the function rep.normalize If you think that my proposal is actually not enough ambitious for being called ""normalization"", do you prefer something like rep:toASCII, which may seem less universal ?"
__label__neutral	neutral_3088	"I really think there is an added value with this function for Jackrabbit users, I personnally use it with every String-ordered query."
__label__neutral	neutral_3089	No - unfortunately I do not have enough knowledge to digg into OpenJPA's code
__label__neutral	neutral_3090	That is correct.
__label__neutral	neutral_3091	The build seems to have broken on 10.9 when the test was backported.
__label__neutral	neutral_3092	It only breaks if j14lib is not set.
__label__neutral	neutral_3093	The problem is that I changed the build script to use java14compile.classpath instead of java15compile.classpath for the new test when I backported it from 10.10.
__label__neutral	neutral_3094	"I mistakenly thought 10.9 was supposed to work on Java 1.4 (in fact, the 10.9.1 release notes say it is supported, although we removed support for it after 10.8), and the build worked in my environment because I had j14lib set, and the test ran just fine on 1.4."
__label__neutral	neutral_3095	I'll post a patch that makes 10.9 compile the test against 1.5 instead of 1.4.
__label__neutral	neutral_3096	"The patch that broke the build on 10.9, was also backported to 10.8."
__label__neutral	neutral_3097	"However, on 10.8 it is correct to compile the test against 1.4, so that's not a problem."
__label__neutral	neutral_3098	Here are the results of testing the latest attachment http://issues.apache.org/jira/secure/attachment/12605661/MAPREDUCE-5538.6.patch against trunk revision .
__label__neutral	neutral_3099	The patch does not contain any @author tags.
__label__neutral	neutral_3100	I still can't work out how to do this.
__label__neutral	neutral_3101	"Igor suggested moving the call to Component#onBeforeRenderChildren() inside Component#onBeforeRender(), but if I do that, I get an NPE in the ListView#renderItem() method even for basic code."
__label__neutral	neutral_3102	"Hmm, the suggested patch is not good for DRLVM, which handles ""-version"" normally."
__label__neutral	neutral_3103	"What is the point to print only launcher version, after all?"
__label__neutral	neutral_3104	The following had serialVersionUID set for the 2.2 release.
__label__neutral	neutral_3105	There have been no new ones added for 2.3.
__label__neutral	neutral_3106	"So when 2.3 is released, you shouldn't get the problems you've had from 2.1 to 2.2 for these files."
__label__neutral	neutral_3107	Committed patch with workaround in revisions 1054027 and 1054030
__label__neutral	neutral_3108	"I attached our resolvers, sadly we have no file system resolvers, because our repository is hosted on a central server."
__label__neutral	neutral_3109	Only the cache is a local filesystem resolver.
__label__neutral	neutral_3110	"We are using this pattern ""${ivy.dir.pattern}/[revision]/[artifact]."
__label__neutral	neutral_3111	"[ext]"" so we should fullfil the requirements for the atomic operation."
__label__neutral	neutral_3112	Is it planned to add the atomic feature to all resolvers?
__label__neutral	neutral_3113	"I did some more messing around, and I was wrong about the FS stuff."
__label__neutral	neutral_3114	I deleted the local hbase directory and the problem went away.
__label__neutral	neutral_3115	Does this mean the migrate tool is busted for this version?
__label__neutral	neutral_3116	Problem ensuing from source files inconsistency
__label__neutral	neutral_3117	Patch with the fixes.
__label__neutral	neutral_3118	Committing shortly.
__label__neutral	neutral_3119	Applying both patches results in clean tests (jdbc4 tests and derbyall modulo wisconsin noise).
__label__love	love_718	"Aha,, thanks for the information. That makes sense. Glad to hear that it helped! :)"
__label__neutral	neutral_3120	Yeah that one (TestAtomicOperation) has me worried a bit.
__label__neutral	neutral_3121	That one has not failed in a *very* long.
__label__neutral	neutral_3122	And new we've had two failures within a few days.
__label__neutral	neutral_3123	Patch integrated to trunk.
__label__neutral	neutral_3124	Closed after release.
__label__neutral	neutral_3125	Doc update to correct FQCN.
__label__neutral	neutral_3126	"Simon, I'm going to get deletes working, tests passing using maps in the RT branch, then we can integrate."
__label__neutral	neutral_3127	This'll probably be best.
__label__neutral	neutral_3128	"Jason, I suggest you create a separate issue something like ""Integrate BytesRefHash in Realtime Branch"" and I will take care of it."
__label__neutral	neutral_3129	I think this issue had a clear target to factor out the hash table out of TermsHashPerField and we should close it.
__label__neutral	neutral_3130	lets use a new one to track the integration.
__label__love	love_719	Thanks for looking into this Suresh.
__label__neutral	neutral_3131	"Now, I can see this from the traces too."
__label__neutral	neutral_3132	We are re-using the prepared statement after table t1 is dropped.
__label__neutral	neutral_3133	Completed: At revision: 520469
__label__neutral	neutral_3134	I believe this will be done only when the package name has to be changed due to backward incompatibilities.
__label__neutral	neutral_3135	This is not new : we have the same type of behaviour when we switch languages...
__label__neutral	neutral_3136	Note: also change the use/effect of network connector dynamicOnly - this flag had little effect but is now re-commissioned to indicate whether durable subs should be auto bridged (default) or whether they should be dynamic only.
__label__neutral	neutral_3137	There is no change to the default behavior.
__label__neutral	neutral_3138	Fixed long ago.
__label__neutral	neutral_3139	Deleting an entry now flushes the main page cache.
__label__neutral	neutral_3140	the link you point to is not our official javadoc our official javadoc is in the maven repo.
__label__neutral	neutral_3141	if you want to view online there is a refreshed version here: wicketstuff.org/wicket13doc for fragment see here http://wicketstuff.org/wicket13doc/org/apache/wicket/markup/html/panel/Fragment.html
__label__neutral	neutral_3142	I would like to get some early comments on the changes I have made to the Namenode to support restarting within the same JVM.
__label__neutral	neutral_3143	There are still some debugging prints that will go away in the final submission.
__label__neutral	neutral_3144	"Oops, you're right, that makes sense."
__label__neutral	neutral_3145	New patch that includes those changes.
__label__neutral	neutral_3146	"In the future, I could just get around the issue by using relative symlinks for those files (I think)."
__label__neutral	neutral_3147	The patch does not contain any @author tags.
__label__neutral	neutral_3148	The patch doesn't appear to include any new or modified tests.
__label__neutral	neutral_3149	Please justify why no new tests are needed for this patch.
__label__neutral	neutral_3150	Also please list what manual steps were performed to verify this patch.
__label__neutral	neutral_3151	The javadoc tool did not generate any warning messages.
__label__neutral	neutral_3152	The applied patch does not increase the total number of javac compiler warnings.
__label__neutral	neutral_3153	The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.
__label__neutral	neutral_3154	The applied patch does not increase the total number of release audit warnings.
__label__neutral	neutral_3155	The mvn site goal succeeds with this patch.
__label__neutral	neutral_3156	{color:green}+1 core tests{color}.
__label__neutral	neutral_3157	The patch passed unit tests in .
__label__neutral	neutral_3158	Fxied and regression test written
__label__neutral	neutral_3159	These 3 crashes happen while compiling DocumentWriter.invertDocument.
__label__neutral	neutral_3160	It must be a bug in Sun's hotspot compiler.
__label__neutral	neutral_3161	Has anyone opened an issue at http://bugs.sun.com yet?
__label__neutral	neutral_3162	"That method, which inverts a single document, was replaced with new code starting with 2.3, so it's possible you can workaround the bug by upgrading to 2.3 or 2.4."
__label__neutral	neutral_3163	But it'd still be nice to get the actual hotspot bug fixed.
__label__neutral	neutral_3164	"How about following the naming from Math.min() and Math.max(): public static Date min(Date date1, Date date2); public static Date max(Date date1, Date date2); Alternatively, when I read 'Returnes [sic] the least recent (oldest)"", why not call the methods oldest() and newest()"
__label__neutral	neutral_3165	"Improve patch : when the flexibleString is resolved, search fields on root context and parameters map."
__label__neutral	neutral_3166	"Yes, but even for Java 5 a relative path to a directory with flattened dependencies would be shorter, wouldn't it?"
__label__neutral	neutral_3167	Committed to 0.92 and trunk.
__label__neutral	neutral_3168	And compatibility test also ....
__label__neutral	neutral_3169	"Murray, that is exactly what I am proposing - having a separate org.apache.jspwiki.api -package, and placing a number of existing manager classes into it as interfaces."
__label__neutral	neutral_3170	"Or to be precise, a mostly equivalent set of APIs; JCR requires some modifications which would make it complicated to support the existing set of APIs - mainly because we need to carry state information in a WikiContext, which the old API signatures do not mostly support."
__label__neutral	neutral_3171	I would also like us to start using WikiNames wherever useful.
__label__neutral	neutral_3172	"The idea behind this is largely the same as with our existing package structure - there is nothing technical in preventing *everything* to be in the org.apache.jspwiki -namespace (with no subpackages), but both aesthetics and experience tell us that it just makes sense to add subpackages to make class management easier."
__label__neutral	neutral_3173	"In the same vein, isolating the API interfaces into a separate package makes it a lot easier to manage than having everything dispersed around - e.g."
__label__neutral	neutral_3174	"if we want to create a jspwiki-api.jar, we only need to jar up the contents of a particular subdirectory."
__label__neutral	neutral_3175	"If the developer wants to know whether he is using any possibly unstable components, all he needs to do is to glance at the set of import statements on the top - if he's using other classes than org.apache.jspwiki.api."
__label__neutral	neutral_3176	"*, he knows that the classes are potentially unstable."
__label__neutral	neutral_3177	"In addition, it makes the committer's life easier, since there is an agreement by convention that the APIs inside *.api are not to be touched without common agreement, whereas anything outside of this package can be treated with more liberties."
__label__neutral	neutral_3178	We have so many people contributing in the code that API incompatibilities can creep in without anyone noticing.
__label__neutral	neutral_3179	"(There is no PageManager at all; there is a ContentManager, which will have a very similar API, but it will manage both pages and attachments."
__label__neutral	neutral_3180	"What's the purpose of this line in the patch to BaseTestCase, Kristian?"
__label__neutral	neutral_3181	"Hi Julien, please have a look on ./test/cpp/TestServer.cpp It's doing exactly what you what to do but TFramedTransport is explicitly specified there."
__label__neutral	neutral_3182	It looks like HLog main has support to invoke --split.
__label__neutral	neutral_3183	Does it looks like if I call that on the log that it will put split it and put the data into the right place?
__label__neutral	neutral_3184	We had a handful of regionservers go OOM yesterday while a MR job was doing heavy writes to a column family that doesn't usually get them.
__label__neutral	neutral_3185	"In this case, the first OOM occurred here during writing the checksum."
__label__neutral	neutral_3186	How about patch 2?
__label__neutral	neutral_3187	"I added a ""."""
__label__neutral	neutral_3188	to the end of the message.
__label__neutral	neutral_3189	So we are sure how to parse it no matter how hadoop/platform changes.
__label__neutral	neutral_3190	"Hi Senaka, That is exactly what I'd like to do, i.e., automatic download of CA cert and go ahead."
__label__neutral	neutral_3191	Is this possible?
__label__neutral	neutral_3192	Frank
__label__neutral	neutral_3193	"Please have a look at the latest patch FELIX-3339_threaddump-as-inventoryprinter_FIXED.patch which correctly provides an InventoryPrinter implementation of Thread Dumper, have a look at the attached Screen Shot 2013-05-23 at 3.02.24 PM.pdf to see it in action embedded in the WebConsole."
__label__neutral	neutral_3194	I hope you'll like it!
__label__neutral	neutral_3195	The patch looks good and the tests pass +1.
__label__neutral	neutral_3196	"I agree there's a bug, I just want to ensure any change still works correctly when CURRENT_USER name is passed in."
__label__neutral	neutral_3197	My assertion is that the username passed into these routines (without any modification) is equivalent to value of an username identifier in the SQL language after it has been parsed by the SQL engine.
__label__neutral	neutral_3198	"This is also known as ""how it is stored in the SQL engine"" [JDBC]."
__label__neutral	neutral_3199	Note that though how users names are represented in the derby.
__label__neutral	neutral_3200	* properties may or may not match how a SQL engine would store them.
__label__neutral	neutral_3201	For historical reasons in some (all?)
__label__neutral	neutral_3202	cases the values in a derby.
__label__neutral	neutral_3203	"* property may be as a delimited identifier, e.g."
__label__neutral	neutral_3204	"""eVe""."
__label__neutral	neutral_3205	"Note that the Derby builtin users are not created through a SQL identifier in the SQL language, e.g."
__label__neutral	neutral_3206	in a CREATE USER statement.
__label__neutral	neutral_3207	"They are created by setting properties and are thus not ""stored in the SQL engine""."
__label__neutral	neutral_3208	Does not appear to exist in trunk.
__label__neutral	neutral_3209	These blockers and critical issues are resolved but not verified.
__label__neutral	neutral_3210	Reporters of these issues please verify the fixes and help close these issues
__label__neutral	neutral_3211	I couldn't reproduce this.
__label__neutral	neutral_3212	"Ted, can you reproduce this outside of cassidy.pl?"
__label__neutral	neutral_3213	Thanks for the response.
__label__love	love_720	"Thanks a lot for sharing that, Josh!"
__label__neutral	neutral_3214	"I like the idea of making sure that things that should be specified should be passed as method parameters in one go, rather than through chaining, which makes it a lot harder to see what is required."
__label__neutral	neutral_3215	So I took the liberty of updating the patch to use requiredX/optionalX methods like in your code.
__label__neutral	neutral_3216	Regarding Doug's points... > But perhaps the preferred import should instead be 'import static SchemaBuilder.*'?
__label__neutral	neutral_3217	The static methods have unique-enough names that this might work well.
__label__neutral	neutral_3218	Sounds good.
__label__neutral	neutral_3219	> We can convert from Java object to JsonNode by parsing the output of GenericData.toString(Object).
__label__neutral	neutral_3220	Thanks.
__label__neutral	neutral_3221	"I've updated the patch to do this, but it still needs tests for this part."
__label__neutral	neutral_3222	"I'm thinking of multiple concurrent mutateRows operation, trying to lock the same set of rows."
__label__neutral	neutral_3223	"Perhaps, throwing IOException is going to prevent us from a situation where we end up with a deadlock."
__label__neutral	neutral_3224	"But, we still might want to sort it to ensure (better) progress (no livelock)."
__label__neutral	neutral_3225	"Unless I'm missing something, your patch doesn't actually change how the version is checked, only how it's computed."
__label__neutral	neutral_3226	"Did you intend to combine our patches, or is your patch incomplete?"
__label__neutral	neutral_3227	[bulk update] Close all resolved issues that haven't been updated for more than one year.
__label__neutral	neutral_3228	- push out to 0.5
__label__neutral	neutral_3229	A workaround for this issue is to use entity resolver.
__label__neutral	neutral_3230	You may close this issue.
__label__love	love_721	Thanks a lot Subin.
__label__neutral	neutral_3231	"Also, when do you plan to take up AMBARI-1843 for adding the unit tests?"
__label__neutral	neutral_3232	We do not have to block this jira on the unit tests but we should probably try and get that in sooner than later.
__label__neutral	neutral_3233	Added patch to support configuration mapping
__label__neutral	neutral_3234	Wonky.
__label__neutral	neutral_3235	"Although as far as I see it, the bug here is that we allow the underscore after ""_design/"" not that we can't use filters from it."
__label__love	love_722	"Brilliant feedback, thanks! I'm glad you found the issue, and the solution!"
__label__love	love_723	Sweet :) You got there before me
__label__love	love_724	bq. First of welcome :) Thank you.
__label__love	love_725	Thats sweet that you have the prior experience hacking this on top of a store already.
__label__love	love_726	"Excellent work, DoÄŸacan - thank you."
__label__love	love_727	This looks simple and sweet to me.
__label__love	love_728	Sweet kickstart for our new wiki!
__label__love	love_729	"Hello, Thanks a lot! It works. Lisa"
__label__love	love_730	"Yes please - pull request away, my friend!"
__label__neutral	neutral_3236	To me this is intersection.
__label__neutral	neutral_3237	"See the below example Employee1 Employee2 Employee3 Dept1.employess=Employee1 Dept1.employess=Employee3 Dept2.employess=Employee2 Intersection Employee1 x Dept1.employess=Employee1 Employee3 x Dept1.employess=Employee3 Employee2 x Dept2.employess=Employee2 I don't like this sintax since it changes an obvious behaviour, IMO."
__label__neutral	neutral_3238	"I would prefer to write it as SELECT intersect(employee,this.employees).manager.lastname FROM org.apache.jdo.tck.pc.company.Department VARIABLES Employee employee Now it's up to up to clearify"
__label__neutral	neutral_3239	JUnit test and Patch provided
__label__neutral	neutral_3240	Patch framework src/java and src/test to include JNDI adapters and unit tests.
__label__neutral	neutral_3241	> we have to do it for each call.
__label__neutral	neutral_3242	I meant for each newly added/deleted ones.
__label__sadness	sadness_137	"If someone wants to take this over, that's cool - I'm unlikely to have time in the next week and a half, though."
__label__sadness	sadness_138	"It is a nasty bug that I've seen in real life, though."
__label__neutral	neutral_3243	Here's another crack at this: 1) The default behavior for Derby is the current behavior with all of its security holes for java routines.
__label__neutral	neutral_3244	"2) To get secure behavior for java routines, the customer has to explicitly opt-in."
__label__neutral	neutral_3245	Let's be vague about what that entails right now.
__label__neutral	neutral_3246	"3) If you do opt-in, then you get the SQL standard behavior: 3a) Jar ids are mandatory."
__label__neutral	neutral_3247	"Instead, to access methods in the JRE you have to include little wrapper methods in your jar files that you loaded into the database."
__label__neutral	neutral_3248	3c) The search order for customer-written routines is SQL standard: First we look in the jar file where the routine lives.
__label__neutral	neutral_3249	Then we look in the other jar files in the order specified by SQLJ.ALTER_JAVA_PATH.
__label__neutral	neutral_3250	Then we defer to the system class loader.
__label__neutral	neutral_3251	"3d) At runtime, when we invoke the routine, we make sure that it actually lives in the declared jar file."
__label__neutral	neutral_3252	MR's fix (similar to HDFS one).
__label__neutral	neutral_3253	Note also that an implementation goal is to not spawn threads to do writes to the underlying transport (like TFileTransport does now).
__label__neutral	neutral_3254	Sample implementation of CREATE DATABASE and DROP DATABASE for MySQL 5.0.2+.
__label__neutral	neutral_3255	Thanks.
__label__neutral	neutral_3256	"In the wiki next to each one of these parameters it explicitly says that reducing this parameter will decrease memory usage, this is why we reduced these parameters (it did not mention the filterCache at all)."
__label__neutral	neutral_3257	They will save RAM to a certain extent for certain situations.
__label__neutral	neutral_3258	"But not very helpful at the sizes you are working with (and not settings I would use to save RAM anyway, unless the amount I need to save was pretty small)."
__label__neutral	neutral_3259	"Also, the savings are largely index side - not likely a huge part of your RAM concerns, which are search side."
__label__neutral	neutral_3260	"My filterCache stats are great- you know it's set to 64K but right now, with almost all the RAM used up (we're at 71.9% now), but it's only using 36290 entries at the moment and it's holding pretty steady there(even as RAM usage increased by 10%)."
__label__neutral	neutral_3261	None of the other caches have gone up much either.
__label__neutral	neutral_3262	"We have no cache evictions, at all, but a 99% hit ratio."
__label__neutral	neutral_3263	The sizes may be higher than you need then.
__label__neutral	neutral_3264	They should be adjusted to the best settings based on the wiki info.
__label__neutral	neutral_3265	"I was originally suggesting you might sacrifice speed with the caches for RAM - but, its always best to use the best settings and have the necessary RAM."
__label__sadness	sadness_139	Yes exactly -- sorry to be so unclear.
__label__neutral	neutral_3266	Just really wondering/hoping you'd be interested in working on these ??
__label__neutral	neutral_3267	I'd like to get them cleaned up because there are now so many that other more important and/or meaningful warnings are likely to be ignored.
__label__neutral	neutral_3268	Here's what got renamed: .../{hadoop-hbase.postinst => hadoop.postinst} .../deb/hbase/{hadoop-hbase-doc.dirs => hbase-doc.dirs} .../deb/hbase/{hadoop-hbase-doc.install => hbase-doc.install} .../deb/hbase/{hadoop-hbase.dirs => hbase.dirs} .../hbase/{hadoop-hbase.install => hbase.install} .../{hadoop-hbase.manpages => hbase.manpages} .../hbase/{hadoop-hbase.preinst => hbase.preinst} .../hbase/SOURCES/{hadoop-hbase.sh => hbase.sh} .../{hadoop-hbase.sh.suse => hbase.sh.suse}
__label__neutral	neutral_3269	HADOOP-5679 changed this function to return int instead of void.
__label__neutral	neutral_3270	Some amount of searching later...
__label__neutral	neutral_3271	"I can't come up with a pure-CSS, in-place change for this."
__label__neutral	neutral_3272	Another alternative might be to make a little icon + onhover that displays the non-comma'ed value and change the default display to comma'ed?
__label__neutral	neutral_3273	The icon may be unnecessary; maybe just onhover on the text itself?
__label__neutral	neutral_3274	Commited a fix for this into trunk using revision 610846.
__label__neutral	neutral_3275	I will work on merging this into 10.3 codeline and writing a test case.
__label__neutral	neutral_3276	The tests ran fine on my Windows XP machine with Sun jdk1.4 The commit comments are as follows DERBY-3302 The user was running into null pointer exception at the time of database recovery because Derby was trying to get the Collator object through database context.
__label__neutral	neutral_3277	But the Collator object is already available in the territory sensitive character classes and we do not have to go to database context to get it.
__label__neutral	neutral_3278	I changed the code to use that collator object rather than look into database context.
__label__neutral	neutral_3279	The reason for null pointer exception was that database context was not loaded yet during database recovery.
__label__neutral	neutral_3280	I would like to close this issue.
__label__neutral	neutral_3281	Redirect handling has undergone significant changes since this issue was opened and we still need to take a hard look at redirects and possibly how scores are represented.
__label__neutral	neutral_3282	"However, the newer scoring and indexing frameworks do work around this issue."
__label__neutral	neutral_3283	Pushed to master.
__label__neutral	neutral_3284	I have changed the title and description of this JIRA to fit our current idea.
__label__love	love_731	I love this.
__label__fear	fear_9	Currently the user passwords are too insecure.
__label__neutral	neutral_3285	A slow hash algorithm makes offline cracking harder.
__label__neutral	neutral_3286	"It would require changes to the API to have crypto only run on the server, but it might be simpler."
__label__joy	joy_255	dc36d49eb3e240b3d8fd8b89ab178a7b1ec17d8b TS-1513: SPDY plugin crashes on connection close Thanks for testing!
__label__neutral	neutral_3287	Fixed the crash in this bug; let's open a new one for the SPDY connection issues.
__label__neutral	neutral_3288	Could you attach a test case (Junit preferrably) that shows the unexpected behaviour?
__label__sadness	sadness_140	"I'm not sure what the problem is, but the behavior (at least in 0.1.4) is that the _isClosed AtomicBoolean is not being set to closed in a timely manner."
__label__neutral	neutral_3289	This may only be related to the BlurIndexReader and may not be an issue in the BlurIndexNRT.
__label__neutral	neutral_3290	marking Fixed in 1.3 (I believe Ryan left this open to track any potential issues ... if nothing else this way we'll remember to resolve it before releasing)
__label__love	love_732	Thanks for looking into this Allan.
__label__neutral	neutral_3291	"I was thinking more of what happens on a Unix shell when you hit ""clear""."
__label__neutral	neutral_3292	"With your patch, the cursor might still be at the end of the grunt window after 14 new lines."
__label__love	love_733	Thank you Babak!
__label__joy	joy_256	I will be the sponsor for your beer the next time we meet.
__label__neutral	neutral_3293	"Claus, I think I'm busy the next two weeks with [CAMEL-3468|https://issues.apache.org/jira/browse/CAMEL-3468], [CAMEL-3472|https://issues.apache.org/jira/browse/CAMEL-3472], [CAMEL-3471|https://issues.apache.org/jira/browse/CAMEL-3471], [CAMEL-3470|https://issues.apache.org/jira/browse/CAMEL-3470] and [CAMEL-3311|https://issues.apache.org/activemq/browse/CAMEL-3311]."
__label__neutral	neutral_3294	"Depending of the release date for Camel 2.6 and the priority of the other issues (may be I can reschedule [CAMEL-3471|https://issues.apache.org/jira/browse/CAMEL-3471] and/or other issues), I can do it in the remaining time."
__label__joy	joy_257	But I'm probably not an JMX expert... ;-)
__label__neutral	neutral_3295	Adds a new class of Exception.
__label__neutral	neutral_3296	Now TestBatchUpdate takes 50 sec instead of 250.
__label__neutral	neutral_3297	Please review.
__label__sadness	sadness_141	"Sorry for the delay and thanks for the good work, works like a charm!"
__label__joy	joy_258	"I tested a couple of projects with IDEA 7 and 8 and some more with IDEA 7, and everything is working."
__label__neutral	neutral_3298	Obviously I was testing artifacts:sources as well.
__label__neutral	neutral_3299	"buildr idea still produces the ""old"" format files (IDEA 6 maybe?)"
__label__joy	joy_259	but both IDEA 7 and IDEA 8 seem to handle them just fine.
__label__neutral	neutral_3300	"At some moments it could be upgraded to do IDEA 8 format, but it's not important for now."
__label__surprise	surprise_29	Is the bug really in NGramTokenFilter?
__label__neutral	neutral_3301	"This seems to be a larger problem that would affect all tokenfilters that break larger tokens into smaller ones and recalculate offsets, right?"
__label__neutral	neutral_3302	"For example: EdgeNGramTokenFilter, ThaiWordFilter, SmartChineseAnalyzer's WordTokenFilter, etc?"
__label__neutral	neutral_3303	"I think WordDelimiterFilter has special code that might avoid the problem (line 352), so it might be ok. Is there any better way we could solve this: for example maybe instead of the tokenizer calling correctOffset() it gets called somewhere else?"
__label__neutral	neutral_3304	This seems to be what is causing the problem.
__label__neutral	neutral_3305	Uploading another patch for fixing the maven pattern to add the classifier.
__label__neutral	neutral_3306	I don't see the connection to .tmp files.
__label__neutral	neutral_3307	(Also: have you verified that the channel will actually infinite-loop returning 0?
__label__neutral	neutral_3308	"Kind of odd behavior, although I guess it's technically within-spec.)"
__label__neutral	neutral_3309	IncomingStreamReader does clean the tmp file when there is an expection (there's an enclosing 'try catch').
__label__neutral	neutral_3310	The problem is that no exception is raised if the other side of the connection dies.
__label__neutral	neutral_3311	What will happen then is the read will infinitely read 0 bytes.
__label__neutral	neutral_3312	"So this actually avoid the infinite loop returning 0 (and so I think answered your second question, so it wasn't very clear)."
__label__neutral	neutral_3313	"Note that without this patch, there is an infinite loop that will hold a socket open forever (and consume cpu, though very few probably in that case)."
__label__neutral	neutral_3314	So this is not just merely a fix of deleting the tmp files.
__label__neutral	neutral_3315	But it does as a consequence of correctly raising an exception when should be.
__label__neutral	neutral_3316	<joes4> lists will be available in 1 hour from now.
__label__neutral	neutral_3317	"Andrew, are you familiar with this code?"
__label__neutral	neutral_3318	"I've got a patch, figured I'd have someone take a quick look-see before pushing it to Apache."
__label__sadness	sadness_142	Sorry I thought submit patch was the way to attach a patch.
__label__neutral	neutral_3319	"Patch providing Comparable for ""api2"" project."
__label__neutral	neutral_3320	Patch does the following 1.
__label__neutral	neutral_3321	"IntIdentity, ShortIdentity, LongIdentity, CharIdentity, ByteIdentity, StringIdentity provide implementation of compareTo() allowing comparison with other identity *of the same type*."
__label__neutral	neutral_3322	2
__label__neutral	neutral_3323	ObjectIdentity disallows comparison
__label__neutral	neutral_3324	The insert_between.patch fixes the following: 1.
__label__neutral	neutral_3325	Changes the implementation of insertBetween in OperatorPlan.java so that the ordering of the predecessors is not changed 2.
__label__neutral	neutral_3326	Changed log.info in LOForeach getSchema() to log.debug.
__label__neutral	neutral_3327	One of my earlier patches had the log.info 3.
__label__neutral	neutral_3328	"Removed a printPlan use in TestLogicalPlanBuilder.java The unit tests that still fail are: [junit] Running org.apache.pig.test.TestEvalPipeline [junit] Tests run: 8, Failures: 0, Errors: 1, Time elapsed: 141.926 sec [junit] Test org.apache.pig.test.TestEvalPipeline FAILED [junit] Running org.apache.pig.test.TestFilterOpNumeric [junit] Tests run: 8, Failures: 0, Errors: 1, Time elapsed: 56.446 sec [junit] Test org.apache.pig.test.TestFilterOpNumeric FAILED [junit] Running org.apache.pig.test.TestStoreOld [junit] Tests run: 3, Failures: 0, Errors: 2, Time elapsed: 39.782 sec [junit] Test org.apache.pig.test.TestStoreOld FAILED"
__label__anger	anger_334	"It's kind of annoying to have to use 4GB of temporary space Nope, it only writes the compressed file to disk; {{gzip -1}} compresses 4GB of zeros to 18 MiB."
__label__love	love_734	"Could you please port it to branch-1 that that we could integrate it to branch-1-win Slavik, thanks for the review!"
__label__sadness	sadness_143	"I don't have very much experience on branch-1, would you like to take a shot at the port?"
__label__sadness	sadness_144	Especially I don't know very much about the test framework differences.
__label__sadness	sadness_145	I will figure out the details and do the port later this week if you don't get to it first.
__label__neutral	neutral_3329	xerces.apache.org has been added to DNS.
__label__neutral	neutral_3330	I am going to wait until it propagates before continuing.
__label__neutral	neutral_3331	"ISOLatinAccentFilter.java again, now with Unicode Latin Extended B as well."
__label__neutral	neutral_3332	"Hi Sebb, In these cases 'this' and 'connectionPool' refer to the same object."
__label__neutral	neutral_3333	It just depends if the code is inside the connectionPool (uses this) or inside MTHCM (uses connectionPool).
__label__neutral	neutral_3334	Mike
__label__neutral	neutral_3335	Stopping SQL routines accessing the privileged blocks is through DERBY-2331 and DERBY-2330
__label__sadness	sadness_146	"sorry, unassigning myself from this backport."
__label__sadness	sadness_147	Another backport (for a different jira) of mine is failing and I want to see if I can figure out what might be wrong there before doing a new backport.
__label__love	love_735	"Thanks Ashish, For committing the patch."
__label__neutral	neutral_3336	If I see more occurrence of Lookup or search for find forms then shortly upload the patch for this fixes .
__label__love	love_736	Thanks Chandan Khandelwal
__label__sadness	sadness_148	"To upgrade to a recent version of Jackrabbit, see http://wiki.apache.org/jackrabbit/BackupAndMigration I'm afraid I can't say much about the risk."
__label__neutral	neutral_3337	Can you just apply this patch file over top of the other one?
__label__neutral	neutral_3338	Uploading rebased patch for sathish
__label__neutral	neutral_3339	Maybe we should purge the Reader+queuing step and just have Handlers do the read (Nicolas Liochon what you think?)
__label__sadness	sadness_149	"I've tried something similar (I removed the handlers and kept the readers), but the performance was not visible."
__label__sadness	sadness_150	The responder seemed to be a bottleneck.
__label__sadness	sadness_151	"But it was not the only issue: we also want to manage priorities between the tasks, but we need to read them to get enough information to make the right priorities."
__label__neutral	neutral_3340	I just committed this.
__label__love	love_737	"Thanks, Aaron!"
__label__neutral	neutral_3341	I knew they were missing and just forgot to do it before I committed it.
__label__neutral	neutral_3342	Cancelling current patch to upload new patch
__label__neutral	neutral_3343	To answer your questions in order: This problem only happens with the embedded driver because the Database is created inside the JVM and locked to prevent other processes to connect to it.
__label__neutral	neutral_3344	"With the client, you can connect to the same database many times."
__label__neutral	neutral_3345	I'll attach a zip with a small test project where you can reproduce the problem.
__label__neutral	neutral_3346	(all you need to add is your derby.jar) I'm testing the DerbyTest from Eclipse.
__label__neutral	neutral_3347	I'm starting the 2nd version of DerbyTest from Eclipse as well.
__label__neutral	neutral_3348	When debugging it in Eclipse you can see the number of daemons grow very fast.
__label__sadness	sadness_152	While creating the DerbyTest I did notice that this problem is caused by the Database pool because it tries to connect to the database in the background.
__label__neutral	neutral_3349	Still using a connection pool is pretty common.
__label__love	love_738	Please let me know if you need something else.
__label__neutral	neutral_3350	"Regards, Leon"
__label__neutral	neutral_3351	"Hey Uma, I've elected not to revert the patch as-committed, since it does indeed fix the bug at hand."
__label__neutral	neutral_3352	"But, in reviewing the patch, I've come up with a number of ideas for how LeaseManager#changeLease and FSNamesystem#unprotectedChangeLease can be improved."
__label__neutral	neutral_3353	I've filed them in this JIRA: HDFS-2875.
__label__love	love_739	"If you would like to take up this work, that'd be great."
__label__love	love_740	"Otherwise, hopefully someone else will improve this code when they've got some time."
__label__sadness	sadness_153	Sorry [~fiberlijun] - havent had a chance to look at it yet.
__label__neutral	neutral_3354	Will try and do so within the next couple of days unless [~bikassaha] or [~sseth] beat me to it.
__label__neutral	neutral_3355	"As KeywordTokenizer does the same thing, I'll close this issue."
__label__sadness	sadness_154	(I could not get what KEYWORD means.)
__label__neutral	neutral_3356	Some folks on the mailing list had something like this happening to them.
__label__sadness	sadness_155	"I am checking out the dojo fixes and patching them in, sorry for the delay, it has been a long time"
__label__neutral	neutral_3357	Added Maven Remote Resources Plugin version 1.0-alpha-5.
__label__sadness	sadness_156	> then we don't save IO by limiting the buffer size to 1 KB I'm confused by this.
__label__neutral	neutral_3358	"My assumption is that, when you make a request to read 1k from a disk file, that the OS reads substantially more than 1k from the disk and places it in the buffer cache."
__label__neutral	neutral_3359	(The cost of randomly reading 1k is nearly the same as randomly reading 100k--both are dominated by seek.)
__label__neutral	neutral_3360	"So, if you make another request to read 1k shortly thereafter you'll get it from the buffer cache and the incremental cost will be that of making a system call."
__label__neutral	neutral_3361	"In general, one should thus rely on the buffer cache and read-ahead, and make input buffers only big enough so that system call overhead is insignificant."
__label__neutral	neutral_3362	"An alternate strategy is to not trust the buffer cache and read-ahead, but rather to make your buffers large enough so that transfer time dominates seeks."
__label__neutral	neutral_3363	"This can require 1MB or larger buffers, so isn't always practical."
__label__neutral	neutral_3364	"So, back to your statement, a 1k buffer doesn't save physical i/o, but nor should it incur extra physical i/o."
__label__neutral	neutral_3365	"It does incur extra system calls, but uses less memory, which is a tradeoff."
__label__neutral	neutral_3366	Is that what you meant?
__label__love	love_741	"[~lhofhansl], thank you so much."
__label__neutral	neutral_3367	I will upload another patch (V5) in a couple minutes.
__label__neutral	neutral_3368	"There are some changes about ServerName in the past few weeks, so v5.patch changed this one-line {code} return ServerName.valueOf(hostname, 1234, 1L); {code}"
__label__sadness	sadness_157	Seems to be failing for a different reason now testContainerLaunch(org.apache.hadoop.yarn.server.nodemanager.TestLinuxContainerExecutorWithMocks) Time elapsed: 0.523 sec <<< FAILURE!
__label__neutral	neutral_3369	Patch uploaded.
__label__neutral	neutral_3370	Have passed all the local unit tests.
__label__sadness	sadness_158	"Sorry, for all the issue mails, I forgot to mention the second: 2) There is commented source in the test, should it be enabled or removed?"
__label__neutral	neutral_3371	"//OdfDocument embedDoc = doc.getEmbeddedDocument(""Object 7""); //embedDoc.save(ResourceUtilities.newTestOutputFile(TEST_FILE_EMBEDDED_SAVE_OUT)); //embedDoc = OdfDocument.loadDocument(ResourceUtilities.getTestResourceAsStream(TEST_FILE_EMBEDDED_SAVE_OUT)); //Assert.assertEquals(embedDoc.getMediaType(), OdfMediaType.TEXT.toString()); Svante"
__label__sadness	sadness_159	I'm very sorry.
__label__neutral	neutral_3372	"If you want to work on it or assign it to someone else, please do."
__label__neutral	neutral_3373	"Otherwise, I will try to look at it when I return to some JSF development at work later this month."
__label__neutral	neutral_3374	"If there's a problem with items being in the cache when they shouldn't be, adding a check around the Add method isn't a solution to that problem."
__label__neutral	neutral_3375	We should be Remove()ing items from the cache...not just overwriting them.
__label__neutral	neutral_3376	I applied an addendum for HBASE-3904 v6 to TRUNK.
__label__neutral	neutral_3377	NPE is fixed.
__label__neutral	neutral_3378	"However, HBASE-4087 is required for the new unit test to pass."
__label__neutral	neutral_3379	"Sample client, server and broker configuration."
__label__neutral	neutral_3380	"Watch out for ""Got InvalidDestinationException"" messages."
__label__neutral	neutral_3381	Kiran - I think this is a setup issue than anything else.
__label__neutral	neutral_3382	Hugo - if you couldnt reproduce it please close it
__label__neutral	neutral_3383	A quick and simple fix.
__label__neutral	neutral_3384	How to handle the problem with LUCENE_29 setting and the posIncr of stopwords together with QueryParser that has a default setting of ignoring posIncr?
__label__neutral	neutral_3385	How about adding required Version to QP ctor?
__label__joy	joy_260	Thanks Mark for taking care of this issue!
__label__joy	joy_261	"this class, funny coincidence :) What are you thoughts about QueryParser being able to know about custom Query implementations?"
__label__neutral	neutral_3386	"if I were to write a MyQuery class and implemen the toString method a certain way, how would QueryParser know about MyQuery?"
__label__neutral	neutral_3387	Is it possible to extend QueryParser?
__label__sadness	sadness_160	Sorry guys... :( I was the reason for this trouble.
__label__sadness	sadness_161	I should have been very careful before doing this.
__label__neutral	neutral_3388	"Hi, could you add the following line form.getDictionary().setItem(COSName.getPDFName(""NeedAppearances""),COSBoolean.TRUE); right after PDAcroForm form = docCatalog.getAcroForm(); and try again?"
__label__neutral	neutral_3389	BR Maruan
__label__neutral	neutral_3390	Still about 2 hours worth of work left on this.
__label__sadness	sadness_162	"My bad, forgot to include the test file in the patch... Resubmitting in a second."
__label__neutral	neutral_3391	"I changed the issue title, because this issue includes the implementation of non-standard math functions."
__label__neutral	neutral_3392	Make scheduler heartbeat interval configurable (bikas)
__label__sadness	sadness_163	*sorry*
__label__sadness	sadness_164	Damn.
__label__sadness	sadness_165	Git is tricky that way.
__label__joy	joy_262	:) Will have a look.
__label__joy	joy_263	"great idea, those are lost to the ages but I'll try to reproduce."
__label__neutral	neutral_3393	+1 for making test behaves predictable.
__label__neutral	neutral_3394	Tests are meant to raise potential issues not to add variation of the issue.
__label__neutral	neutral_3395	I can see leaning toward to selects from the FLUSHER table with explicit checkpoints is a good balance for this case.
__label__joy	joy_264	"However, the goal of the test was very good."
__label__neutral	neutral_3396	"I am not aware of whether we have test to fill the page cache with new data, evicting all pages currently in the cache so the row count changes are written at a known point in time."
__label__neutral	neutral_3397	"And, it will be a good test to have in turn of code coverage point of view."
__label__neutral	neutral_3398	This patch fixes bug for ia32.
__label__neutral	neutral_3399	Breakpoint handler frame is detected and processed specifically by unwinding algorithm.
__label__neutral	neutral_3400	Ran for almost an hour this time.
__label__neutral	neutral_3401	Dump looks similar to previous one.
__label__neutral	neutral_3402	Here's another whack at splitting the patch.
__label__neutral	neutral_3403	"I addressed Shravan's request to add in the MRStreaming stuff into LocalLauncher, and put in the jc.stop() calls after failed jobs in both Local and MapReduceLauncher."
__label__neutral	neutral_3404	"...and it seems like having 2 APIs, KV and Cell, for every method other than those that take Cell-types params..."
__label__neutral	neutral_3405	Which methods we talking about here?
__label__neutral	neutral_3406	There a list?
__label__love	love_742	Thanks Pat.
__label__love	love_743	Patch looks good to me.
__label__neutral	neutral_3407	Ill go ahead and push it.
__label__joy	joy_265	I like this title.
__label__neutral	neutral_3408	It is specific to what it is describing.
__label__joy	joy_266	Thanks.
__label__neutral	neutral_3409	Couldn't the NodeState implementations in question (StoreNodeAsState AFAICS) just use their id to implement hashCode()?
__label__joy	joy_267	"indeed, good catch!"
__label__neutral	neutral_3410	<joes4> This is a bug in FreeBSD's ldap support- sorry there's nothing we can do about it.
__label__neutral	neutral_3411	"In pom.xml of tajo root, you forget to change the tajo version to 0.8 at Line 76."
__label__neutral	neutral_3412	"Aaron, Go ahead."
__label__neutral	neutral_3413	Patch that adds the fix to WebResponse
__label__neutral	neutral_3414	Thanks for patch v2.
__label__neutral	neutral_3415	Some comments: 20.
__label__neutral	neutral_3416	Log.truncateTo(): The following code seems to be used just for getting the first segment.
__label__neutral	neutral_3417	22
__label__neutral	neutral_3418	ReplicaManager: 22.1 recordLeaderLogUpdate(): Could we rename it to recordLeaderLogEndOffset()?
__label__neutral	neutral_3419	22.2 close(): Could we rename it to shutdown to map startup()?
__label__neutral	neutral_3420	22.3 readCheckpointedHighWatermark(): We should just read the HW from memory.
__label__neutral	neutral_3421	The on-disk version is only useful on broker startup when we populate the in-memory HW using the on disk version.
__label__neutral	neutral_3422	23
__label__neutral	neutral_3423	"HighwaterMarkCheckpoint: Is it better to name the file "".highwaterMark"" so that it's hidden?"
__label__neutral	neutral_3424	I applied the patch at revision: 599008.
__label__neutral	neutral_3425	"Still, why do we hardcode these numbers, e.g."
__label__neutral	neutral_3426	port/src/lil/em64t/pim/m2n_em64t_internal.h: #ifdef _WIN64 const unsigned m2n_sizeof_m2n_frame = 120; #else const unsigned m2n_sizeof_m2n_frame = 104; #endif vmcore/src/util/em64t/base/compile_em64t.cpp: // Stack size should be (% 8 == 0) but shouldn't be (% 16 == 0) const int ALIGNMENT = 0; Doesn't it worth to let compiler calculate such values?
__label__neutral	neutral_3427	It would be good if folks can use standard Java i/o idioms with Hadoop.
__label__neutral	neutral_3428	http://www.ibm.com/developerworks/java/library/j-jtp03216.html {noformat} OutputStream out = fs.open(...); try { out.write(...); } finally { out.close(); } {noformat} When multiple files are involved the best thing is to nest the try blocks.
__label__neutral	neutral_3429	Shouldn't we try to make this idiom work well with HDFS?
__label__neutral	neutral_3430	"This looks good, but I wish there was a good way to set up a test case."
__label__neutral	neutral_3431	I guess the best way would be to create a JobTracker and call the heartbeat method and observe the requested heartbeat interval.
__label__neutral	neutral_3432	I included the gen stamp and length in the {{cacheReport}} to handle caching newly appended data.
__label__neutral	neutral_3433	"I guess the gen stamp is unnecessary, but the DN isn't going to automatically mlock newly appended data, so the NN needs to somehow realize that the cached length is shorter than the new length and ask the DN to recache at the new length."
__label__neutral	neutral_3434	"Alternatively, I guess the DN could automatically mlock appended data, but there are quota implications there."
__label__neutral	neutral_3435	"On startup, I agree that we can skip cache reports until the cache is populated."
__label__neutral	neutral_3436	I also agree that jittering doesn't matter as much if it's ticking on such a short time scale.
__label__neutral	neutral_3437	I guess I could have cleaned this up rather than just changing the default cache report period like Colin asked.
__label__neutral	neutral_3438	"However, since we want to eventually have both incremental and full reports, let's just ape how block reports work; don't jitter the incremental reports, but do jitter the start time for the full reports and afterwards tick at a regular interval."
__label__neutral	neutral_3439	"Let's clean up all these issues in the incremental cache report JIRA (HDFS-5092); if this sounds good, I'll edit the JIRA description with these todo items."
__label__neutral	neutral_3440	Uploaded a patch that fixes the comments and includes the test
__label__neutral	neutral_3441	Thanks for the review.
__label__neutral	neutral_3442	We used to do 'stopping'.
__label__neutral	neutral_3443	Smile.
__label__neutral	neutral_3444	Stopping' gets us closer to classic Lifecycle.
__label__neutral	neutral_3445	I think just needed for this at mo.
__label__joy	joy_268	"That's a good point; we should make sure that it doesn't decrease performance for one of the database types, even if it increases it for Oracle (in which case, making it configurable in oozie-site.xml would be a good idea too)."
__label__sadness	sadness_166	"Sigh, I don't like this overall if can't reuse everywhere."
__label__sadness	sadness_167	Sorry to let you lose a wild goose chase.
__label__sadness	sadness_168	"You are going to kill me when I say this, but it seems like we should just commit your first patch."
__label__neutral	neutral_3446	Because this neither-here-nor-there code-reuse seems not much useful.
__label__neutral	neutral_3447	The original reason why i asked this is so that clients can seamlessly cross over like in MR between RM and AHS.
__label__neutral	neutral_3448	But it seems like clients have to know which protocol they are talking to.
__label__sadness	sadness_169	This half-reuse is more confusing for new devs who see this code for the first time.
__label__neutral	neutral_3449	fully agree Christian!
__label__sadness	sadness_170	"Sorry, probably a misunderstanding from my side...."
__label__neutral	neutral_3450	"I refereed to the [^v1-enable-wall-werror.patch] which contains {{-Wall -Werror}} and I thought it sould be {{-Wall -Wextra}} However, just add {{-Wall}} to that patch makes absolutely sense and could be committed."
__label__neutral	neutral_3451	"Hi Nicholas, did you solve the issue?"
__label__sadness	sadness_171	I meet the same problem on Eclipse recently but haven't figured out how to get through.
__label__sadness	sadness_172	"Sorry Chris, I missed it, done !"
__label__anger	anger_335	"I don't think there is any sense in this, who cares?"
__label__anger	anger_336	"We reported this crash to Oracle in plenty of time, and the *worse* wrong-results bug has been open since May 13: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7044738, but Oracle decided not to fix that, too."
__label__joy	joy_269	(@ddlatham: thats kinda funny that you wrote the linked-to article -- it was a random google search)
__label__neutral	neutral_3452	"Thank you for the patch Shawn, can you also tell us what behavior you are seeing that is wrong?"
__label__neutral	neutral_3453	Maybe you can paste a SOAP query example request and explain the wrong behavior and what it is you are expecting?
__label__neutral	neutral_3454	Commit cf6045f1aa37674f0225144ae0a1f662f955f153 in branch refs/heads/pvlan from [~jessicawang] [ https://git-wip-us.apache.org/repos/asf?p=cloudstack.git;h=cf6045f ] CLOUDSTACK-747: internalLb in VPC - UI - create network offering - system offering dropdown is for router only.
__label__neutral	neutral_3455	Change its variable name to be more intuitive.
__label__neutral	neutral_3456	"you need to create system offering for system vms (ssvm,cpvm,router vm) and then you can upgrade to new system offerings, it is only supported in vmware"
__label__neutral	neutral_3457	Marking as dup of HBASE-5861 (You saw it first Andrew but Jon is going to work on this over in 5861..)
__label__neutral	neutral_3458	"Patch applied, Thank to Clay Leeds."
__label__neutral	neutral_3459	(BTW - The Idea to retrieve the Document Title is the best solution on my opinion.)
__label__neutral	neutral_3460	"[~smarthi] When I apply this patch, the source code cannot be compiled."
__label__sadness	sadness_173	One of the error is that hiddenActivations cannot be resolved.
__label__neutral	neutral_3461	Another error is that the class Functions.NEGATE is misspelled as Function.NEGATE.
__label__neutral	neutral_3462	"If you have the opportunity to do it, go ahead."
__label__sadness	sadness_174	"I'm very busy for the moment so I didn't know when I 'd be able to the change myself, so if you can, your contribution would be one more time really appreciated."
__label__sadness	sadness_175	"Oh, I didn't consider one flow like after the edit log conversion, immediately #store failed."
__label__neutral	neutral_3463	"Now again in the next trip of finalization, it will throw NodeExistsException, here it is really required to do the #store."
__label__sadness	sadness_176	I misunderstood the case and sorry for the confusion.
__label__neutral	neutral_3464	Patch looks good to me.
__label__neutral	neutral_3465	I'm fine w/ not naming it Consumer - I agree it does not really consume it.
__label__neutral	neutral_3466	"But if we go with PayloadMergeProcessor, we'll need PayloadMergeProcessorProvider and they become quite long names :)."
__label__neutral	neutral_3467	"I was thinking PayloadProcessor and PayloadProcessorProvider (have cool acronyms to PP and PPP), but then people might get confused that it processes all payloads (maybe before they are even written the first time), while it is actually invoked only during segment merges.I was following the *Consumer pattern I saw all over the place w/ SegmentMerger, and thought that if someone ever reads SM code, it will swallow easily another *Consumer one ..."
__label__neutral	neutral_3468	"So between PC, PMP and PP - I prefer PP - the documentation should clarify what it does."
__label__neutral	neutral_3469	But I'm open for suggestions.
__label__neutral	neutral_3470	setting set hive.script.auto.progress=true; seems to have no effect.
__label__sadness	sadness_177	"Aside from the job succeeding (it doesn't), what effect should I be able to measure (in order to see if this is doing anything)?"
__label__neutral	neutral_3471	"Abhinav, can you also attach cloud_usage db dump."
__label__neutral	neutral_3472	Need it to test the fix.
__label__neutral	neutral_3473	I changed the ubuntu version too.
__label__neutral	neutral_3474	"By the way, getCanonicalPath() performs actual file access, may take long if drive is slow (e. g. Samba), may fail with exception if path is inaccessible at the moment (e. g. on network drive) etc."
__label__neutral	neutral_3475	"On the other hand, getAbsolutePath() is purely logical and doesn't need file system access."
__label__sadness	sadness_178	You misunderstood the response: StopFilter indeed did not change.
__label__neutral	neutral_3476	"The change is now that in Lucene 4.0 all Analyzers are required to reuse TokenStream instances, so the StopFilter is only produced only once in your application (when the Analyzer is created)."
__label__sadness	sadness_179	You would need to implement session resume; thats a whole new can of worms.
__label__neutral	neutral_3477	Only the first of these is a failure.
__label__neutral	neutral_3478	This test pukes all over the place when the first test fails.
__label__neutral	neutral_3479	Some of the other test cases in this class failed because that constraint error occurred?
__label__neutral	neutral_3480	There were most definitely 21 test case failures.
__label__neutral	neutral_3481	"<danielsh> Yes, any23.zones.apache.org is the jail's hostname, so use the IP it resolves to."
__label__neutral	neutral_3482	ill upload a patch for 3.1 and 3.2 branch as soon as ZOOKEEPER-597 gets committed to those branches.
__label__neutral	neutral_3483	"Yeah, seems safe."
__label__anger	anger_337	And the current behavior is irritating.
__label__neutral	neutral_3484	Will commit a bit later unless somebody beats me to it.
__label__neutral	neutral_3485	"Hi Zeid, I'll go ahead and commit your changes, but this one doesn't look right...I think it's a hold over from the Mac files."
__label__neutral	neutral_3486	This symbol is not used for the Windows Netaccessor.
__label__neutral	neutral_3487	Yeah?
__label__neutral	neutral_3488	Please watch the source tree over the next several weeks before our next release.
__label__neutral	neutral_3489	"There will probably be some additional file checks, so you'll need to patch the projects yet again."
__label__neutral	neutral_3490	This is the bridge code minus the redundant bit.
__label__neutral	neutral_3491	I would like that add that the problem is highly reproducible.
__label__neutral	neutral_3492	Looks great to me.
__label__neutral	neutral_3493	Thanks Doug.
__label__sadness	sadness_180	"Sorry for a mess in uploaded files, my connection got broken during first upload."
__label__neutral	neutral_3494	"These file describes my change: derby1434-try2.diff (attached multiple times, should have the same content) derby1434-try2.stat"
__label__neutral	neutral_3495	And it's somehow connected to https://issues.apache.org/jira/browse/DIRAPI-137
__label__neutral	neutral_3496	"The reason of such big number of ""ByteArrayOutputStream;.write"" invokes is signed ext/bcprov.jar - it's manifest is read by byte."
__label__neutral	neutral_3497	If we put this jar to bootclasspath we'll have at least 5% performance boost on HWA application .
__label__neutral	neutral_3498	btw: maybe we should add this Jira's as subtasks to HARMONY-5277 ?
__label__neutral	neutral_3499	As they're startup related.
__label__neutral	neutral_3500	"Ok, all done https://issues.apache.org/jira/browse/KATO I found sgoyal jira username to be shubham so hope thats right, if so good to go!"
__label__neutral	neutral_3501	comments on phabricator
__label__sadness	sadness_181	Here are 2 patches ... one for adjustExamplePaths.bat & .sh and the other a new file holding 2 User Libraries ... UIMA_LIB & UIMA_AS_LIB Not sure where this should go ...
__label__neutral	neutral_3502	I guessed UIMA_HOME/config but could be /lib
__label__neutral	neutral_3503	"The only thing that the convention plugin does at request time, happens in org.apache.struts2.convention.ConventionUnknownHandler, the rest is just configuration loading on start up, you might want to put a breakpoint in handleUnknownAction, and see what is going on."
__label__neutral	neutral_3504	"So either new-style hints are being written without versionColumn by RowMutation.hintFor, or old style hints did not get cleaned out properly by SystemTable.purgeIncompatibleHints."
__label__neutral	neutral_3505	But both of those look fine to me.
__label__neutral	neutral_3506	"Hi, I have changed the rsync to rsync.eu.apache.org."
__label__neutral	neutral_3507	Please check it now.
__label__neutral	neutral_3508	"Regards, Softaculous Team"
__label__sadness	sadness_182	i found the class - so there is no bug - sorry
__label__neutral	neutral_3509	"> Stage 2, btw, will involve documentation."
__label__neutral	neutral_3510	"I'm not forgetting it :) Did you forget it, or did I miss it somewhere?"
__label__sadness	sadness_183	I was not aware of being required to call that method.
__label__neutral	neutral_3511	Is it possible to do this when closing the input/outputstream aswell?
__label__neutral	neutral_3512	Thanks Mathias.
__label__sadness	sadness_184	This is a silly one.
__label__neutral	neutral_3513	Bringing into 0.90.0.
__label__neutral	neutral_3514	Marking as critical.
__label__sadness	sadness_185	"Seems we didn't enforce an exec for sh, but we did for fs."
__label__neutral	neutral_3515	@Jon Thanks for committing it.
__label__neutral	neutral_3516	Anoop reminded me about this.
__label__neutral	neutral_3517	The failure of GdiplusStartup happened to because this function was called from a native method with RSP not aligned to 16 bytes.
__label__neutral	neutral_3518	"It is not well documented in MSDN, but it looks like RSP has to be always aligned to 16 bytes."
__label__neutral	neutral_3519	"Some functions don't require it, but some do."
__label__neutral	neutral_3520	"A patch was made to the interpreter to fix this in assembly code, so if a native method has an odd number of arguments, additional 8 bytes are skilled by RSP to align it to 16 bytes."
__label__neutral	neutral_3521	Patch applied at 514264.
__label__neutral	neutral_3522	So I am likely going to work on this soon.
__label__neutral	neutral_3523	What is the exact problem?
__label__neutral	neutral_3524	If it would as simple as just recreating ReplicationZookeeper or using RecoverableZookeeper J-D would have probably just done it :)
__label__neutral	neutral_3525	"You forgot to mention the part where I said that I have absolutely no idea if MinSize is important for some other part of the code ;) Also, it looks like if we add a check in couch_db:doc_flush_binaries/2 to see if we're not streaming an attachment of unknown length, and then pass that information to couch_stream:ensure_buffer/2 so that couch_stream can decide if it wants to allocate exactly the requested amount or some extra it'd solve the issue."
__label__sadness	sadness_186	"The patch should be relatively trivial, but like I said, I have no idea if there is other important stuff going on there or not."
__label__neutral	neutral_3526	The two issues mentioned by Tom has been fixed.
__label__neutral	neutral_3527	The new patch is the whirr-168-3.patch file.
__label__neutral	neutral_3528	32 bit ubuntu 12.10
__label__neutral	neutral_3529	Marking this for 0.18.4 and above since it's a deadlock.
__label__neutral	neutral_3530	The patch should work on all fair scheduler versions.
__label__neutral	neutral_3531	"This blocker/ critcal was created before July please review and resolve, we are approaching 4.2 code freeze in 7 days"
__label__neutral	neutral_3532	Was fixed to behave as it used to.
__label__sadness	sadness_187	"Igor, sorry it took me so long to get back to this."
__label__neutral	neutral_3533	Thanks for the patch.
__label__neutral	neutral_3534	"It works for me, both in container and in testing with WicketTester."
__label__sadness	sadness_188	"Hey, sorry I did not get back to you sooner."
__label__sadness	sadness_189	I found the (sad) attempt at a script you asked about and uploaded it to MAPREDUCE-4282.
__label__neutral	neutral_3535	"As I said on that thread, I'm in a compilers class right now and I thought I might make a more ""enlightened"" attempt using lex/yacc soon and see where that gets me, if no one else gets this done first."
__label__sadness	sadness_190	Sorry for the delay.
__label__neutral	neutral_3536	"anyway, if someone is brave enough to fix the ""attempt one"" script, i wish them well ;)"
__label__neutral	neutral_3537	I added a rm -rf /tmp/h* to hadoopqa... and ran this again.... seems to be working: https://builds.apache.org/view/H-L/view/HBase/job/PreCommit-HBASE-Build/7253/console We'll see.
__label__neutral	neutral_3538	"by the way, the only open impl of this algorithm i could find is at http://rrette.com/moman.html (ZSpell) in python."
__label__neutral	neutral_3539	I recently stumbled upon a C++ey STLey impl -> http://code.google.com/p/patl/ bq.
__label__neutral	neutral_3540	I might be on the trail of a java impl - get out the hounds!
__label__neutral	neutral_3541	"If you do take hold of it, do not hesitate to share :) The original paper and C++ code likewise melt my brain, and I needed the algo in some other place."
__label__neutral	neutral_3542	Go ahead commit Nitay.
__label__neutral	neutral_3543	We can file issues with it as we find them.
__label__sadness	sadness_191	I don't have resources to hand to test this at mo.
__label__sadness	sadness_192	"Yes it is a dup, thanks Mike for taking care of this (I planned to do this yesterday but didn't make it)"
__label__neutral	neutral_3544	"Hi Deepa, I looked at the transaction logs, afaict this is not a bug, rather the znode you mention is not deleted on session expiration because it was already explicitly deleted by another session."
__label__neutral	neutral_3545	"I dumped the txnlog from zookeeper2, here is the section of interest."
__label__neutral	neutral_3546	"afaict things are working properly, at least on the ZK side of things."
__label__neutral	neutral_3547	Fixed a typo in the oritinal patch.
__label__neutral	neutral_3548	toString() method added.
__label__neutral	neutral_3549	"FWIW: this issue is a regression of JCR-890, i.e."
__label__neutral	neutral_3550	the refactoring involved (r982520).
__label__neutral	neutral_3551	there might be more hidden issues like this.
__label__neutral	neutral_3552	"+1, let's rip it out and redo it if we need it."
__label__sadness	sadness_193	Forgot to add that I also tried this with and without HBASE-5864
__label__sadness	sadness_194	but app developers should always explicitly set it based on their application My guess is that a large enough group of people take the defaults that it matters.
__label__sadness	sadness_195	App developers never do what they should :)
__label__sadness	sadness_196	"problem - the bit to sign the source-release is being called when the source-release isn't being built because the source-release is only built at the ""executionroot""."
__label__neutral	neutral_3553	I wasn't talking about the perment schedule.
__label__neutral	neutral_3554	I was talking that the first three months of becoming a TLP we have to report monthly.
__label__neutral	neutral_3555	"Kevin, we already have that -- the jobs are named after the file (if you run pig myfile.pig), but you can override the name with ""set job.name myname"" With this ticket, that job name would essentially become a prefix."
__label__sadness	sadness_197	Excuse me for stolen assignement.
__label__neutral	neutral_3556	I've saw this after completed the issue.
__label__neutral	neutral_3557	I've rework almost all needed messages in Preconditions.checkArgument.
__label__neutral	neutral_3558	And I did it according the style of each class.
__label__neutral	neutral_3559	I think it will be useful to standardize all the messages.
__label__sadness	sadness_198	In current version the same error cause different messages because there are many commiters.
__label__neutral	neutral_3560	"Example, for case: Preconditions.checkArgument(size >= 0, ""size must be at least 0""); we can do like Preconditions.checkArgument(size >= 0, ""Wrong size: "" + size + ""."
__label__anger	anger_338	Must be: size >= 0!
__label__neutral	neutral_3561	"Marking this an incompatible change, so that it gets attention."
__label__neutral	neutral_3562	"Also, setting webinterface.private.actions has other effects like enabling the 'kill job' and 'kill task' links on the Job web UI."
__label__neutral	neutral_3563	@Joy: I agree that not losing heartbeats is the best scenario.
__label__neutral	neutral_3564	"In the case I mentioned in my above comment, we would not lose datanode heartbeats if we implement HDFS-1392."
__label__neutral	neutral_3565	"On the other hand, if there is a true network partition, then NN will ""lose heartbeats"" from datanodes, because the datanodes cannot send messages to the NN."
__label__neutral	neutral_3566	"In that case, the NN should delay creating a replication-storm in the hope that the network partition gets resolved soon."
__label__neutral	neutral_3567	"So, the heuristic that I listed above to detect a network partition should still be applicable, isn't it?"
__label__neutral	neutral_3568	#NAME?
__label__neutral	neutral_3569	Yep i am actually using just Pax Runner/Exam to start Ace stuff.. but i am not 100% sure about what the MuliFrameworkStarter is about.. what is it good for ?
__label__sadness	sadness_199	Sorry for the missing class src/java/org/apache/jdo/tck/lifecycle/StateTransitionsReturnedObjects.java.
__label__neutral	neutral_3570	Checked in with revision 388211.
__label__neutral	neutral_3571	"After applied patch, the output format just like this : [root@infra1 bin]# ./hdfs dfs -count -header / DIR_COUNT FILE_COUNT CONTENT_SIZE FILE_NAME 7 10002 10292583 / [root@infra1 bin]# ./hdfs dfs -count -q -header / QUOTA REMAINING_QUATA SPACE_QUOTA REMAINING_SPACE_QUOTA DIR_COUNT FILE_COUNT CONTENT_SIZE FILE_NAME 2147483647 2147473638 none inf 7 10002 10292583 /"
__label__sadness	sadness_200	"Sorry if this was not clear, and yes, by <blank> I meant an empty string."
__label__neutral	neutral_3572	The unit test code is for a sleep job where splits need not be different since they are empty.
__label__sadness	sadness_201	"Qianshi is working on the SSL session reuse, but this buggy Bug system does not allow him assign this ticket, sigh"
__label__sadness	sadness_202	"Hi Guillaume, I did not have an answer right away, so I sent you question to Leonard Rosenthol."
__label__neutral	neutral_3573	"Here is his response: ""There is no reason to change the version in the header as the version can be anything (ISO 19005-2:2005, 6.1.2)."
__label__neutral	neutral_3574	"As for the OutputIntent, that is not necessary if all colors in the PDF are in a device independent colorspace (ISO 19005-1:2005, 6.2.3.1)."
__label__neutral	neutral_3575	"In this case, they are all in ICCBased Gray."
__label__neutral	neutral_3576	"Leonard"" BR, Bill Fausser"
__label__sadness	sadness_203	"Sorry, should have commented on this much sooner."
__label__neutral	neutral_3577	That seems to work for me - thanks!
__label__neutral	neutral_3578	The preliminary patch is attached.
__label__sadness	sadness_204	It is not yet tested - I ran into strange build problems with APR.
__label__sadness	sadness_205	"Done, sorry for all the mess on a simple patch."
__label__neutral	neutral_3579	"David, I've done a little digging and have a question around: OrderReadHelper.getOrderItemQuantityBd() Firstly going back a while now this log: http://svn.ofbiz.org/viewcvs/trunk/components/order/src/org/ofbiz/order/order/OrderReadHelper.java?rev=4367&r1=4281&r2=4367 shows a change to the strings that seems to make the first if statement redundant?!"
__label__neutral	neutral_3580	I presume either that statement can now be removed or the original intention of the statement needs reimplementing?
__label__sadness	sadness_206	"Secondly reading this code I can see why this bug is happening, after completing stage 2 above when adding the new item the code does ""ordered - cancelled = quantity"" which equates to ""1 - 1 = 0""."
__label__sadness	sadness_207	Keep repeating this and the problem just gets worse.
__label__neutral	neutral_3581	"scheduleAtFixedRate ""Creates and executes a periodic action that becomes enabled first after the given initial delay, and subsequently with the given period; that is executions will commence after initialDelay then initialDelay+period, then initialDelay + 2 * period, and so on."
__label__neutral	neutral_3582	"If any execution of the task encounters an exception, subsequent executions are suppressed..."" so get() shouldn't be causing a cancel, but if an exception is found then we need to re-schedule it manually."
__label__neutral	neutral_3583	(If you cast the Runnable in afterExecute to ScheduledFutureTask you can get access to the scheduling info.)
__label__neutral	neutral_3584	if get is causing the cancel even w/o any exceptions being involved then I guess you'll need to source dive in ScheduledThreadPoolExecutor to see what is going on.
__label__neutral	neutral_3585	Here are two thread dumps: sling6.thread_dump.01.txt was taken about 10 seconds after a shutdown of Sling was attempted.
__label__neutral	neutral_3586	sling6.thread_dump.02.txt was taken a couple minutes later.
__label__neutral	neutral_3587	I include it because quite a few of the threads from the first dump have stopped by this point.
__label__neutral	neutral_3588	"thx todd, missed the ant/ivy stuff, update patch takes care of it (hopefully mavenized gridmix goes in soon and ant/ivy will go away)"
__label__sadness	sadness_208	Please ignore attachment (id=6938).
__label__sadness	sadness_209	It was attached to the wrong bug.
__label__neutral	neutral_3589	According to https://issues.apache.org/jira/browse/INFRA-6336 we can't use git for websites.
__label__neutral	neutral_3590	"Thanks for the reference, I'll look into it."
__label__neutral	neutral_3591	[~egli] - can you reproduce?
__label__neutral	neutral_3592	"If you do, you'd stand a better chance of making a proper fix..."
__label__sadness	sadness_210	"(back from holidays, so a bit delayed, but) I confirm Andrzej's suggestion -- a plain-text only summarized is ideal for clustering for example."
__label__sadness	sadness_211	HTML is quite uncomfortable to work with.
__label__neutral	neutral_3593	I don't have the cycles today.
__label__neutral	neutral_3594	"It would be great, if you could work on it."
__label__neutral	neutral_3595	Thus assigning the issue to you.
__label__neutral	neutral_3596	Thanks.
__label__sadness	sadness_212	"Hi Marco, I changed the name of patch because it was made in Java earliar, sorry for inconvenience."
__label__neutral	neutral_3597	"I have uploaded the modified patch ""PartyCommunication.patch"" and it is ready for testing."
__label__neutral	neutral_3598	"This is the reverse side of ARIES 399, which dealt with a deadlock in ServiceRecipe."
__label__neutral	neutral_3599	"As mentioned there to fix the issues blueprint code that calls out to any kind of client code (reference listeners, service listeners, initialiser methods) should not hold the full BlueprintRepository lock, which allows deadlocks like the two observed."
__label__neutral	neutral_3600	Or at least the locks need to be much more fine-grained than locking the whole container.
__label__neutral	neutral_3601	I hope the first approach as the more general solution will work though :)
__label__neutral	neutral_3602	"Yeah I had a hunch it was a shutdown hook, kicking in at the same time."
__label__neutral	neutral_3603	i modified the test class from HADOOP-6148 (bigger is better) the result is: ||bytes||PureJava MB/sec||Native MB/sec||Random PureJava MB/sec||Native MB/sec|| | 1 |40.525 |12.118 | | 2 |151.706 |23.046 | | 4 |202.082 |46.778 | | 8 |309.846 |88.030 | | 16 |330.308 |152.373 | | 32 |384.488 |247.181 | | 64 |413.354 |350.407 || PureJava |0-64 |260.692 MB/sec|| Native |0-64 |198.142 MB/sec| | 128 |429.670 |450.514 || PureJava |0-128 |323.232 MB/sec|| Native |0-128 |299.766 MB/sec| | 256 |437.959 |521.985 || PureJava |0-256 |376.471 MB/sec|| Native |0-256 |405.063 MB/sec| | 512 |439.036 |564.909 || PureJava |0-512 |410.257 MB/sec|| Native |0-512 |490.422 MB/sec| | 1024 |441.101 |587.137 || PureJava |0-1024 |426.669 MB/sec|| Native |0-1024 |549.357 MB/sec| | 2048 |443.893 |601.072 || PureJava |0-2048 |436.865 MB/sec|| Native |0-2048 |579.190 MB/sec| | 4096 |444.964 |608.434 || PureJava |0-4096 |441.389 MB/sec|| Native |0-4096 |600.953 MB/sec| | 8192 |445.737 |610.422 || PureJava |0-8192 |444.453 MB/sec|| Native |0-8192 |609.527 MB/sec| | 16384 |447.157 |615.396 || PureJava |0-16384 |447.575 MB/sec|| Native |0-16384 |615.407 MB/sec| | 32768 |446.494 |615.482 || PureJava |0-32768 |446.071 MB/sec|| Native |0-32768 |615.393 MB/sec| | 65536 |446.550 |616.318 || PureJava |0-65536 |446.011 MB/sec|| Native |0-65536 |615.462 MB/sec| | 131072 |446.603 |616.220 || PureJava |0-131072 |446.256 MB/sec|| Native |0-131072 |615.432 MB/sec| | 262144 |445.461 |613.127 || PureJava |0-262144 |446.049 MB/sec|| Native |0-262144 |616.090 MB/sec| | 524288 |445.208 |612.968 || PureJava |0-524288 |445.257 MB/sec|| Native |0-524288 |610.429 MB/sec| | 1048576 |438.190 |607.029 || PureJava |0-1048576 |434.039 MB/sec|| Native |0-1048576 |603.446 MB/sec| | 2097152 |428.816 |603.694 || PureJava |0-2097152 |423.804 MB/sec|| Native |0-2097152 |607.624 MB/sec| | 4194304 |421.485 |606.262 || PureJava |0-4194304 |439.061 MB/sec|| Native |0-4194304 |609.371 MB/sec| | 8388608 |424.566 |598.640 || PureJava |0-8388608 |426.544 MB/sec|| Native |0-8388608 |608.484 MB/sec| | 16777216 |433.218 |602.733 || PureJava |0-16777216 |434.810 MB/sec|| Native |0-16777216 |601.179 MB/sec|
__label__neutral	neutral_3604	I fixed the build failures on 4.1 this morning.
__label__neutral	neutral_3605	I'm doing an automated test as well.
__label__neutral	neutral_3606	Will close this ticket if there are no issues.
__label__neutral	neutral_3607	FAILURE: Integrated in Hadoop-Yarn-trunk #344 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/344/]) HDFS-5041.
__label__neutral	neutral_3608	Add the time of last heartbeat to dead server Web UI.
__label__neutral	neutral_3609	The patch should be licensed to ASF for inclusion in ASF works.
__label__sadness	sadness_213	Sorry for the mistake.
__label__sadness	sadness_214	Not sure I want the transient inability to clean up some local log or other trivial task to kill a whole pig job?
__label__sadness	sadness_215	First guess: something's getting confused about reversed-ness.
__label__neutral	neutral_3610	Is that part of the test in question?
__label__neutral	neutral_3611	"lifecycle management up to a separate container Agreed, and my patch also contains a TODO for that."
__label__neutral	neutral_3612	"Similar to all other plugins, the life cycle hook should be pluggable in a sense that you can deploy them e.g."
__label__neutral	neutral_3613	in an OSGi container as a separate bundle.
__label__neutral	neutral_3614	Instead of hardcoding the hooks we could introduce a LifeCycleHookProvider similar to ValidatorProvider we already have.
__label__neutral	neutral_3615	Subject.doAs tricks Good point.
__label__neutral	neutral_3616	"Though, we have to review that usage in general."
__label__neutral	neutral_3617	I'll try the approach you suggested.
__label__neutral	neutral_3618	api_key and secret_key are not required.
__label__neutral	neutral_3619	data sync is external to cloudstack
__label__neutral	neutral_3620	Thank you Ole!
__label__neutral	neutral_3621	Committed v2 patch to trunk with revision 508383.
__label__neutral	neutral_3622	Committed to HDFS-3042 branch.
__label__neutral	neutral_3623	"Thanks for the reviews, Bikas and Aaron."
__label__neutral	neutral_3624	"I said above that the earlier patches were lost, but nope, there they are."
__label__sadness	sadness_216	"Sorry, I took Martin's comment to mean the patch was committed and issue closed, which certainly discarded all the patches the first time around."
__label__neutral	neutral_3625	"Anyway, the ""-2"" patches include all the changes in the first patch files."
__label__neutral	neutral_3626	What platform?
__label__neutral	neutral_3627	Have you tried the standard maven untangling tricks like deleting ~/.m2?
__label__neutral	neutral_3628	We need to make this configurable before we can apply this patch to the trunk (unless i have misunderstood the effect).
__label__neutral	neutral_3629	The demo looks like it will be very useful.
__label__neutral	neutral_3630	Thanks Cyriaque.
__label__neutral	neutral_3631	Form#maxSize is ignored now too.
__label__sadness	sadness_217	I don't know what just happened.
__label__sadness	sadness_218	The patch went to the wrong bug.
__label__sadness	sadness_219	Sorry again!
__label__neutral	neutral_3632	> Another thing: is the try ... catch good or bad?
__label__sadness	sadness_220	Our caller may not notice what happend right now.
__label__neutral	neutral_3633	I guess will be better not catch since until now was not being catched and will be good to propagate upwards.
__label__sadness	sadness_221	"Sorry for my poor review, didn't notice try/catch :("
__label__neutral	neutral_3634	v2 removes some dross included by misstack.
__label__neutral	neutral_3635	"You could easily test if it is due to felix by switching to equinox, if the effects are still there blame it on pax web or dosgi."
__label__neutral	neutral_3636	This jira is unassigned but contains a patch that needs to be reviewed for inclusion in 1.1.1.
__label__neutral	neutral_3637	Would a new configuration boolean 'fs.manual.shutdown' be adequate for your needs?
__label__neutral	neutral_3638	"You could programatically set this before getting your filesystems, and when set true, the shutdown hook would not be added."
__label__neutral	neutral_3639	"Vinay, thanks for working on this."
__label__neutral	neutral_3640	"Some comments: The new method added to Namesystem is better to # pass BlockInfoUnderConstruction, # call it as isInSnapshot, and # do not throw IOException."
__label__neutral	neutral_3641	"{code} //Namesystem.java public boolean isInSnapshot(BlockInfoUnderConstruction block); {code} In the implementation in FSNamesystem, it should try-catch the UnresolvedLinkException and log it as an error since the full path obtained from a file should not have unresolved link."
__label__neutral	neutral_3642	Second question: Why adding DFSTestUtil.abortStream(..)?
__label__sadness	sadness_222	It does not look very useful.
__label__neutral	neutral_3643	I appended the information to the end of the file.
__label__sadness	sadness_223	"Oh, I'm sorry, I was unclear."
__label__neutral	neutral_3644	"You have the ability to add users to the mina group in svn, not to the group on people.a.o."
__label__neutral	neutral_3645	"To grant new users commit access, check out https://svn.apache.org/repos/asf/infrastructure/trunk/subversion/authorization and add the appropriate usernames to the mina= line in the [groups] section of the asf-authorization file."
__label__sadness	sadness_224	"Sorry Jacques, I'll upload another file."
__label__sadness	sadness_225	I did it wrong this time.
__label__fear	fear_10	"No idea about the issue resolution/if it's still active, but I'm afraid that by no stretch of the imagination can it be termed a ""Critical"" issue."
__label__neutral	neutral_3646	shifted as agreed during the IRC release preparation meeting
__label__neutral	neutral_3647	thx to Cristi Toth for his patch
__label__neutral	neutral_3648	"Pull out the RopeTransport stuff, fix the bug, and add in the graceful degradation and I'm happy to see it pushed :)"
__label__sadness	sadness_226	"Sorry, I had attached an older version... let's try this one."
__label__neutral	neutral_3649	I guess it's OK to put it in trunk.
__label__neutral	neutral_3650	I did not write it in a way that fits in with the rest of the implementations though.
__label__neutral	neutral_3651	No unit tests either yet.
__label__sadness	sadness_227	"However, I figured it was better to get it in the public domain sooner and let the iterative process do it's work."
__label__sadness	sadness_228	This is only a problem with exceptions from java.
__label__neutral	neutral_3652	"*, regular business exceptions work."
__label__neutral	neutral_3653	1
__label__sadness	sadness_229	Incidentally if we all nag Joe Walnes enough we might be able to persuade him to release a new qdox which can ignore annotations etc (though it will still struggle with generics I think)
__label__neutral	neutral_3654	Everything timed out.
__label__neutral	neutral_3655	Resubmitting and making it a blocker for 0.22
__label__sadness	sadness_230	"Sorry, I kind of forget about this one."
__label__neutral	neutral_3656	I'm good with the last version of the patch of just adding a dclocal read repair chance.
__label__neutral	neutral_3657	Do you mind rebasing Vijay?
__label__sadness	sadness_231	I don't have strong opinions about it either way.
__label__neutral	neutral_3658	So I went ahead and made the change.
__label__neutral	neutral_3659	It's uploaded here and on review board.
__label__neutral	neutral_3660	Removed version-infomation znode.
__label__neutral	neutral_3661	More like can't fix.
__label__sadness	sadness_232	Bugs like this make me sad.
__label__neutral	neutral_3662	Integrated in Hadoop-Mapreduce-0.23-Build #9 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Build/9/]) HADOOP-7608.
__label__sadness	sadness_233	SnappyCodec check for Hadoop native lib is wrong.
__label__neutral	neutral_3663	Contributed by Alejandro Abdelnur.
__label__neutral	neutral_3664	"@Matthew If you can contribute a section on SPNEGO authentication to the HttpClient tutorial, I'll commit your code to the official 4.1 branch of HttpClient http://wiki.apache.org/HttpComponents/HttpClientTutorial Oleg"
__label__sadness	sadness_234	"Sorry for the delay, I'm recreating the mirror now."
__label__neutral	neutral_3665	"Note that I was seeing the dreaded ""Delta source ended unexpectedly"" error at around revision 733924 [1], so I had to set the mirror to start the mirrored version history from after that."
__label__neutral	neutral_3666	[1] https://svn.apache.org/viewvc?view=revision&revision=733924
__label__neutral	neutral_3667	"Wouldn't it make sense if getFile() always checked whether the passed in fileName is an absolute file, no matter of the protocol?"
__label__neutral	neutral_3668	"If this is the case, this file must be returned."
__label__neutral	neutral_3669	"Tom, no problem, please see WHIRR-634 and WHIRR-635."
__label__neutral	neutral_3670	"Thanks, Graham"
__label__neutral	neutral_3671	"populated, see r2083"
__label__neutral	neutral_3672	Here is the Review Board for local.py.
__label__neutral	neutral_3673	trivial change to make the minSize be 1 byte.
__label__neutral	neutral_3674	I think this should be fine for all of the cases I could find where we use this function.
__label__neutral	neutral_3675	"If we need to specify a different minSize later, we can add a {{setMinSize}} function."
__label__neutral	neutral_3676	The precommit failures are unrelated to the issue at hand.
__label__neutral	neutral_3677	"[~thejas], could you please have a look at this patch?"
__label__neutral	neutral_3678	Commit 7a977b5eaffb411cb3f1409336cdf42f6b46b18c in branch refs/heads/1.6.x from [~zack-s] [ https://git-wip-us.apache.org/repos/asf?p=incubator-jclouds.git;h=7a977b5 ] Reauthenticate on Keystone HTTP 401 (JCLOUDS-178) The number of retries here is not the same as for 500 errors; expected behavior is a quick fail while retaining some robustness.
__label__neutral	neutral_3679	commons.net 3.0.1 Thsi application is too big RMI is in Jconsole.I myself dont use.I just use ftp.listfiles.
__label__neutral	neutral_3680	here i have read that it is because of active passive mode.i will try maybe it can solve my problem but i afraid that it will produce problem with multithread application
__label__neutral	neutral_3681	Test case and fix.
__label__neutral	neutral_3682	Also adding some extra tests for newline splitting - currently this coverage is lacking.
__label__sadness	sadness_235	"Brandon, sorry."
__label__sadness	sadness_236	I misread.
__label__sadness	sadness_237	Ignore comment.
__label__neutral	neutral_3683	Nothing out of the ordinary here: % host -t mx laguna-industries.com laguna-industries.com mail is handled by 20 mail.phnx.uswest.net.
__label__neutral	neutral_3684	laguna-industries.com mail is handled by 10 mail.laguna-industries.com.
__label__neutral	neutral_3685	% host mail.phnx.uswest.net.
__label__neutral	neutral_3686	mail.phnx.uswest.net has address 63.231.195.31 host -t ptr 31.195.231.63.in-addr.arpa.
__label__neutral	neutral_3687	31.195.231.63.in-addr.arpa domain name pointer mpls-pop.inet.qwest.net.
__label__neutral	neutral_3688	"qmail chose the secondary MX (which is the mpls-pop.inet.qwest.net), probably because it could not reach the primary MX."
__label__joy	joy_270	"Nothing wrong, everything is cool."
__label__sadness	sadness_238	Seems to be a faulty mailserver setup at laguna-industries.com.
__label__sadness	sadness_239	"Unfortunately, in these days where everyone that can put a CD the right way up in a drive is a Linux/Unix/Windows/Internet Expert, this has become pretty common."
__label__sadness	sadness_240	"And with a network that tolerates almost everything to get a mail somehow in the right place, it is only seldom noticed (or when it is, it is blamed on Microsoft."
__label__joy	joy_271	+1 great job pat.
__label__joy	joy_272	+1 on intent from looking at what the patch fixes.
__label__neutral	neutral_3689	Haven't explicitly tested it myself.
__label__neutral	neutral_3690	"getUserInSystemGraph usisng a priviledged block to access the system graph, I don't think this should be done here as the result is no of you if the caller has no access to the system graph."
__label__neutral	neutral_3691	On 2008-03-06 08:00:48.178 bendalton commented: FLV video of the bug in question with Snitter On 2008-03-06 08:01:57.860 bendalton commented: This bug was first discovered in an application I'm working on.
__label__neutral	neutral_3692	I reproduced the bug using Snitter.
__label__neutral	neutral_3693	"(ie, this is an AIR bug, not a Snitter bug)"
__label__neutral	neutral_3694	"yes, they should all be using RWLock, absolutely."
__label__neutral	neutral_3695	Where is the 'Grant license to ASF for inclusion in ASF works' for the patch
__label__neutral	neutral_3696	Thanks Willem.
__label__neutral	neutral_3697	I will update the docs (probably this weekend when I find some time)
__label__neutral	neutral_3698	Updated patch with new file.
__label__neutral	neutral_3699	"Forget git add, get sad..."
__label__sadness	sadness_241	"Mac, looks like the tests are failing (especially TestHarFileSystem)."
__label__neutral	neutral_3700	The patch looks good to me.
__label__neutral	neutral_3701	Is there any particular reason on using an _ in front of the following variables?
__label__neutral	neutral_3702	"{noformat} _harMetaCache {noformat} Also, this is meant for trunk only?"
__label__neutral	neutral_3703	"@Roger: huh, this is bad, as a partial integration will seg fault, see BoostMonitor.cpp which does a cast of a boost::mutex."
__label__neutral	neutral_3704	"It would be *highly* preferable instead to *not* include the BoostMonitor.cpp change, as both are inter-dependent."
__label__neutral	neutral_3705	"Alternatively, I don't know what is the compiler error on Debian, but it may very well be missing the include inside BoostMutex.cpp: {code} #include <boost/thread/mutex.hpp> {code} Thanks!"
__label__joy	joy_273	That's a very promising idea !
__label__neutral	neutral_3706	Will take a closer look.
__label__joy	joy_274	Nice work [~stepinto] !
__label__neutral	neutral_3707	Can this ticket me marked as resolved as implementation done for portabl IP
__label__sadness	sadness_242	"@Luke, Sorry for the late, attaching latest version patch"
__label__neutral	neutral_3708	Is the null check necessary?
__label__neutral	neutral_3709	the underlying protobuf handles the null properly.
__label__neutral	neutral_3710	{code} ByteBuffer appAttemptTokens = attemptState.getAppAttemptTokens(); if(appAttemptTokens != null){ attemptStateData.setAppAttemptTokens(appAttemptTokens); } {code} New public method necessary?
__label__sadness	sadness_243	RMAppAttemptImpl.recoverAppAttemptTokens() Looks like all changes in RMAppImpl are unnecessary.
__label__sadness	sadness_244	Bug in existing testDelegationTokenRestoredOnRMrestart().
__label__neutral	neutral_3711	The assert check should be made for rm1 and also for rm2.
__label__neutral	neutral_3712	"{code} // start new RM MockRM rm2 = new TestSecurityMockRM(conf, memStore); rm2.start(); // verify tokens are properly populated back to DelegationTokenRenewer Assert.assertEquals(tokenSet, rm1.getRMContext() .getDelegationTokenRenewer().getDelegationTokens()); {code}"
__label__neutral	neutral_3713	try the commands {code} git checkout cassandra-1.2 patch -p1 < 5234-3-1.2branch.txt {code}
__label__neutral	neutral_3714	Fixed by making the url absolute before passing it to the web container.
__label__neutral	neutral_3715	Looks great Todd.
__label__neutral	neutral_3716	Could we keep this DataOutputBuffer for reuse?
__label__neutral	neutral_3717	{code} + DataOutputBuffer buf = new DataOutputBuffer(size); {code}
__label__sadness	sadness_245	"Sorry, we are no longer using Xerces."
__label__neutral	neutral_3718	"If I'll come across Xerces again, I'll try it."
__label__neutral	neutral_3719	"Thanks, Vijay."
__label__neutral	neutral_3720	"I can see why, the test case just checks that the error string includes the exception text ""foo""."
__label__sadness	sadness_246	That is a bit too lax I think.
__label__neutral	neutral_3721	"The problem is not that the exception text is lost completely, it does come through, just that it is wrapped in an AvroRuntimeException(""Unknown datum type: ""+datum) error."
__label__neutral	neutral_3722	"So instead of the expected ""java.lang.RuntimeException: foo"" text being sent you get ""org.apache.avro.AvroRuntimeException: Unknown datum type: java.lang.RuntimeException: foo""."
__label__sadness	sadness_247	The cause is that the call to SpecificResponder.writeError in Responder.respond ultimately calls GenericData.resolveUnion which in turn calls GenericData.getSchemaName before the line where the UnresolvedUnionException gets thrown.
__label__neutral	neutral_3723	GenericData.getSchemaName instead throws an AvroRuntimeException so the special handling of UnresolvedUnionException in Responder.respond is skipped and the nested exception text is the result.
__label__neutral	neutral_3724	Another option is to create a new type for HdfsLocatedFileStatus as {code} HdfsLocatedFileStatusProto { HdfsFileStatusProto fs = 1; LocatedBlocksProto locations = 2; } {code}
__label__sadness	sadness_248	I am new to Mina and the whole environment.
__label__neutral	neutral_3725	"Anyway, I am creating a project that began with 2.0.0-M3 and is now using 2.0.0-M4."
__label__sadness	sadness_249	"I have this issue, where my server and client is creating a lot of loopback threads, that I believe must be related to this issue."
__label__sadness	sadness_250	Any word on whether it will be fixed?
__label__neutral	neutral_3726	"that it's a huge patch is exactly why I don't want to take a ""let's just commit it and clean it up later"" approach."
__label__joy	joy_275	Good idea especially if you have a use case for that.
__label__neutral	neutral_3727	"You might also want to consider the induced latency though, depending on the checkpoint size and frequency."
__label__neutral	neutral_3728	Make sure to use the hsync api for persistency guarantees.
__label__neutral	neutral_3729	Do you mean you checked your proposition or mine?
__label__neutral	neutral_3730	"Mine is not thourougly thought, it's just a suspenders AND belt solution."
__label__neutral	neutral_3731	"Also by ""working"" do you mean that you checked also for (undesired) side effects?"
__label__neutral	neutral_3732	> I don't see where this is limited to user-facing pages.
__label__neutral	neutral_3733	I need to list out all the jsp/servlet paths and check whether they are user facing or not.
__label__sadness	sadness_251	I did not have time to do it yesterday.
__label__neutral	neutral_3734	I would like to show new API design first.
__label__neutral	neutral_3735	That's why I have posted my last patch.
__label__sadness	sadness_252	Sorry for being confusing.
__label__neutral	neutral_3736	Attaching patch file AVRO-957.patch: We (Hitwise Pty Ltd) hereby assign all rights to the code contained within this patch over to the Apache Software Foundation (ASF) under the Apache Licence.
__label__neutral	neutral_3737	"I worked with this on Danushka, and the following fix worked for us."
__label__neutral	neutral_3738	We have done pretty intensive testing and believe this fixes the problem.
__label__neutral	neutral_3739	Here I am removing the subscription list impl and implementing it using ConcurrentLinkedQueue while keeping the interface intact as much as possible.
__label__neutral	neutral_3740	the java concurrent implementation of the queue.
__label__neutral	neutral_3741	QPID-3319.patch has the fix and QPID-3319.patch.2 and QPID-3319.patch.3 fix two other classes that cause a compilation error when the QPID-3319.path is applied.
__label__neutral	neutral_3742	"Hi Carl, I've made the changes JAVA_HOME and README.txt suggested by you."
__label__neutral	neutral_3743	I tested the JAVA_HOME change in Linux and it doesn't seem to work (unset JAVA_HOME and launch Eclipse for debugging).
__label__neutral	neutral_3744	Can you try it on Mac and see if it works?
__label__neutral	neutral_3745	"Thanks Thomas, committed to 3.4.0."
__label__neutral	neutral_3746	Another interesting message from the log 258766 (http-0.0.0.0-8443-Processor2) [ Log.java:103:WARN ] Create Payment Application: Amount to apply [36.76] is greater than the outstanding amount [0.0] of the invoice [10030].
__label__neutral	neutral_3747	Creating Payment Application for outstanding amount [0.0] instead.
__label__sadness	sadness_253	"I am not really sure what does the receive payment do before the shipment, it doesn't sound as if it is doing what we expect it to do."
__label__neutral	neutral_3748	There are a few considerations to be careful about: 1) The hostname in service could be a vip name.
__label__neutral	neutral_3749	"The token selector is used in ipc.Client, which has InetSocketAddress of the remote server."
__label__neutral	neutral_3750	How do we make sure we are matching the right hostnames?
__label__neutral	neutral_3751	"One way to address it is to get the ip address from the hostname service and use that for matching, but that needs a dns lookup."
__label__neutral	neutral_3752	2) Dns lookup in token selector would be invoked for every connection using token authentication.
__label__anger	anger_339	Incomplete example.
__label__sadness	sadness_254	Unable to reproduce issue.
__label__joy	joy_276	Sounds good Claudio.
__label__neutral	neutral_3753	I used to have the subset of in-memory partitions maintained as a sliding window (i.e.
__label__neutral	neutral_3754	"most recently computed K partitions), but I switched to the model with K-1 partitions always in memory and 1 slot for loading out-of-core partitions, because it made the logic slightly simpler."
__label__neutral	neutral_3755	We can go back to something like that if we want to manage that subset more intelligently (2).
__label__neutral	neutral_3756	I would keep the hasActive field in memory (in the PartitionStore).
__label__neutral	neutral_3757	"We start with any K in-memory partitions, skip on-disk partitions that have no active vertices or incoming messages, and prioritize spilling partitions that have no active vertices."
__label__neutral	neutral_3758	"As I explained the XSL files have nothing to do with FOP, so its impossible for FOP to tell you which file/line number in XSL stylesheet(s) the problem lies at."
__label__neutral	neutral_3759	FOP can only tell you which line in the single FO file the error occurred at.
__label__sadness	sadness_255	"Oh, ok."
__label__neutral	neutral_3760	I'll focus my efforts on the compile targets then.
__label__neutral	neutral_3761	We'll have plenty of time to go through the bundles later.
__label__neutral	neutral_3762	gora-cassandra is patched to work with this prove of concept (It's just a one-liner in CassandraStore).
__label__neutral	neutral_3763	"I meant if someone eventually uses CassandraClient directly, this will break."
__label__fear	fear_11	"And it will break ugly, everything seems to work, but data is never streamed to cassandra."
__label__neutral	neutral_3764	"Yes, I will open a new jira for this sometimes :)"
__label__neutral	neutral_3765	#NAME?
__label__neutral	neutral_3766	(HDFS-2468) - throw IllegalArgumentException if setOwner with both owner and group empty.
__label__neutral	neutral_3767	(HDFS-2438) - throw FileNotFoundException if getFileStatus on non-existing file.
__label__neutral	neutral_3768	(HDFS-2426) - fixed bugs in getBlockLocations.
__label__neutral	neutral_3769	"(HDFS-2508) - changed file checksum json response root from ""MD5MD5CRC32FileChecksum"" to ""FileChecksum""."
__label__neutral	neutral_3770	(Thanks Arpit for the suggestion.)
__label__joy	joy_277	Seems to work reliably now.
__label__neutral	neutral_3771	I would prefer to get rid of the sleep again though.
__label__neutral	neutral_3772	Is it possible to signal from the ServiceTracker to the test that the servlet is installed?
__label__neutral	neutral_3773	I believe [~bikassaha] meant to resolve YARN-1068 and not this JIRA.
__label__sadness	sadness_256	"Sorry, this affects 0.9.3 version too."
__label__sadness	sadness_257	Phabricator is being a little buggy.
__label__neutral	neutral_3774	Working with Marek to diagnose the problem.
__label__sadness	sadness_258	Tests no longer sleep
__label__neutral	neutral_3775	"v5 uses a small batch size and eagerly sends out ""incomplete"" batches if the reducer falls behind"
__label__neutral	neutral_3776	"yep, +1 to close."
__label__neutral	neutral_3777	I took care of this already.
__label__neutral	neutral_3778	"Santiago and I have removed the readExternal(), writeExternal() methods (from interface Externizable) and instead rely on readObject(), writeObject()."
__label__neutral	neutral_3779	We still implement the Serializable interface.
__label__neutral	neutral_3780	"We marked the TransformerFactoryImpl field in the TemplatesImpl class as transient, to make sure it does not get serialized."
__label__neutral	neutral_3781	We overrode readObject(ObjectInputStream) so that we could create a new TransformerFactory in the case of reading in a serialized translet.
__label__neutral	neutral_3782	"Here is a JAXP program that I wrote that shows how this fix was tested: import javax.xml.transform.stream.StreamSource; import javax.xml.transform.stream.StreamResult; import javax.xml.transform.Transformer; import javax.xml.transform.Templates; import javax.xml.transform.TransformerFactory; import java.io.FileOutputStream; import java.io.ObjectOutput; import java.io.ObjectOutputStream; import java.io.FileInputStream; import java.io.ObjectInput; import java.io.ObjectInputStream; import org.apache.xalan.xsltc.trax.TemplatesImpl; public class ProtoTemplates { public static void main(String[] args){ ProtoTemplates app = new ProtoTemplates(); app.run(args); } public void run(String[] args){ if (args.length != 2) { usage(); } String inputFilename = args[0]; String stylesheet = args[1]; Transformer transformer; TransformerFactory factory = TransformerFactory.newInstance(); try { FileOutputStream fout = new FileOutputStream(""MyTemplates.ser""); ObjectOutput out = new ObjectOutputStream(fout); Templates templates = factory.newTemplates( new StreamSource(stylesheet)); out.writeObject(templates); out.flush(); out.close(); // try to use the serialized templates object, this will // create a new Transformer Factory, see TemplatesImpl.java, // readObject(...) method."
__label__neutral	neutral_3783	"FileInputStream fin = new FileInputStream(""MyTemplates.ser""); ObjectInput in = new ObjectInputStream(fin); Templates templates2 = (Templates)in.readObject(); in.close(); transformer = templates2.newTransformer(); transformer.transform(new StreamSource(inputFilename), new StreamResult(System.out)); } catch (ClassCastException e) { System.err.println(""CAST EXC: "" + e); e.printStackTrace(); } catch (Exception e) { System.err.println(""ERROR: "" + e); e.printStackTrace(); } System.exit(0); } public void usage() { System.err.println( ""Usage: run <xml_file> <xsl_file>""); System.exit(1); } }"
__label__neutral	neutral_3784	This problen is there in the tests below as well IHeaderBlockTest1 IHeaderBlockTest2 IHeaderBlockTest3 IHeaderBlockTest4 IHeaderBlockTest5 IHeaderBlockTest6 IHeaderBlockTest7 IHeaderBlockTest8 INamespaceTest1
__label__neutral	neutral_3785	"Robin is fixing some other things w/ NB, so he's going to take this."
__label__sadness	sadness_259	"Sorry, this should be YARN JIRA - filed YARN-350 instead"
__label__neutral	neutral_3786	ant tests passed on my box.
__label__neutral	neutral_3787	Integrated in Cassandra #446 (See [http://hudson.zones.apache.org/hudson/job/Cassandra/446/]) use cfid instead of name in CBL.
__label__neutral	neutral_3788	"patch by gdusbabek, reviewed by jbellis."
__label__neutral	neutral_3789	Could we remove the setProperty() implementation in HierarchicalConfiguration and use the default implementation in AbstractConfiguration ?
__label__neutral	neutral_3790	Thus fetchInsertIterator could be made private.
__label__neutral	neutral_3791	"This will always work, irrespectively of the combination of various underlying technologies and it will be a thread-safe solution : public class GroupsResource { private UriInfo uriInfo; private GroupResource gr1 = new GroupResource(); @Context public void setUriInfo(UriInfo ui) { uriInfo = ui; gr1.setUriInfo(uriInfo); } @Path(""group1"") public GroupResource group1() { return gr1; } @Path(""group2"") public GroupResource group2() { GroupResource gr2 = new GroupResource(); gr2.setUriInfo(uriInfo); return gr2; } } It will also work well in cases when users try to do proxy-based client invocations, as client proxies do not support @Context parameters on resource methods."
__label__neutral	neutral_3792	In meantime I will see what I can do with respect to the context injection into subresources... Perhaps in some cases modifying the subresource classes with extra methods might not be an option.
__label__neutral	neutral_3793	that we have an overridable method is not by accident We want that so that we dont keep the state in the component.
__label__neutral	neutral_3794	But that state is only in the class not in the object
__label__sadness	sadness_260	"Sorry if this spam's things, however it's unlikely that I'll work on these."
__label__sadness	sadness_261	"Forgot about these, sorry."
__label__sadness	sadness_262	Maurice I don't have such option or maybe I don't know where it is.
__label__sadness	sadness_263	:) Sorry about that.
__label__neutral	neutral_3795	I'll upload example once again in 2 hours.
__label__sadness	sadness_264	"Sorry about the noise, was trying out the precommit job."
__label__neutral	neutral_3796	I've just seen that you attached a patch to this issue.
__label__sadness	sadness_265	Sorry about that...
__label__sadness	sadness_266	"Grumble, grumble..."
__label__sadness	sadness_267	"I was in too much of a hurry, sorry hold on a sec."
__label__neutral	neutral_3797	I'll get it right this time :)
__label__sadness	sadness_268	"Sorry, I see that you say the same, Mike :)"
__label__sadness	sadness_269	Sorry for the huge delay Fabio.
__label__neutral	neutral_3798	"I think it's a borderline class - architectually good for Lang, but the Math guys are going to have a better idea about the complexities to be found."
__label__neutral	neutral_3799	Will nudge to see what people think.
__label__sadness	sadness_270	yup sorry just fixed.
__label__sadness	sadness_271	I screwed up the encoding of the stopwords file (sorry).
__label__sadness	sadness_272	So I also changed a test to test a non-ascii stopword :)
__label__neutral	neutral_3800	> now this is really kewl ;) Very 'kewl'.
__label__neutral	neutral_3801	I was somehow under the impression you were writing an Eclipse plugin.
__label__sadness	sadness_273	Sorry about the confusion before
__label__sadness	sadness_274	Sorry.
__label__sadness	sadness_275	"Sorry folks, the full fix was committed in rather a messy manner due to some platform specific issues."
__label__neutral	neutral_3802	The full list of commits is: http://svn.apache.org/r1477236 http://svn.apache.org/r1477366 http://svn.apache.org/r1477698 http://svn.apache.org/r1477771 http://svn.apache.org/r1477784
__label__sadness	sadness_276	"Sorry, didn't look at the code until commit... Can you test making it hash to a Long or a 8-byte ByteBuffer?"
__label__neutral	neutral_3803	"16-byte BigInteger is overkill, all we need is a reasonable distribution (now that Tokens don't need to be unique) and 64 or even 32 bits is plenty for that."
__label__sadness	sadness_277	Sorry - the above comes across as terse.
__label__sadness	sadness_278	I really don't know how to solve this problem.
__label__sadness	sadness_279	"If you know of a way, please describe it."
__label__neutral	neutral_3804	just uploaded.
__label__sadness	sadness_280	Sorry.
__label__sadness	sadness_281	"Ha sorry Varun, thanks for the reminder, I will have a look at it soon..."
__label__sadness	sadness_282	Sorry.
__label__neutral	neutral_3805	MAPREDUCE-1813 has fixed the NPE problem.
__label__neutral	neutral_3806	They met the same bug with us.
__label__neutral	neutral_3807	"You're right, looks like this is already the desired behavior."
__label__sadness	sadness_283	Sorry for the wild goose chase!
__label__sadness	sadness_284	"Sorry, db name is TPCDB, user name TPC, pwd whatever..."
__label__sadness	sadness_285	"Sorry, my code base is a little old, looks like HADOOP-9147 add some new test in TestFileStatus."
__label__sadness	sadness_286	I'm sorry.
__label__neutral	neutral_3808	Did you forget to commit {{InvertibleRealLinearOperator}} ?
__label__sadness	sadness_287	Sorry; I hit close by accident.
__label__sadness	sadness_288	Sorry I've been MIA on this issue.
__label__sadness	sadness_289	"I haven't had any time to try re-upgrading after having to back out 2.0.8, but I will be sure to let you know how it works out as soon as I get the opportunity."
__label__sadness	sadness_290	Sorry for that.
__label__neutral	neutral_3809	Here is the new file.
__label__sadness	sadness_291	"Sorry, missed that select-box."
__label__neutral	neutral_3810	1
__label__sadness	sadness_292	Sorry for letting you guys wait.
__label__sadness	sadness_293	"[~shazron]Sorry, that was weird."
__label__sadness	sadness_294	Missed 2 new files - sorry !
__label__sadness	sadness_295	"Sorry, no longer working on this"
__label__sadness	sadness_296	"Sorry, patch is attached"
__label__sadness	sadness_297	"On 2008-10-20 11:43:52.354 woflexair commented: Joan, sorry for the noise in the bugbase but it's not a bug."
__label__neutral	neutral_3811	"The background image is a 2000x2000 gif image with transparency, and then the bitmap is very big."
__label__neutral	neutral_3812	2000*2000*4 = 16 Megas.
__label__neutral	neutral_3813	"I change the way to draw the bacground with code like this one : ui = new UIComponent(); bmpBackgroundClass = new backgroundClass().bitmapData; bmpd = new BitmapData(bmpBackgroundClass.width, bmpBackgroundClass.height,true,null); bmpd.draw(bmpBackgroundClass); ui.graphics.beginBitmapFill(bmpd); ui.graphics.drawRect(0,0, this.width, this.height); ui.graphics.endFill(); addChildAt(ui, 0 ); wtih a gif image of 4x4 pixels i'm able to achieve the same goal, without eating 16Mg in memory."
__label__sadness	sadness_298	"Sorry once again for the wrong report, Stephane"
__label__sadness	sadness_299	"Sorry, I forgot to change the priority of this one."
__label__neutral	neutral_3814	"It's not a major one, but it would be a ""nice to have"" especially with the popularity of web services growing like it is."
__label__sadness	sadness_300	sorry.
__label__sadness	sadness_301	"Sorry, that should have said fixed via HADOOP-4980, not 6980."
__label__sadness	sadness_302	Sorry about the report.
__label__neutral	neutral_3815	Turns out that upgrading git (from 1.6.4 to 1.8.1) fixed this.
__label__neutral	neutral_3816	In the 1410e patch here are test cases that have not made into the bulkpostings branch.
__label__neutral	neutral_3817	I'll try and revive these first.
__label__sadness	sadness_303	"Ugh, sorry :( Thanks!"
__label__sadness	sadness_304	Sorry about that.
__label__neutral	neutral_3818	Uploaded new patch with no compilation errors.
__label__sadness	sadness_305	"Sorry I didn't use your patch, but I think you'll like the end result."
__label__sadness	sadness_306	"Some file were missing in the last patch, sorry."
__label__neutral	neutral_3819	Trove's licensing won't be changing.
__label__sadness	sadness_307	The biggest problem is that we've had too many committers over the years and we'd have to get all of their permission to change it.
__label__sadness	sadness_308	"So, sorry I can't be more obliging."
__label__sadness	sadness_309	Last try.
__label__sadness	sadness_310	Sorry.
__label__sadness	sadness_311	sorry.. redeploy patch
__label__neutral	neutral_3820	Since the change is already included in HIVE-5741 I will mark this one resolved.
__label__sadness	sadness_312	Sorry for the trouble Vikram!
__label__sadness	sadness_313	Sorry for the misspelling ;)
__label__sadness	sadness_314	(sorry if that was confusing)
__label__sadness	sadness_315	sorry for your time.
__label__sadness	sadness_316	I must have looked at this before my morning coffee..
__label__sadness	sadness_317	Sorry ;-) +1
__label__sadness	sadness_318	"Wow, that was some bad copy/paste work."
__label__sadness	sadness_319	sorry.
__label__neutral	neutral_3821	Redoing the before/after code below: Before: if (!msg.isPersistent() || connection.isUseAsyncSend() || txid!=null)) { this.connection.asyncSendPacket(msg); } else { this.connection.syncSendPacket(msg); } After: if(!msg.isResponseRequired() && (!msg.isPersistent() || connection.isUseAsyncSend() || txid!=null)) { this.connection.asyncSendPacket(msg); } else { this.connection.syncSendPacket(msg); }
__label__sadness	sadness_320	sorry....
__label__neutral	neutral_3822	Here is a url with a frame.
__label__sadness	sadness_321	Sorry about that... http://bit.ly/12UiaS
__label__sadness	sadness_322	"Sorry, Thiru, I hope you haven't already started working on this!"
__label__sadness	sadness_323	huh ... i thought i did resolve this.
__label__sadness	sadness_324	sorry.
__label__sadness	sadness_325	"Sorry, misunderstood the issue!"
__label__sadness	sadness_326	Sorry for the delay.
__label__sadness	sadness_327	sorry for delay
__label__neutral	neutral_3823	[~lhofhansl] Yea....
__label__sadness	sadness_328	"Sorry for the delay, was away."
__label__sadness	sadness_329	Sorry.
__label__sadness	sadness_330	This was my bad.
__label__sadness	sadness_331	"Sorry, it seems I forgot a few references to 2.0.2 in ./deps/cxf-all I'm attaching a new patch to fix these references."
__label__sadness	sadness_332	Thanks Jukka for fixing this :) (sorry)
__label__fear	fear_12	"Stroooong ++++++1 I wanted to do that long time, but some tests were made me afraid."
__label__sadness	sadness_333	"Sorry, that should be FileChannel inputChannel = input.getChannel(); FileChannel outputChannel = output.getChannel(); in the try block."
__label__sadness	sadness_334	"Sorry [~svenkat], I just committed this."
__label__neutral	neutral_3824	"[~shwethags], Can you please fix this right away ?"
__label__sadness	sadness_335	No sorry.
__label__sadness	sadness_336	Didn't got the time to try it yet.
__label__neutral	neutral_3825	"Thanks Rashko, I have committed your patch in trunk revision 664697."
__label__sadness	sadness_337	"Sorry to have not spotted this one, and thanks for your care."
__label__sadness	sadness_338	"Sorry I missed the ""overwrite"" keyword."
__label__sadness	sadness_339	This might be a bug indeed.
__label__neutral	neutral_3826	I'll take a closer look.
__label__neutral	neutral_3827	Killed it with fire.
__label__sadness	sadness_340	Sorry everyone.
__label__sadness	sadness_341	"sorry, last patch was missing new files"
__label__sadness	sadness_342	sorry for misleading attachment name.
__label__sadness	sadness_343	"Sorry Avdhesh, I forgot to add these two files to the patch, here is the new patch containing the missing files"
__label__sadness	sadness_344	"Hey Vikram-- sorry about that, I haven't paid much attention to this issue."
__label__sadness	sadness_345	"Sorry, should ask first."
__label__neutral	neutral_3828	"Mike, I can take this one if you want..."
__label__sadness	sadness_346	Thanks to Mathias Werlitz - sorry for the delay.
__label__sadness	sadness_347	Sorry.
__label__sadness	sadness_348	The problems I was talking about are mostly fixed by [HADOOP-3575] and [HADOOP-3480].
__label__sadness	sadness_349	"I opened [HADOOP-3607] to fix a wrong URL, but appart from that I don't there's still references to the old structure."
__label__sadness	sadness_350	"no, sorry - priorities have been shifted around..."
__label__sadness	sadness_351	"Um sorry, i thought this ticket was about something else - patch attached, David would you give a try?"
__label__sadness	sadness_352	Sorry for the noise.
__label__neutral	neutral_3829	Thanks!
__label__sadness	sadness_353	Sorry about that.
__label__neutral	neutral_3830	"As expected, thanks."
__label__sadness	sadness_354	Sorry I missed some of this the first time.
__label__sadness	sadness_355	"Sorry , fixed."
__label__sadness	sadness_356	Sorry Gav DONE Committed @revision 2487.
__label__sadness	sadness_357	"Sorry, but look at mapSubtract and further down in the source you will find plenty."
__label__sadness	sadness_358	Sorry ;-)
__label__sadness	sadness_359	"Thanks for the report, and sorry its taken so long to fix it."
__label__sadness	sadness_360	"well sorry, i didn't upload the right files"
__label__sadness	sadness_361	"Whoops, sorry."
__label__neutral	neutral_3831	I'll look into it.
__label__sadness	sadness_362	Sorry about the trouble.
__label__neutral	neutral_3832	Committed Ron's patch.
__label__sadness	sadness_363	"Sorry, in rushing to commit I forgot to add author during the commit."
__label__sadness	sadness_364	"Actually that's what this change did, sorry for the noise."
__label__sadness	sadness_365	Sorry for the noise..
__label__sadness	sadness_366	Completely missed issue 614..
__label__sadness	sadness_367	"Sorry typo: ""our part"" in place of ""one part"" above."
__label__sadness	sadness_368	"Sorry, I thought issue (and provided patch) were about cocoon-servlet-service-impl, used by either C2.2 and C3 but only now I see that instead they are related to cocoon-servlet-service-components (C2.2 only)."
__label__sadness	sadness_369	"I'm sorry Mark, I came back here to remove my comment as after building the app from scratch I have found that by default it used WhenExhaustedAction = GROW and not BLOCK!"
__label__sadness	sadness_370	"Sorry about that, tiredness."
__label__joy	joy_278	It works fine now!
__label__sadness	sadness_371	Sorry about the error guys.
__label__sadness	sadness_372	"Yes, sorry."
__label__neutral	neutral_3833	"It was meant to be ""super.initialize(context); line in its initialize(UimaContext)"" :)"
__label__sadness	sadness_373	"sorry, this bug is *not* fixed."
__label__neutral	neutral_3834	"The patch in FOP-1099 fixes it, though."
__label__sadness	sadness_374	Sorry.
__label__neutral	neutral_3835	I just saw that you commited Code that you did not write about here....
__label__sadness	sadness_375	Resolving again....
__label__sadness	sadness_376	"Sorry, yes I believe this has been resolved."
__label__neutral	neutral_3836	The problem here was simply that an EJBs class may not be one of its BeanTypes.
__label__neutral	neutral_3837	Just picking a type from one of the types was a simple enough solution.
__label__sadness	sadness_377	Sorry for the spam - but which test method - can't find any related to the SnapPuller on trunk.
__label__neutral	neutral_3838	But may is better to have no test method than the one with 10 aspects.
__label__neutral	neutral_3839	[~ashutoshc] Yeah you are right.
__label__sadness	sadness_378	Sorry about that.
__label__neutral	neutral_3840	[~appodictic] Sounds good and thanks!
__label__sadness	sadness_379	"Yes, the patch is badly named - sorry!"
__label__sadness	sadness_380	"Sorry, attached the file to the wrong issue."
__label__sadness	sadness_381	Sorry about that.
__label__sadness	sadness_382	I have a really bad habit of not reading thru all the bug comments before asking questions.
__label__sadness	sadness_383	"Sorry, I tought I could commit this patch but I did not realize that one of the files is in the framework (and I have not access to it)."
__label__sadness	sadness_384	"Sorry, on holiday last week and just catching up."
__label__sadness	sadness_385	"Thanks so much, sorry that this isn't in the appropriate place."
__label__sadness	sadness_386	"Sorry guys, I've been pretty busy @ work but I have been watching this."
__label__neutral	neutral_3841	I'll try to test out the patch this weekend and let you know how it goes.
__label__neutral	neutral_3842	"Yes, just made the same observation."
__label__sadness	sadness_387	Sorry for the confusion :)
__label__sadness	sadness_388	"Sorry, https://bugzilla.mozilla.org/show_bug.cgi?id=514760 is related but not same."
__label__sadness	sadness_389	"Sorry,I haven't tried you patch."
__label__sadness	sadness_390	Sorry for the noise.
__label__sadness	sadness_391	I will try to do more research on it.
__label__neutral	neutral_3843	Thanks.
__label__sadness	sadness_392	"Sorry, I meant to have this patch in sooner but got quite busy, I expect to have it soon."
__label__sadness	sadness_393	"Oh, sorry."
__label__sadness	sadness_394	I missed the context.
__label__neutral	neutral_3844	Patch in gzipped form.
__label__sadness	sadness_395	"For some reason, I couldn't upload the straight patch."
__label__sadness	sadness_396	Sorry guys
__label__sadness	sadness_397	"Oh, signed shift!"
__label__neutral	neutral_3845	of course!
__label__sadness	sadness_398	sorry :)
__label__sadness	sadness_399	Sorry - the federated build is still working out kinks...
__label__sadness	sadness_400	"The problem is that it builds awt, and that requires some dependencies."
__label__neutral	neutral_3846	Please read the README.txt in depends/libs/build It should work after that.
__label__neutral	neutral_3847	I'll add a README
__label__neutral	neutral_3848	"This is is my todo list still, but hasn't risen to the top."
__label__sadness	sadness_401	"if someone wants to work on this please go ahead, I still plan to, just no time yet."
__label__sadness	sadness_402	Sorry.
__label__neutral	neutral_3849	Yeah we can do it in 0.8.1 which should happen fairly quickly after 0.8 but we are really trying to lock down 0.8 to critical fixes and this is more of a new feature (though obviously desirable).
__label__sadness	sadness_403	Sorry for the hassle.
__label__sadness	sadness_404	WOW....you are right...I'm deeply sorry to bother you guys (and I'm also a bit embarrassed).
__label__neutral	neutral_3850	"Looks like there's a code freeze for 2.1.8 happening right about now, but this still hasn't been committed."
__label__neutral	neutral_3851	Is there a chance to get it in?
__label__sadness	sadness_405	Sorry to nag.
__label__sadness	sadness_406	"sorry, should have been getDataModel not getDataTable."
__label__sadness	sadness_407	Sorry I'm wrong about #2.
__label__sadness	sadness_408	Brain fart.
__label__sadness	sadness_409	"No unit test, sorry (but there's not much deltaQuery coverage anyway)."
__label__neutral	neutral_3852	Here is a fixed patch.
__label__sadness	sadness_410	Sorry for that.
__label__sadness	sadness_411	"Ah, sorry I misunderstood you."
__label__joy	joy_279	Fixed then :)
__label__neutral	neutral_3853	I think this was a dud.
__label__sadness	sadness_412	Sorry for the noise.
__label__sadness	sadness_413	"Aaron, sorry about this."
__label__sadness	sadness_414	"The guy on our team that was going to do this was swamped, so I re-assigned this to you."
__label__sadness	sadness_415	"Sorry, missed this."
__label__neutral	neutral_3854	Will take a look at it.
__label__neutral	neutral_3855	I didn't 'svn up' before I looked at the code :).
__label__sadness	sadness_416	Sorry for the noise.
__label__sadness	sadness_417	My patch wouldn't compile.
__label__sadness	sadness_418	Here is addendum to fix (Sorry about build breakage)
__label__sadness	sadness_419	"Sorry, you're right."
__label__sadness	sadness_420	"Line 1664 (sorry, the 0.94 codeline)"
__label__sadness	sadness_421	Sorry - I just didn't read the issues carefull enough.
__label__neutral	neutral_3856	"It's the ObjectMessage that could alternatively be sent as an XStream message, right?"
__label__sadness	sadness_422	"Sorry about that, fixed now."
__label__sadness	sadness_423	sorry about this.
__label__neutral	neutral_3857	i committed GIRAPH-90 with wrong reference in commit message.
__label__sadness	sadness_424	My error.
__label__sadness	sadness_425	Tried some more stuff and realized I was doing it wrong.
__label__sadness	sadness_426	Sorry.
__label__sadness	sadness_427	"Sorry, here's the test that reproduces the issue."
__label__sadness	sadness_428	"Sorry if this spam's things, however it's unlikely that I'll work on these."
__label__neutral	neutral_3858	Verified this with trunk.
__label__sadness	sadness_429	Sorry for the trouble.
__label__sadness	sadness_430	"sorry old xml here is the used one: <?xml version=""1.0"" encoding=""UTF-8""?> <root><value>?Â¤?Â¶?Â¼ und ??????"
__label__neutral	neutral_3859	This has been riding in 0.94 for too long.
__label__sadness	sadness_431	"Sorry [~kumarr], let's just do this in 0.96."
__label__neutral	neutral_3860	1
__label__sadness	sadness_432	"Sorry for the super-slow uptake on this, the new job is using up all of my limited brain resources."
__label__sadness	sadness_433	"Well it's me that didn't get the whole point, now i got more, sorry for the noise."
__label__neutral	neutral_3861	"One question, if you need to override the decorated service why you need it?"
__label__neutral	neutral_3862	"Thanks, Willem."
__label__sadness	sadness_434	"Sorry, I was trying to get to the wiki but it's been a busy week."
__label__sadness	sadness_435	s/[~apurtell]/[~lhofhansl]/ Sorry guys.
__label__sadness	sadness_436	"Sorry, grabbed the wrong ticket."
__label__neutral	neutral_3863	Switched to @GeneratedValue(strategy = GenerationType.TABLE) for all entities rave-portal was using GenerationType.SEQUENCE (incompatible with MySQL) while rave-shindig was using GenerationType.IDENTITY (incompatible with Oracle)
__label__neutral	neutral_3864	Eventually I decided to include just one patch file (instead of code and test) since it was simpler after all.
__label__neutral	neutral_3865	Please be sure to review the following: # Collector class and documentation.
__label__neutral	neutral_3866	# Methods deprecation.
__label__neutral	neutral_3867	# New TestTopDocsCollector as well as test cases in TestSort.
__label__neutral	neutral_3868	One underlying cause of this issue is QPID-4731
__label__sadness	sadness_437	Sorry that I think I missed some discussion in the mailing list.
__label__neutral	neutral_3869	The implementation and test and BreakIterator is attached.
__label__neutral	neutral_3870	sync'ed to trunk
__label__neutral	neutral_3871	I saw this behavior in a stress test just now as well on tip of 20.
__label__neutral	neutral_3872	"Since we know meta splitting doesn't work, can we put in some code that allows META's one region to grow without bound regardless of its size?"
__label__neutral	neutral_3873	"New patch, removing ""preserve holes"" option from AnalyzingCompletionLookup: you can simply tell your StopFilter whether or not holes are meaningful."
__label__neutral	neutral_3874	"Cheers, Mick"
__label__neutral	neutral_3875	This code is generated.
__label__sadness	sadness_438	"Unless we switch to Antlr 3.0 ( and even though, I'm not sure this would fix the problem), there is nothing we can do."
__label__neutral	neutral_3876	Supplemental patch committed.
__label__neutral	neutral_3877	I'm leaving this issue open for further discussion.
__label__neutral	neutral_3878	Committed to trunk.
__label__neutral	neutral_3879	"3.x does not have a mechanism to pass state across core reloads, and that's a change I'd rather leave to 4.x."
__label__neutral	neutral_3880	Might simply be best to track all directories and close them on shutdown.
__label__neutral	neutral_3881	"Shazron, I am using alert to visually notify myself."
__label__neutral	neutral_3882	"Inferring that it might make a difference, based on your comment, I tried using 'console.log()' and the unexpected behavior was no longer present."
__label__neutral	neutral_3883	"Attached is the patch, running derbyall right now."
__label__neutral	neutral_3884	Reviews appreciated.
