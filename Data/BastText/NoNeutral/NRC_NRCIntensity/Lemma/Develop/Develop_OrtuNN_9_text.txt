__label__anger	pretty much everything that fsnamesystem ( ie .
__label__anger	damn , chuck be scary .
__label__anger	weird .
__label__anger	pull it back in if you think different .
__label__anger	this suck badly .
__label__anger	too bad we can not use position:fixed in ie0 .
__label__anger	bq. this be solr 's fault by have a getter that do some heavy duty xml shit .
__label__anger	my bad .
__label__anger	what the hell , i will give this a shot .
__label__anger	it must be lose somewhere .
__label__anger	pull it back in if you think different .
__label__anger	damn maven !
__label__anger	i be start to think of " dll hell . "
__label__anger	oh , my stupid :)
__label__anger	damn .
__label__anger	both equally bad .
__label__anger	that 's bad content - type from gsoap .
__label__anger	weird .
__label__anger	who the fuck be ask for score , but not the max score , and why do their insanely specialized use case justify all these booleans on a central lucene class .
__label__anger	hell or high water .
__label__anger	the defect from hell , be scared â€¦
__label__anger	i have stupidly delete the original test dir , but judge from the suite 's output file , no output be create after hour .
__label__anger	heh , that 's #crd# hell of a bug , byte exactly , eh ?
__label__anger	since this patch be so damn large already i wo not be make anymore change to this other than critical / blocker bug fix .
__label__anger	upvote ( damn intellij , it 's not like patch format have not be standard for year )
__label__anger	how on earth be it buggy ?
__label__anger	i sure as hell do not want to start attach model for the sake of detach them directly afterwards .
__label__joy	dc0d0eb0e0b0d0fd0b0ab0a0b0ec0d0b ts- : spdy plugin crash on connection close thanks for testing !
__label__joy	cool . sound good to me .
__label__joy	the fknames patch look good !
__label__joy	nice feature , lar ! !
__label__joy	upvote , the late patch look good to me .
__label__joy	i think its a good idea to go ahead and put a patch together so we can discuss it directly .
__label__joy	i think sstabledeletingtask be a good spot , i just be not sure if that would be appropriate .
__label__joy	great , thanks joel .
__label__joy	hi , very cool !
__label__joy	patch look good . #crd# minor comment , planhelper . loadstorefinder may well be planhelper . loadstorenativefinder .
__label__joy	work fine . thanks
__label__joy	i will be the sponsor for your beer the next time we meet .
__label__joy	upvote , patch look good .
__label__joy	any chance to get a patch also for this ? ðŸ™‚
__label__joy	look good . thanks !
__label__joy	holy crap that work ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !
__label__joy	thanks , it work fine !
__label__joy	upvote look good
__label__joy	get it , thanks for the explanation .
__label__joy	i kinda like the black acctually .. but that may largely be due to my prefer the " fire " solr logo over the futuristic magnifying glass ( the red / orange contrast nicely with the black / grey . to my mind , the " solr " " sun " connection have allways be really cool ..
__label__joy	upvote great job pat .
__label__joy	upvote this look good to me .
__label__love	commit to branch and trunk . thanks for review stack .
__label__love	thank you , gregory , eugene . verify on harmony - r0 - msvc - debug .
__label__love	gregory , thanks - the patch be apply as expect .
__label__love	hi holly thanks ! i have the #crd# comment - where be the code for internalrecursivebundletracker ? i do not see it in the patch do i miss the source code for it ? lin
__label__love	hi steve , gentle reminder as per your instruction about review this patch . thanks !
__label__love	fix rev . thanks jose !
__label__love	thanks richard , patch be apply to luni module at repo revision . please check that the patch be apply as you expect . ( i have get strange commit notification with message : [ .. line strip .. ] )
__label__love	i just commit this . thanks , jim !
__label__love	thanks vladimir - the patch be apply to bti branch at r0 . please check that the patch be apply as you expect .
__label__love	commit . thanks ashish !
__label__love	thanks
__label__love	fix check in at revision . thanks xu .
__label__love	commit revision . thanks shai !
__label__love	i will look into the namespace handler . thanks . yes , i should have add the different event handle support to the todo above . i need to think more about this and look into the camel code a bit more . use just the endpoint api , i could not create route on the fly , hence the polling consumer approach . i will keep hack away at in in my toolbox when customer need dictate . be i miss something in your approach , how would i do this then in the xml dsl use your approach ? i think virtual routing be a known limitation of camel when you start to deploy large scale system . out of curiosity have you see camel ever be deploy with 's of route ( and / or route file ) ? i think this would have fd and thread overkill problem . everything repeat itself ðŸ™‚
__label__love	thanks a lot for the review , todd . the test failure be unrelated and be already track by another jira . i be go to commit this momentarily .
__label__love	ok . i will do that . adrian , thanks for take a look at this . ðŸ™‚
__label__love	hi george ; i just check in a fix for the empty stack exception . can you please verify ? thanks .
__label__love	i really like what i be see so far .
__label__love	thanks for that comment richard ! i be labor under the ( false ) impression that i could not change the doc that go with our previous release ; but i see these be come from a copy on our svn site ; and we could actually change that #crd# . anybody object to my do that ? i could correct the link ; and also indicate this release be level out of date .
__label__love	thanks laura .
__label__love	thanks edgar for find this #crd# !
__label__love	[ ~ bikassaha ] thanks for the head - up bikas ! this jira be not concerned with the tez integration for pig and be simply the abstraction in pig to allow for alternate executionengines in pig . but will certainly change this on the tez integration side of stuff . thanks a lot [ ~ cheolsoo ] for continue this ! i think everything look good from my end . i can certainly see why we may want to keep this on a different branch until everything be finalize . certain thing may still need more work . for example , outputstats be not complete abstract out , as it still have reference to postore which be a mr implementation construct . scriptstate / ppnl / jobstats may still need more abstraction ( especially ppnl ) and reworking to incorporate a new executionengine abstraction . i think what we have do here be the minimum foundation for an abstraction though , and it would be appropriate to put into trunk , but these be not my decision to make . with regard to public method that be change , i do not think most of them be a big deal , besides as cheolsoo say , the pigserver throw pigexception . i never think ioexception be a good exception to throw , but i think revert pigserver back to ioexception as it be userfacing code be not a big deal . the rest of the method signature change should not be worrisome because most of them be internal to the project . however , the change from jobstats to mrjobstats , while necessary ( as each executionengine would have it 's own type of jobstats it would present to the end user ) , could be problematic because it be userfacing code and would probably break people who be previously use jobstats . that i think be the most important thing to keep in mind . the task of make the ppnl and jobstats clearly tie to the executionengine should be think through also .
__label__love	please contact me if you need any clarification .
__label__love	a pleasure :> .
__label__love	hi . the code above be a copy of the charsetutil class just run within a junit test case . there be no exception other than #hlink# . be you able to reproduce the error ? thanks richard
__label__love	thanks , omkar ! i commit this to branch- as well .
__label__love	thanks attila . i fix the test / header already
__label__love	change look good . could you run regression test with your patch and let us know how it go ? thanks kathey
__label__love	i verify the fix use the #hlink# cvs snapshot . thanks !
__label__love	i just commit this . thanks , sameer !
__label__love	thanks , do that . hopefully it sync now . cheer -- kurt
__label__love	thanks , that look good now ; much easy for the end - user .
__label__love	johannes -- thanks for the complete testcase ! sorry about take so long to fix this #crd# . thanks , rick
__label__love	commit , thanks for the review , avery !
__label__love	thanks for the patch
__label__love	apply to trunk . thank you for the patch erik .
__label__love	mathias , please close this issue as it be not reproduce any more â€¦ thanks .
__label__love	look forward to your patch .
__label__love	in fact , if you happen to know why observerhammerquorumtest be fail with this late patch , i would love to hear .
__label__love	patch commit , rev : 0f0fa0b0d0bb0b0f0a0b0 . thanks mike !
__label__love	commit to branch and trunk , thanks for the review stack .
__label__love	commit as r0 . thanks for review sijie .
__label__love	thanks kathey and myrna . the release note look good and it pass the releasenotereader 's check .
__label__love	bruno , you mention in a gtalk conversation that you have a patch for this , but i can not find it here in jira â€¦ could you attach it please ? thanks !
__label__love	commit to branch . thanks , remus !
__label__love	thanks adrien for look into this , nice explanation !
__label__love	thank you for the patch xuefu ! i have commit it to trunk !
__label__love	thanks bryan for convert these test . in use the derby- conversion tool , can you double check that it do not omit the fail assert method after a method call in a try - catch block when the statement be expect to fail . e.g. instead of try { #hlink# ( command ) ; } catch ( sqlexception e ) { assertsqlstate ( " " , e ) ; } it should be : try { #hlink# ( command ) ; fail ( " command expect to fail " + command ) ; } catch ( sqlexception e ) { assertsqlstate ( " " , e ) ; }
__label__love	commit . thanks jarek
__label__love	hi nick , can you please re-create this patch as i can not get the code to compile ? for starter , i can not get the class attributeimplitem to compile . please use the late trunk when do so thanks . -- george
__label__love	hi john , i would agree , use object notification be probably a clean way to do this .
__label__love	i have just commit this . thanks aaron !
__label__love	patch apply . thanks !
__label__love	thanks for review and test case , knut .
__label__love	hi mike , do you know how to get the virtual machine file ? the link to download from the rcmes web site be broken . thanks . -- jinwon kim dept. atmospheric and oceanic science and joint institute for regional earth system science and engineering university of california , los angeles los angeles , ca
__label__love	commit revision . thanks vinay .
__label__love	ludger ; thanks for the patch . i have just commit it . see svn rev . thiwanka ; thanks for your help in investigate this issue .
__label__love	i have commit this . thanks , rodrigo !
__label__love	great - thanks for the head up ben !
__label__surprise	woo hoo !
__label__surprise	do i miss something there ?
__label__love __label__joy	i do it work fine with and ios0 . thanks ! dominic
__label__love __label__joy	sound good . we will postpone hbase- til then . thanks !
__label__love __label__joy	patch look good to me too . thanks for all the work .
__label__love __label__joy	no , this be on ( sorry , i should have mention that before ) . that 's great to know , thanks !
__label__love __label__joy	> tilman hausherr hello , finally it work ! i just download the revision , and bulded it with ant . and add the new * . jar to my project 's build path . it print very well . thank you very much .
__label__love __label__joy	thanks ! ðŸ™‚
__label__fear	triage : not for xalan - j . we still need to evaluate this in light of gary 's point : exactly what location should we report for result tree event in this kind of situation ? i be not sure we intend to set the locator in this particular situation . also ; if we never set the locator ; then we be still follow the sax spec - while this be somewhat useful ; it 's still an optional feature .
__label__sadness	sorry about that , tiredness .
__label__sadness	sorry if this be not clear , and yes , by < blank > i mean an empty string .
__label__sadness	sorry to let you lose a wild goose chase .
__label__sadness	another backport ( for a different jira ) of mine be fail and i want to see if i can figure out what might be wrong there before do a new backport .
__label__sadness	try some more stuff and realize i be do it wrong .
__label__sadness	which api at the thrift client you be refer ?
__label__sadness	sorry , i miss. this bug be same str- . i change resolution to invalid .
__label__sadness	sorry for that .
__label__sadness	forget to add that i also try this with and without hbase-
__label__sadness	add to trunk in # .x in # sorry about visad . unimplementedexception !
__label__sadness	my apology for the confusion .
__label__sadness	maurice i do not have such option or maybe i do not know where it be .
__label__sadness	phil , i must have miss this email . i be sorry . i will get this do , and the other change to support the updatingmultiplelinearregression class . i update my source and notice the change be miss . i do my detective work and notice this . mea culpa ! ! - greg
__label__sadness	sorry .
__label__sadness	sorry but i be run on the branch . we will hopefully have a release out shortly ( in a week or so ) that should fix this issue . although an example would still be helpful so we could add a cactus test that make sure we do not reintroduce the problem .
__label__sadness	sorry , unassigning myself from this backport .
__label__sadness	sorry for the trouble .
__label__sadness	to upgrade to a recent version of jackrabbit , see #hlink# i be afraid i can not say much about the risk .
__label__sadness	ok , i just download trunk and the patch be % the same with mine so i will close the issue nowâ€¦.one comment though and sorry for nitpickingâ€¦.should not the #ord# constructor simply be " this ( pattern , null ) ; " or even good " this ( pattern , " default " ) ; " ? in any case i can confirm it work - it just look a bit ugly duplicate code like that â€¦ ðŸ™‚
__label__sadness	sorry for delay . this patch be include lru cache . but change static class into member be not do . what should i do ?
__label__sadness	damn .
__label__sadness	sorry , that should have say fix via hadoop- , not .
__label__sadness	so , sorry i can not be more obliging .
__label__sadness	i will figure out the detail and do the port later this week if you do not get to it #ord# .
__label__sadness	the guy on our team that be go to do this be swamp , so i re-assigned this to you .
__label__sadness	the patch go to the wrong bug .
__label__sadness	bq. i be gon to hold off on lucene- until we figure this #crd# out â€¦ because it would make your getsequentialsubreaders in the sync = true case quite heavy ( without modification ) . sorry , i be wrong on this â€¦ i totally forget the norm cache be lazy - load always in that patch . i will commit lucene- it should nt affect this !
__label__sadness	oh , ok .
__label__sadness	but app developer should always explicitly set it base on their application my guess be that a large enough group of people take the default that it matter .
__label__sadness	app developer never do what they should ðŸ™‚
__label__sadness	the problem be that it build awt , and that require some dependency .
__label__sadness	sorry , should have be getdatamodel not getdatatable .
__label__sadness	actually that 's what this change do , sorry for the noise .
__label__sadness	sorry , i tought i could commit this patch but i do not realize that #crd# of the file be in the framework ( and i have not access to it ) .
__label__sadness	bq. ) sorry , do not create a patch for the readme since it be a small change , it be include in this patch with the comment revision .
